{"version":3,"sources":["components/settings/SettingsPage.module.css","io/reconnecting-websocket.js","components/game/GamePage.module.css","components/settings/playback/PlaybackSpeed.module.css","utils/url.js","components/blank-state.jsx","theme/index.js","components/loading-indicator.jsx","components/game-not-found.jsx","components/grid.jsx","components/board.jsx","io/websocket.js","utils/inline-svg.js","utils/engine-client.js","components/scoreboard/error-message/ErrorMessage.jsx","components/scoreboard/status-indicator/StatusIndicator.jsx","components/avatar.jsx","components/scoreboard.jsx","components/mediaControls.jsx","components/logo.jsx","components/game.jsx","actions/action-types.js","components/settings/defaults.js","actions/index.js","components/game/GamePage.jsx","app/storage.js","components/settings/settings-slice.js","components/settings/playback/PlaybackSpeed.jsx","components/settings/SettingsPage.jsx","App.jsx","utils/game-state.js","reducers/index.js","app/store.js","index.js"],"names":["module","exports","define","window","ReconnectingWebSocket","prototype","onopen","event","onclose","onconnecting","onmessage","onerror","debugAll","CONNECTING","WebSocket","OPEN","CLOSING","CLOSED","url","protocols","options","settings","debug","automaticOpen","reconnectInterval","maxReconnectInterval","reconnectDecay","timeoutInterval","maxReconnectAttempts","binaryType","key","this","reconnectAttempts","readyState","protocol","ws","self","forcedClose","timedOut","eventTarget","document","createElement","generateEvent","s","args","evt","createEvent","initCustomEvent","addEventListener","bind","removeEventListener","dispatchEvent","open","reconnectAttempt","console","localWs","timeout","setTimeout","close","clearTimeout","e","isReconnect","code","reason","wasClean","Math","pow","data","send","refresh","parseArg","a","parts","split","value","undefined","decodeURIComponent","makeQueryString","query","sep","result","httpToWsProtocol","mappings","http","https","from","to","substr","length","Error","join","joinPair","b","cleanA","replace","cleanB","reduce","current","next","BlankState","location","origin","React","Component","colors","breakpoints","themes","LoadingIndicatorWrapper","styled","display","alignItems","justifyContent","height","width","LoadingIndicator","className","style","color","NotFoundWrapper","GameNotFound","CELL_SIZE","FOOD_SIZE","toFixed","END_OVERLAP","DIRECTIONS_CW","GRID_ROWS","toGridSpaceX","slot","toGridSpaceY","getPartWidth","part","extraWidth","direction","getPartHeight","extraHeight","getPartXOffset","xBias","x","getPartYOffset","yBias","y","getCornerPartXOffset","type","getCornerPartYOffset","getHeadFillerXOffset","getHeadFillerYOffset","getTailFillerXOffset","getTailFillerYOffset","getFillerWidth","CELL_SPACING","getFillerHeight","getOpacity","snake","highlightedSnake","isDead","_id","getPartOpacity","shadeForOverlap","isOverlapped","getPartColor","range","size","i","push","checkIfCornerPart","partIndex","body","d1","d2","behind","abs","indexOf","isOverlappedByTail","head","Grid","snakeIndex","renderHeadPart","renderTailPart","renderCornerPart","renderMiddlePart","getHeadXOffset","getHeadYOffset","box","headSvg","viewBox","baseVal","transform","halfX","halfY","getHeadTransform","viewBoxStr","opacity","fill","shapeRendering","dangerouslySetInnerHTML","__html","innerHTML","effectiveSpace","cornerType","determineCornerType","d","getTailXOffset","getTailYOffset","tailSvg","getTailTransform","row","col","label","fontSize","props","rows","map","_","renderLabel","columns","snakes","unsortedSnakes","food","hazards","sortedSnakes","concat","sort","aOrder","bOrder","gridCellsWithSnakeParts","Array","j","viewBoxWidth","viewBoxHeight","hazardOpacity","parseFloat","overflow","showCoordinateLabels","maxWidth","maxHeight","renderLabels","theme","reverse","renderPart","o","hazardIndex","fillOpacity","f","foodIndex","foodImage","href","cx","cy","r","renderGrid","BOARD_SIZE","Board","boardSize","turn","streamAll","receive","turns","done","Promise","resolve","reject","ReconnectingWebsocket","obj","JSON","parse","eventData","Data","Turn","loaded","doesntExist","loadSvgs","paths","all","requireSvg","getSvg","path","fetchSvg","fetch","response","text","svgText","svg","makeDom","wrapper","trim","firstChild","svgExists","exists","startsWith","warn","DEFAULT_SNAKE_HEAD","DEFAULT_SNAKE_TAIL","log","status","json","then","responseJson","error","delay","millis","getReadableCauseOfDeath","death","cause","eliminatedBy","getAllSvgs","HeadType","TailType","unique","Set","assignHeadAndTailUrls","getSnakeHeadSvgUrl","getSnakeTailSvgUrl","setHeadAndTailSvgs","HeadSvg","TailSvg","isIllegalSvgPath","nameOrPath","svgUrlFromName","base","relative","prepareFrame","frame","Snakes","fetchGameInfo","baseUrl","gameId","get","streamAllEvents","receiveEvent","onEngineEvent","engineEvent","Type","chain","game","wsUrl","getFrameByTurn","frames","filter","errorColor","ErrorMessage","message","toString","cursor","margin","padding","q","StatusIndicator","errorMessage","AvatarWrapper","isEliminated","Name","textShadow","Length","marginLeft","AuthorWrapper","fontWeight","flexDirection","Author","flexGrow","Latency","latency","HealthBarWrapper","marginTop","background","borderRadius","HealthBar","backgroundColor","CauseOfDeath","lineHeight","Avatar","state","showError","name","author","health","highlighted","orderSnakes","aliveSnakes","aLower","toLowerCase","bLower","deadSnakes","Wrapper","hide","Scoreboard","toggleHighlight","getSnakeToHighlight","highlightSnake","setState","onClick","MediaControlsWrapper","KeyboardShortcutsWrapper","position","ShortcutsPane","ButtonWrapper","Button","Scrubber","MediaControls","paneHidden","handleParentKeyboardEvent","handleKeyEvent","keyboardCodeMap","handleReload","reloadGame","handlePlayPause","toggleGamePause","handleBackward","stepBackwardFrame","handleForward","stepForwardFrame","handleScrubMouseDown","pauseGame","handleScrubbing","stepToTurn","parseInt","target","handleSettings","persistAvailable","history","handleShortcutPaneShowToggle","preventDefault","KeyR","ArrowLeft","ArrowRight","Space","Settings","renderControls","hasAllFrames","currentFrame","max","maxTurn","showFrameScrubber","min","onMouseDown","onChange","disabled","hideControls","paused","settingsInfo","renderScrubbing","title","handleKeys","Object","values","onKeyEvent","withRouter","SVGWrapper","StyledLogo","id","x1","y1","x2","y2","gradientTransform","gradientUnits","offset","stopColor","xlinkHref","BoardTitle","textAlign","textTransform","HeaderWrapper","LogoWrapper","TurnCount","TurnCountValue","BoardWrapper","hideScoreboard","ScoreboardWrapper","Ruleset","Game","togglePlayButtons","toggleTheme","engine","hideLogo","setGameOptions","fetchFrames","invalidArgs","gameNotFound","renderGame","styles","grid","hideMediaControls","ruleset","SET_GAME_OPTIONS","SET_THEME","GAME_OVER","GAME_NOT_FOUND","FETCH_FRAMES","REQUEST_FRAMES","RECEIVE_FRAME","SET_CURRENT_FRAME","PAUSE_GAME","RESUME_GAME","HIGHLIGHT_SNAKE","RECEIVE_EVENT_END","TOGGLE_SETTINGS_VIEW","THEME_CHANGED","initialSettings","frameRate","autoplay","receiveFrame","types","receiveEventEnd","endEvent","setCurrentFrame","resumeGame","playFromFrame","dispatch","getState","gameOptions","slice","frameIndex","slicedFrames","ceiledFps","ceil","delayMillis","lastFrame","gameOver","loop","showHide","themeChanged","search","arg","connect","gameState","boardTheme","engineUrl","eventType","numFrames","themeToSet","nextFrame","stepToFrame","prevFrame","snakeId","storageAvailable","storage","setItem","removeItem","DOMException","getLocalSetting","localStorage","getItem","setLocalSetting","settingsSlice","createSlice","initialState","reducers","frameRateUpdated","action","payload","themeSelected","autoPlayUpdated","showFrameScrubberUpdated","showCoordinateLabelsUpdated","actions","currentFrameRate","currentTheme","currentAutoplay","currentShowFrameScrubber","currentShowCoordinateLabels","speedRanges","defaultValueHandler","defaultValue","PlaybackSpeed","default","changeHandler","fps","sliderValue","valueAsNumber","call","valueChanged","labels","SettingsPage","useHistory","useSelector","playbackSpeed","useDispatch","useEffect","info","inputContainer","checked","radio","checkmark","rel","centered","goBack","App","component","GamePage","TYPE_HEAD","TYPE_TAIL","TYPE_BODY","formatFrame","Body","X","Y","Food","cleanFrame","newSnakes","formatSnake","forEach","index","formatSnakes","formatPositions","Hazards","sanitizeFrame","sanitizedFrame","cloneDeep","renderedParts","shouldRenderPart","getType","formatPosition","getDirection","prevPart","formatDirection","formatSnakePart","Color","ID","Health","timing","TimingMicros","Death","formatDeath","tail","squad","Squad","shout","Shout","Cause","EliminatedBy","tailIndex","currPart","nextPart","positions","pos","windowPostMessage","parent","postMessage","Height","Width","find","store","configureStore","reducer","rootReducer","settingsReducer","middleware","getDefaultMiddleware","immutableCheck","serializableCheck","preloadedState","checkAutoplay","checkShowFrameScrubber","Number","rehydrateLocalSettings","rehydrateInitialState","subscribe","render","getElementById"],"mappings":"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","file":"static/js/main.4fa12c79.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"info\":\"SettingsPage_info__hnKuB\",\"inputContainer\":\"SettingsPage_inputContainer__OMy_9\",\"row\":\"SettingsPage_row__FjkX8\",\"centered\":\"SettingsPage_centered__2a9Zh\",\"checkmark\":\"SettingsPage_checkmark__1GbZH\",\"radio\":\"SettingsPage_radio__2oWfC\"};","/* eslint-disable */\n\n// MIT License:\n//\n// Copyright (c) 2010-2012, Joe Walnes\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n/**\n * This behaves like a WebSocket in every way, except if it fails to connect,\n * or it gets disconnected, it will repeatedly poll until it successfully connects\n * again.\n *\n * It is API compatible, so when you have:\n *   ws = new WebSocket('ws://....');\n * you can replace with:\n *   ws = new ReconnectingWebSocket('ws://....');\n *\n * The event stream will typically look like:\n *  onconnecting\n *  onopen\n *  onmessage\n *  onmessage\n *  onclose // lost connection\n *  onconnecting\n *  onopen  // sometime later...\n *  onmessage\n *  onmessage\n *  etc...\n *\n * It is API compatible with the standard WebSocket API, apart from the following members:\n *\n * - `bufferedAmount`\n * - `extensions`\n * - `binaryType`\n *\n * Latest version: https://github.com/joewalnes/reconnecting-websocket/\n * - Joe Walnes\n *\n * Syntax\n * ======\n * var socket = new ReconnectingWebSocket(url, protocols, options);\n *\n * Parameters\n * ==========\n * url - The url you are connecting to.\n * protocols - Optional string or array of protocols.\n * options - See below\n *\n * Options\n * =======\n * Options can either be passed upon instantiation or set after instantiation:\n *\n * var socket = new ReconnectingWebSocket(url, null, { debug: true, reconnectInterval: 4000 });\n *\n * or\n *\n * var socket = new ReconnectingWebSocket(url);\n * socket.debug = true;\n * socket.reconnectInterval = 4000;\n *\n * debug\n * - Whether this instance should log debug messages. Accepts true or false. Default: false.\n *\n * automaticOpen\n * - Whether or not the websocket should attempt to connect immediately upon instantiation. The socket can be manually opened or closed at any time using ws.open() and ws.close().\n *\n * reconnectInterval\n * - The number of milliseconds to delay before attempting to reconnect. Accepts integer. Default: 1000.\n *\n * maxReconnectInterval\n * - The maximum number of milliseconds to delay a reconnection attempt. Accepts integer. Default: 30000.\n *\n * reconnectDecay\n * - The rate of increase of the reconnect delay. Allows reconnect attempts to back off when problems persist. Accepts integer or float. Default: 1.5.\n *\n * timeoutInterval\n * - The maximum time in milliseconds to wait for a connection to succeed before closing and retrying. Accepts integer. Default: 2000.\n *\n */\n(function(global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([], factory);\n  } else if (typeof module !== \"undefined\" && module.exports) {\n    module.exports = factory();\n  } else {\n    global.ReconnectingWebSocket = factory();\n  }\n})(this, function() {\n  if (!(\"WebSocket\" in window)) {\n    return;\n  }\n\n  function ReconnectingWebSocket(url, protocols, options) {\n    // Default settings\n    var settings = {\n      /** Whether this instance should log debug messages. */\n      debug: false,\n\n      /** Whether or not the websocket should attempt to connect immediately upon instantiation. */\n      automaticOpen: true,\n\n      /** The number of milliseconds to delay before attempting to reconnect. */\n      reconnectInterval: 1000,\n      /** The maximum number of milliseconds to delay a reconnection attempt. */\n      maxReconnectInterval: 30000,\n      /** The rate of increase of the reconnect delay. Allows reconnect attempts to back off when problems persist. */\n      reconnectDecay: 1.5,\n\n      /** The maximum time in milliseconds to wait for a connection to succeed before closing and retrying. */\n      timeoutInterval: 2000,\n\n      /** The maximum number of reconnection attempts to make. Unlimited if null. */\n      maxReconnectAttempts: null,\n\n      /** The binary type, possible values 'blob' or 'arraybuffer', default 'blob'. */\n      binaryType: \"blob\"\n    };\n    if (!options) {\n      options = {};\n    }\n\n    // Overwrite and define settings with options if they exist.\n    for (var key in settings) {\n      if (typeof options[key] !== \"undefined\") {\n        this[key] = options[key];\n      } else {\n        this[key] = settings[key];\n      }\n    }\n\n    // These should be treated as read-only properties\n\n    /** The URL as resolved by the constructor. This is always an absolute URL. Read only. */\n    this.url = url;\n\n    /** The number of attempted reconnects since starting, or the last successful connection. Read only. */\n    this.reconnectAttempts = 0;\n\n    /**\n     * The current state of the connection.\n     * Can be one of: WebSocket.CONNECTING, WebSocket.OPEN, WebSocket.CLOSING, WebSocket.CLOSED\n     * Read only.\n     */\n    this.readyState = WebSocket.CONNECTING;\n\n    /**\n     * A string indicating the name of the sub-protocol the server selected; this will be one of\n     * the strings specified in the protocols parameter when creating the WebSocket object.\n     * Read only.\n     */\n    this.protocol = null;\n\n    // Private state variables\n\n    var self = this;\n    var ws;\n    var forcedClose = false;\n    var timedOut = false;\n    var eventTarget = document.createElement(\"div\");\n\n    // Wire up \"on*\" properties as event handlers\n\n    eventTarget.addEventListener(\"open\", function(event) {\n      self.onopen(event);\n    });\n    eventTarget.addEventListener(\"close\", function(event) {\n      self.onclose(event);\n    });\n    eventTarget.addEventListener(\"connecting\", function(event) {\n      self.onconnecting(event);\n    });\n    eventTarget.addEventListener(\"message\", function(event) {\n      self.onmessage(event);\n    });\n    eventTarget.addEventListener(\"error\", function(event) {\n      self.onerror(event);\n    });\n\n    // Expose the API required by EventTarget\n\n    this.addEventListener = eventTarget.addEventListener.bind(eventTarget);\n    this.removeEventListener = eventTarget.removeEventListener.bind(\n      eventTarget\n    );\n    this.dispatchEvent = eventTarget.dispatchEvent.bind(eventTarget);\n\n    /**\n     * This function generates an event that is compatible with standard\n     * compliant browsers and IE9 - IE11\n     *\n     * This will prevent the error:\n     * Object doesn't support this action\n     *\n     * http://stackoverflow.com/questions/19345392/why-arent-my-parameters-getting-passed-through-to-a-dispatched-event/19345563#19345563\n     * @param s String The name that the event should use\n     * @param args Object an optional object that the event will use\n     */\n    function generateEvent(s, args) {\n      var evt = document.createEvent(\"CustomEvent\");\n      evt.initCustomEvent(s, false, false, args);\n      return evt;\n    }\n\n    this.open = function(reconnectAttempt) {\n      ws = new WebSocket(self.url, protocols || []);\n      ws.binaryType = this.binaryType;\n\n      if (reconnectAttempt) {\n        if (\n          this.maxReconnectAttempts &&\n          this.reconnectAttempts > this.maxReconnectAttempts\n        ) {\n          return;\n        }\n      } else {\n        eventTarget.dispatchEvent(generateEvent(\"connecting\"));\n        this.reconnectAttempts = 0;\n      }\n\n      if (self.debug || ReconnectingWebSocket.debugAll) {\n        console.debug(\"ReconnectingWebSocket\", \"attempt-connect\", self.url);\n      }\n\n      var localWs = ws;\n      var timeout = setTimeout(function() {\n        if (self.debug || ReconnectingWebSocket.debugAll) {\n          console.debug(\n            \"ReconnectingWebSocket\",\n            \"connection-timeout\",\n            self.url\n          );\n        }\n        timedOut = true;\n        localWs.close();\n        timedOut = false;\n      }, self.timeoutInterval);\n\n      ws.onopen = function(event) {\n        clearTimeout(timeout);\n        if (self.debug || ReconnectingWebSocket.debugAll) {\n          console.debug(\"ReconnectingWebSocket\", \"onopen\", self.url);\n        }\n        self.protocol = ws.protocol;\n        self.readyState = WebSocket.OPEN;\n        self.reconnectAttempts = 0;\n        var e = generateEvent(\"open\");\n        e.isReconnect = reconnectAttempt;\n        reconnectAttempt = false;\n        eventTarget.dispatchEvent(e);\n      };\n\n      ws.onclose = function(event) {\n        clearTimeout(timeout);\n        ws = null;\n        if (forcedClose) {\n          self.readyState = WebSocket.CLOSED;\n          eventTarget.dispatchEvent(generateEvent(\"close\"));\n        } else {\n          self.readyState = WebSocket.CONNECTING;\n          var e = generateEvent(\"connecting\");\n          e.code = event.code;\n          e.reason = event.reason;\n          e.wasClean = event.wasClean;\n          eventTarget.dispatchEvent(e);\n          if (!reconnectAttempt && !timedOut) {\n            if (self.debug || ReconnectingWebSocket.debugAll) {\n              console.debug(\"ReconnectingWebSocket\", \"onclose\", self.url);\n            }\n            eventTarget.dispatchEvent(generateEvent(\"close\"));\n          }\n\n          var timeout =\n            self.reconnectInterval *\n            Math.pow(self.reconnectDecay, self.reconnectAttempts);\n          setTimeout(\n            function() {\n              self.reconnectAttempts++;\n              self.open(true);\n            },\n            timeout > self.maxReconnectInterval\n              ? self.maxReconnectInterval\n              : timeout\n          );\n        }\n      };\n      ws.onmessage = function(event) {\n        if (self.debug || ReconnectingWebSocket.debugAll) {\n          console.debug(\n            \"ReconnectingWebSocket\",\n            \"onmessage\",\n            self.url,\n            event.data\n          );\n        }\n        var e = generateEvent(\"message\");\n        e.data = event.data;\n        eventTarget.dispatchEvent(e);\n      };\n      ws.onerror = function(event) {\n        if (self.debug || ReconnectingWebSocket.debugAll) {\n          console.debug(\"ReconnectingWebSocket\", \"onerror\", self.url, event);\n        }\n        eventTarget.dispatchEvent(generateEvent(\"error\"));\n      };\n    };\n\n    // Whether or not to create a websocket upon instantiation\n    if (this.automaticOpen == true) {\n      this.open(false);\n    }\n\n    /**\n     * Transmits data to the server over the WebSocket connection.\n     *\n     * @param data a text string, ArrayBuffer or Blob to send to the server.\n     */\n    this.send = function(data) {\n      if (ws) {\n        if (self.debug || ReconnectingWebSocket.debugAll) {\n          console.debug(\"ReconnectingWebSocket\", \"send\", self.url, data);\n        }\n        return ws.send(data);\n      } else {\n        throw \"INVALID_STATE_ERR : Pausing to reconnect websocket\";\n      }\n    };\n\n    /**\n     * Closes the WebSocket connection or connection attempt, if any.\n     * If the connection is already CLOSED, this method does nothing.\n     */\n    this.close = function(code, reason) {\n      // Default CLOSE_NORMAL code\n      if (typeof code == \"undefined\") {\n        code = 1000;\n      }\n      forcedClose = true;\n      if (ws) {\n        ws.close(code, reason);\n      }\n    };\n\n    /**\n     * Additional public API method to refresh the connection if still open (close, re-open).\n     * For example, if the app suspects bad data / missed heart beats, it can try to refresh.\n     */\n    this.refresh = function() {\n      if (ws) {\n        ws.close();\n      }\n    };\n  }\n\n  /**\n   * An event listener to be called when the WebSocket connection's readyState changes to OPEN;\n   * this indicates that the connection is ready to send and receive data.\n   */\n  ReconnectingWebSocket.prototype.onopen = function(event) {};\n  /** An event listener to be called when the WebSocket connection's readyState changes to CLOSED. */\n  ReconnectingWebSocket.prototype.onclose = function(event) {};\n  /** An event listener to be called when a connection begins being attempted. */\n  ReconnectingWebSocket.prototype.onconnecting = function(event) {};\n  /** An event listener to be called when a message is received from the server. */\n  ReconnectingWebSocket.prototype.onmessage = function(event) {};\n  /** An event listener to be called when an error occurs. */\n  ReconnectingWebSocket.prototype.onerror = function(event) {};\n\n  /**\n   * Whether all instances of ReconnectingWebSocket should log debug messages.\n   * Setting this to true is the equivalent of setting all instances of ReconnectingWebSocket.debug to true.\n   */\n  ReconnectingWebSocket.debugAll = false;\n\n  ReconnectingWebSocket.CONNECTING = WebSocket.CONNECTING;\n  ReconnectingWebSocket.OPEN = WebSocket.OPEN;\n  ReconnectingWebSocket.CLOSING = WebSocket.CLOSING;\n  ReconnectingWebSocket.CLOSED = WebSocket.CLOSED;\n\n  return ReconnectingWebSocket;\n});\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"game\":\"GamePage_game__3S4Mj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"labels\":\"PlaybackSpeed_labels__3XxZA\"};","// Creates a dictionary of parameters based on the given query string. q should\n// look like \"?foo=bar&thing=blah\".\nexport function parseQueryString(q) {\n  if (!q || !q.length) {\n    return {};\n  }\n\n  // Array of key/value pairs\n  const args = q\n    .substr(1)\n    .split(\"&\")\n    .map(parseArg);\n\n  // Convert to object\n  return args.reduce((result, arg) => {\n    result[arg.key] = arg.value;\n    return result;\n  }, {});\n}\n\n// Converts \"asdf=qwer\" to { asdf: \"qwer\" } or \"asdf\" to { asdf: true }. The\n// latter example is to allow switch-like parameters like ?enableThing without\n// an equals sign.\nfunction parseArg(a) {\n  const parts = a.split(\"=\");\n  const key = parts[0];\n  const value = parts[1] === undefined ? true : decodeURIComponent(parts[1]);\n  return { key, value };\n}\n\n// Converts { a: \"aaa\", b: \"bbb\" } to \"?a=aaa&b=bbb\"\nexport function makeQueryString(query) {\n  if (!query) {\n    return \"\";\n  }\n\n  let sep = \"?\";\n  let result = \"\";\n\n  for (const key in query) {\n    const value = query[key];\n    result += `${sep}${key}=${value}`;\n    sep = \"&\";\n  }\n  return result;\n}\n\n// Converts http://foo to ws://foo or https://foo to wss://foo\nexport function httpToWsProtocol(url) {\n  const mappings = {\n    http: \"ws\",\n    https: \"wss\"\n  };\n\n  for (const from in mappings) {\n    const to = mappings[from];\n    if (url.substr(0, from.length + 1) === from + \":\") {\n      return to + url.substr(from.length);\n    }\n  }\n\n  throw new Error(\"Invalid URL: \" + url);\n}\n\n// Joins path components and makes sure there is exactly one '/' separating\n// them.\nexport function join(...parts) {\n  function joinPair(a, b) {\n    const cleanA = a.replace(/\\/+$/, \"\");\n    const cleanB = b.replace(/^\\/+/, \"\");\n\n    if (cleanA === \"\") {\n      return cleanB;\n    }\n\n    if (cleanB === \"\") {\n      return cleanA;\n    }\n\n    return `${cleanA}/${cleanB}`;\n  }\n\n  return parts.reduce((current, next) => joinPair(current, next), \"\");\n}\n","import React from \"react\";\n\nclass BlankState extends React.Component {\n  render() {\n    return (\n      <div>\n        To run a game you need to specify engine and game parameters in the URL.\n        For example:\n        <pre>\n          {window.location.origin}\n          ?engine=&lt;ENGINE_URL&gt;&amp;game=&lt;GAME_ID&gt;\n        </pre>\n      </div>\n    );\n  }\n}\n\nexport default BlankState;\n","export const colors = {\n  // Page\n  pageBackground: \"transparent\",\n\n  // Grid\n  gridDot: \"#6a208f\",\n  gridCellBackground: \"#f1f1f1\",\n  gridCellBackgroundDark: \"#D6D5EA\",\n  food: \"#ff5c75\",\n  hazard: \"#000000\",\n  hazardOpacity: \"0.3\",\n  overlapSnake: \"#AAAAAA\",\n\n  // Scoreboard\n  healthBar: \"#0f0\",\n  healthBarBackground: \"#fefefe\",\n  healthBarOutline: \"#666\",\n  healthBarDeathBackground: \"#f1f1f1\",\n  healthBarDeathBackgroundDark: \"#59526b\",\n  avatarHoverBorder: \"#888\",\n  avatarHighlightedBorder: \"#6f42c1\",\n\n  // Misc\n  lightText: \"#efefef\",\n  darkText: \"#424242\",\n\n  // Colour names (from theme)\n  blue: \"#007bff\",\n  indigo: \"#6610f2\",\n  purple: \"#6f42c1\",\n  pink: \"#e83e8c\",\n  red: \"#dc3545\",\n  orange: \"#fd7e14\",\n  yellow: \"#ffc107\",\n  green: \"#28a745\",\n  teal: \"#20c997\",\n  cyan: \"#17a2b8\",\n  white: \"#fff\",\n  gray: \"#6c757d\",\n  grayLight: \"#f1f1f1\",\n  grayDark: \"#343a40\",\n  primary: \"#007bff\",\n  secondary: \"#6c757d\",\n  success: \"#28a745\",\n  info: \"#17a2b8\",\n  warning: \"#ffc107\",\n  danger: \"#dc3545\",\n  light: \"#f8f9fa\",\n  dark: \"#343a40\"\n};\n\nexport const breakpoints = {\n  sm: \"576px\",\n  md: \"768px\",\n  lg: \"992px\",\n  xl: \"1200px\",\n  xxl: \"1650px\"\n};\n\nexport const themes = {\n  // Themes\n  dark: \"dark\",\n  light: \"light\"\n};\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\n\nimport { colors } from \"../theme\";\n\nconst LoadingIndicatorWrapper = styled(\"div\")({\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  height: \"100%\",\n  width: \"100%\"\n});\n\nclass LoadingIndicator extends React.Component {\n  render() {\n    return (\n      <LoadingIndicatorWrapper>\n        <div\n          className=\"la-ball-grid-beat la-dark la-2x\"\n          style={{\n            color: colors.food\n          }}\n        >\n          <div />\n          <div />\n          <div />\n          <div />\n          <div />\n          <div />\n          <div />\n          <div />\n          <div />\n        </div>\n      </LoadingIndicatorWrapper>\n    );\n  }\n}\n\nexport default LoadingIndicator;\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\n\nimport { colors } from \"../theme\";\n\nconst NotFoundWrapper = styled(\"div\")({\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  height: \"100%\",\n  width: \"100%\"\n});\n\nclass GameNotFound extends React.Component {\n  render() {\n    return (\n      <NotFoundWrapper>\n        <h2\n          style={{\n            color: colors.food\n          }}\n        >\n          Game no longer available, sorry!\n        </h2>\n      </NotFoundWrapper>\n    );\n  }\n}\n\nexport default GameNotFound;\n","import React from \"react\";\nimport { colors, themes } from \"../theme\";\n\nconst HIGHLIGHT_DIM = 0.15;\nconst DEAD_OPACITY = 0.1;\nconst OVERLAP_OPACITY = 0.3;\nconst SNAKE_ON_SNAKE_OPACITY = 0.8;\nconst FULL_OPACITY = 1.0;\n\nconst CELL_SIZE = 20;\nconst CELL_SPACING = 4;\nconst FOOD_SIZE = (CELL_SIZE / 3.25).toFixed(2);\nconst END_OVERLAP = 0.1;\n\nconst DIRECTIONS_CW = [\"up\", \"right\", \"down\", \"left\"];\n\n// let GRID_COLUMNS = 0;  Unused for now.\nlet GRID_ROWS = 0;\n\nfunction toGridSpaceX(slot) {\n  return (CELL_SIZE + CELL_SPACING) * slot + CELL_SPACING;\n}\n\nfunction toGridSpaceY(slot) {\n  // Y-Axis in board space is inverted, positive goes up\n  return (CELL_SIZE + CELL_SPACING) * (GRID_ROWS - 1 - slot) + CELL_SPACING;\n}\n\nfunction getPartWidth(part) {\n  const extraWidth =\n    part.direction === \"left\" || part.direction === \"right\"\n      ? 2 * CELL_SPACING\n      : 0;\n  return CELL_SIZE + extraWidth;\n}\n\nfunction getPartHeight(part) {\n  const extraHeight =\n    part.direction === \"up\" || part.direction === \"down\" ? 2 * CELL_SPACING : 0;\n  return CELL_SIZE + extraHeight;\n}\n\nfunction getPartXOffset(part) {\n  const xBias =\n    part.direction === \"left\" || part.direction === \"right\" ? -CELL_SPACING : 0;\n  return toGridSpaceX(part.x) + xBias;\n}\n\nfunction getPartYOffset(part) {\n  const yBias =\n    part.direction === \"up\" || part.direction === \"down\" ? -CELL_SPACING : 0;\n  return toGridSpaceY(part.y) + yBias;\n}\n\nfunction getCornerPartXOffset(part, type) {\n  return toGridSpaceX(part.x) - CELL_SPACING;\n}\n\nfunction getCornerPartYOffset(part, type) {\n  return toGridSpaceY(part.y) - CELL_SPACING;\n}\n\nfunction getTailXOffset(part) {\n  // apply slight offset to avoid ugly white line in between parts (works most of the time)\n  switch (part.direction) {\n    case \"left\":\n      return toGridSpaceX(part.x) - END_OVERLAP;\n    case \"right\":\n      return toGridSpaceX(part.x) + END_OVERLAP;\n    default:\n      return toGridSpaceX(part.x);\n  }\n}\n\nfunction getTailYOffset(part) {\n  // apply slight offset to avoid ugly white line in between parts (works most of the time)\n  switch (part.direction) {\n    case \"up\":\n      return toGridSpaceY(part.y) - END_OVERLAP;\n    case \"down\":\n      return toGridSpaceY(part.y) + END_OVERLAP;\n    default:\n      return toGridSpaceY(part.y);\n  }\n}\n\nfunction getHeadXOffset(part) {\n  // apply slight offset to avoid ugly white line in between parts (works most of the time)\n  switch (part.direction) {\n    case \"left\":\n      return toGridSpaceX(part.x) + END_OVERLAP;\n    case \"right\":\n      return toGridSpaceX(part.x) - END_OVERLAP;\n    default:\n      return toGridSpaceX(part.x);\n  }\n}\n\nfunction getHeadYOffset(part) {\n  // apply slight offset to avoid ugly white line in between parts (works most of the time)\n  switch (part.direction) {\n    case \"up\":\n      return toGridSpaceY(part.y) + END_OVERLAP;\n    case \"down\":\n      return toGridSpaceY(part.y) - END_OVERLAP;\n    default:\n      return toGridSpaceY(part.y);\n  }\n}\n\nfunction getHeadFillerXOffset(part) {\n  // apply slight offset to avoid ugly white line in between parts (works most of the time)\n  switch (part.direction) {\n    case \"left\":\n      return toGridSpaceX(part.x + 1) - CELL_SPACING - END_OVERLAP;\n    case \"right\":\n      return toGridSpaceX(part.x) - CELL_SPACING - END_OVERLAP;\n    default:\n      return toGridSpaceX(part.x);\n  }\n}\n\nfunction getHeadFillerYOffset(part) {\n  // apply slight offset to avoid ugly white line in between parts (works most of the time)\n  switch (part.direction) {\n    case \"up\":\n      return toGridSpaceY(part.y - 1) - CELL_SPACING - END_OVERLAP;\n    case \"down\":\n      return toGridSpaceY(part.y) - CELL_SPACING - END_OVERLAP;\n    default:\n      return toGridSpaceY(part.y);\n  }\n}\n\nfunction getTailFillerXOffset(part) {\n  // apply slight offset to avoid ugly white line in between parts (works most of the time)\n  switch (part.direction) {\n    case \"right\":\n      return toGridSpaceX(part.x + 1) - CELL_SPACING - END_OVERLAP;\n    case \"left\":\n      return toGridSpaceX(part.x) - CELL_SPACING - END_OVERLAP;\n    default:\n      return toGridSpaceX(part.x);\n  }\n}\n\nfunction getTailFillerYOffset(part) {\n  // apply slight offset to avoid ugly white line in between parts (works most of the time)\n  switch (part.direction) {\n    case \"down\":\n      return toGridSpaceY(part.y - 1) - CELL_SPACING - END_OVERLAP;\n    case \"up\":\n      return toGridSpaceY(part.y) - CELL_SPACING - END_OVERLAP;\n    default:\n      return toGridSpaceY(part.y);\n  }\n}\n\nfunction getFillerWidth(part) {\n  return part.direction === \"left\" || part.direction === \"right\"\n    ? CELL_SPACING + 2 * END_OVERLAP\n    : CELL_SIZE;\n}\n\nfunction getFillerHeight(part) {\n  return part.direction === \"left\" || part.direction === \"right\"\n    ? CELL_SIZE\n    : CELL_SPACING + 2 * END_OVERLAP;\n}\n\nfunction getOpacity(snake, highlightedSnake) {\n  if (!snake.isDead) {\n    if (highlightedSnake) {\n      return snake._id === highlightedSnake ? 1 : HIGHLIGHT_DIM;\n    }\n  } else {\n    if (highlightedSnake) {\n      return snake._id === highlightedSnake ? 1 : 0;\n    }\n  }\n\n  return snake.isDead ? DEAD_OPACITY : 1;\n}\n\nfunction getPartOpacity(part) {\n  if (part.shadeForOverlap) {\n    return SNAKE_ON_SNAKE_OPACITY;\n  } else if (part.isOverlapped) {\n    return OVERLAP_OPACITY;\n  } else {\n    return FULL_OPACITY;\n  }\n}\n\nfunction getPartColor(snake, part) {\n  if (part.shadeForOverlap) {\n    return colors.overlapSnake;\n  } else {\n    return snake.color;\n  }\n}\n\nfunction range(size) {\n  const result = [];\n  for (let i = 0; i < size; i++) {\n    result.push(i);\n  }\n  return result;\n}\n\nfunction sortAliveSnakesOnTop(snakes, highlightedSnake) {\n  return snakes.concat().sort((a, b) => {\n    let aOrder = a.isDead ? 0 : 1;\n    let bOrder = b.isDead ? 0 : 1;\n\n    // always put the highlighted snake up top\n    if (a._id === highlightedSnake) aOrder = 2;\n    if (b._id === highlightedSnake) bOrder = 2;\n\n    return aOrder - bOrder;\n  });\n}\n\nfunction getHeadTransform(direction, viewBox) {\n  const halfX = viewBox.width / 2;\n  const halfY = viewBox.height / 2;\n  switch (direction) {\n    case \"left\":\n      return `scale(-1,1) translate(-100, 0)`;\n    case \"up\":\n      return `rotate(-90 ${halfX} ${halfY})`;\n    case \"down\":\n      return `rotate(90 ${halfX} ${halfY})`;\n    default:\n      return \"\";\n  }\n}\n\nfunction getTailTransform(direction, viewBox) {\n  const halfX = viewBox.width / 2;\n  const halfY = viewBox.height / 2;\n  switch (direction) {\n    case \"right\":\n      return `scale(-1,1) translate(-100,0)`;\n    case \"down\":\n      return `scale(-1,1) translate(-100,0) rotate(-90 ${halfX} ${halfY})`;\n    case \"up\":\n      return `scale(-1,1) translate(-100,0) rotate(90 ${halfX} ${halfY})`;\n    default:\n      return \"\";\n  }\n}\n\nfunction areAdjacentDirections(d1, d2) {\n  // Check if the directions are adjacent in the circular directions array\n  // Otherwise they are the same or opposite directions\n  return (\n    Math.abs(DIRECTIONS_CW.indexOf(d1) - DIRECTIONS_CW.indexOf(d2)) % 2 === 1\n  );\n}\n\nfunction checkIfCornerPart(snake, partIndex) {\n  // If head or tail of the snake, then false\n  if (partIndex === 0 || partIndex === snake.body.length - 1) return false;\n\n  const behind = snake.body[partIndex + 1];\n  const current = snake.body[partIndex];\n\n  // Return false if the behind part has the same position as the current.\n  // Relevant for when the snake initially spawns.\n  if (behind.x === current.x && behind.y === current.y) return false;\n\n  // Check if the directions are adjacent in the circular directions array\n  // Otherwise they are the same or opposite directions and should be rendered with a straight part\n  return areAdjacentDirections(current.direction, behind.direction);\n}\n\nfunction determineCornerType(snake, partIndex) {\n  // If head or tail of the snake, then false\n  if (partIndex === 0 || partIndex === snake.body.length - 1) return false;\n\n  const behind = snake.body[partIndex + 1];\n  const current = snake.body[partIndex];\n\n  return `${current.direction} ${behind.direction}`;\n}\n\nfunction isOverlappedByTail(snake, part) {\n  const head = snake.body[snake.body.length - 1];\n  return part.isOverlapped && head.x === part.x && head.y === part.y;\n}\n\nclass Grid extends React.Component {\n  renderPart(snake, snakeIndex, part, partIndex) {\n    if (isOverlappedByTail(snake, part)) return;\n    switch (part.type) {\n      case \"head\":\n        return this.renderHeadPart(snake, snakeIndex, part);\n      case \"tail\":\n        return this.renderTailPart(snake, snakeIndex, part);\n      default:\n        if (checkIfCornerPart(snake, partIndex)) {\n          return this.renderCornerPart(snake, snakeIndex, part, partIndex);\n        } else {\n          return this.renderMiddlePart(snake, snakeIndex, part, partIndex);\n        }\n    }\n  }\n\n  renderHeadPart(snake, snakeIndex, part) {\n    const x = getHeadXOffset(part);\n    const y = getHeadYOffset(part);\n    const box = snake.headSvg.viewBox.baseVal;\n    const transform = getHeadTransform(part.direction, box);\n    const viewBoxStr = `${box.x} ${box.y} ${box.width} ${box.height}`;\n    let color = getPartColor(snake, part);\n    let opacity = getPartOpacity(part);\n\n    return (\n      <g key={\"part\" + snakeIndex + \",head\"}>\n        <svg\n          viewBox={viewBoxStr}\n          x={x}\n          y={y}\n          width={CELL_SIZE}\n          height={CELL_SIZE}\n          fill={color}\n          opacity={opacity}\n          shapeRendering=\"auto\"\n        >\n          <g\n            transform={transform}\n            dangerouslySetInnerHTML={{ __html: snake.headSvg.innerHTML }}\n          />\n        </svg>\n        {snake.effectiveSpace > 1 && (\n          // only add filler if the snake is effectively longer than one tile\n          <rect\n            x={getHeadFillerXOffset(part)}\n            y={getHeadFillerYOffset(part)}\n            width={getFillerWidth(part)}\n            height={getFillerHeight(part)}\n            fill={color}\n            opacity={opacity}\n            shapeRendering=\"auto\"\n          />\n        )}\n      </g>\n    );\n  }\n\n  renderMiddlePart(snake, snakeIndex, part, partIndex) {\n    let color = getPartColor(snake, part);\n    let opacity = getPartOpacity(part);\n\n    return (\n      <rect\n        key={`part${snakeIndex},${part.x},${part.y}`}\n        x={getPartXOffset(part)}\n        y={getPartYOffset(part)}\n        width={getPartWidth(part)}\n        height={getPartHeight(part)}\n        fill={color}\n        opacity={opacity}\n        shapeRendering=\"auto\"\n      />\n    );\n  }\n\n  renderCornerPart(snake, snakeIndex, part, partIndex) {\n    let viewBox, transform;\n    let path = \"M0,20 h60 a60,60 0 0 1 60,60 v60 h-100 v-20 h-20 z\";\n    let color = getPartColor(snake, part);\n    let opacity = getPartOpacity(part);\n\n    viewBox = \"0 0 140 140\";\n\n    const cornerType = determineCornerType(snake, partIndex);\n    switch (cornerType) {\n      case \"down left\":\n      case \"right up\":\n        transform = \"rotate(270, 70, 70)\";\n        break;\n      case \"left down\":\n      case \"up right\":\n        transform = \"rotate(90, 70, 70)\";\n        break;\n      case \"left up\":\n      case \"down right\":\n        break;\n      case \"right down\":\n      case \"up left\":\n        transform = \"rotate(180, 70, 70)\";\n        break;\n      default:\n        break;\n    }\n\n    return (\n      <svg\n        key={`part${snakeIndex},${part.x},${part.y}`}\n        x={getCornerPartXOffset(part, cornerType)}\n        y={getCornerPartYOffset(part, cornerType)}\n        width={CELL_SIZE + 2 * CELL_SPACING}\n        height={CELL_SIZE + 2 * CELL_SPACING}\n        fill={color}\n        opacity={opacity}\n        viewBox={viewBox}\n        shapeRendering=\"auto\"\n      >\n        <path d={path} transform={transform} />\n      </svg>\n    );\n  }\n\n  renderTailPart(snake, snakeIndex, part) {\n    const x = getTailXOffset(part);\n    const y = getTailYOffset(part);\n    const box = snake.tailSvg.viewBox.baseVal;\n    const transform = getTailTransform(part.direction, box);\n    const viewBoxStr = `${box.x} ${box.y} ${box.width} ${box.height}`;\n    let color = getPartColor(snake, part);\n    let opacity = getPartOpacity(part);\n\n    return (\n      <g key={\"part\" + snakeIndex + \",tail\"}>\n        <svg\n          viewBox={viewBoxStr}\n          x={x}\n          y={y}\n          width={CELL_SIZE}\n          height={CELL_SIZE}\n          fill={color}\n          opacity={opacity}\n          shapeRendering=\"auto\"\n        >\n          <g\n            transform={transform}\n            dangerouslySetInnerHTML={{ __html: snake.tailSvg.innerHTML }}\n          />\n        </svg>\n        {snake.effectiveSpace > 1 && (\n          // only add filler if the snake is effectively longer than one tile\n          <rect\n            x={getTailFillerXOffset(part)}\n            y={getTailFillerYOffset(part)}\n            width={getFillerWidth(part)}\n            height={getFillerHeight(part)}\n            fill={color}\n            opacity={opacity}\n            shapeRendering=\"auto\"\n          />\n        )}\n      </g>\n    );\n  }\n\n  renderLabel(row, col, label) {\n    return (\n      <foreignObject\n        key={\"label\" + row + col}\n        x={toGridSpaceX(col)}\n        y={toGridSpaceY(row)}\n        width={CELL_SIZE}\n        height={CELL_SIZE}\n      >\n        <div\n          style={{\n            width: \"100%\",\n            height: \"100%\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            opacity: 0.5\n          }}\n        >\n          <div style={{ fontSize: \"80%\" }}>{label}</div>\n        </div>\n      </foreignObject>\n    );\n  }\n\n  renderLabels() {\n    return (\n      <>\n        {range(this.props.rows).map((_, row) => this.renderLabel(row, -1, row))}\n\n        {range(this.props.columns).map((_, col) =>\n          this.renderLabel(-1, col, col)\n        )}\n      </>\n    );\n  }\n\n  renderGrid() {\n    // GRID_COLUMNS = this.props.columns;\n    GRID_ROWS = this.props.rows;\n\n    const unsortedSnakes = this.props.snakes || [];\n    const food = this.props.food || [];\n    const hazards = this.props.hazards || [];\n\n    // Make alive snakes render on top of dead snakes\n    const sortedSnakes = sortAliveSnakesOnTop(\n      unsortedSnakes,\n      this.props.highlightedSnake\n    );\n\n    if (!this.props.highlightedSnake) {\n      // track all of the grid cells that will have a snake part drawn in them.  Successive snake parts\n      // drawn in the same cell need to be flagged so they render differently and layer properly\n      let gridCellsWithSnakeParts = Array(this.props.rows);\n      for (let i = 0; i < gridCellsWithSnakeParts.length; i++) {\n        gridCellsWithSnakeParts[i] = Array(this.props.columns);\n        for (let j = 0; j < this.props.columns; j++) {\n          gridCellsWithSnakeParts[i][j] = false;\n        }\n      }\n\n      // Go through each snake, in the order they will be drawn and mark the cells they will occupy.\n      // flag parts that would be drawn in cells that are already claimed\n      for (let i = 0; i < sortedSnakes.length; i++) {\n        let snake = sortedSnakes[i];\n        if (!snake.isDead) {\n          for (let x = 0; x < snake.body.length; x++) {\n            let part = snake.body[x];\n            if (!isOverlappedByTail(snake, part)) {\n              if (gridCellsWithSnakeParts[part.y][part.x]) {\n                part.shadeForOverlap = true;\n              } else {\n                gridCellsWithSnakeParts[part.y][part.x] = true;\n              }\n            }\n          }\n        }\n      }\n    }\n\n    const viewBoxWidth =\n      (CELL_SIZE + CELL_SPACING) * this.props.columns + CELL_SPACING;\n    const viewBoxHeight =\n      (CELL_SIZE + CELL_SPACING) * this.props.rows + CELL_SPACING;\n\n    const hazardOpacity = parseFloat(colors.hazardOpacity);\n\n    const overflow = this.props.showCoordinateLabels ? \"visible\" : \"hidden\";\n\n    return (\n      <svg\n        className=\"grid\"\n        width={this.props.maxWidth}\n        height={this.props.maxHeight}\n        x={this.props.x}\n        y={this.props.y}\n        viewBox={`0 0 ${viewBoxWidth} ${viewBoxHeight}`}\n        overflow={overflow}\n      >\n        {this.props.showCoordinateLabels && this.renderLabels()}\n        {range(this.props.rows).map((_, row) =>\n          range(this.props.columns).map((_, col) => (\n            <rect\n              key={\"cell\" + row + \",\" + col}\n              x={toGridSpaceX(col)}\n              y={toGridSpaceY(row)}\n              width={CELL_SIZE}\n              height={CELL_SIZE}\n              fill={\n                this.props.theme === themes.dark\n                  ? colors.gridCellBackgroundDark\n                  : colors.gridCellBackground\n              }\n              shapeRendering=\"auto\"\n            />\n          ))\n        )}\n        {sortedSnakes.map((snake, snakeIndex) => {\n          return (\n            <g\n              key={`snake${snakeIndex}`}\n              className=\"snake\"\n              opacity={getOpacity(snake, this.props.highlightedSnake)}\n            >\n              {[...snake.body]\n                .reverse()\n                .map((part, partIndex) =>\n                  this.renderPart(\n                    snake,\n                    snakeIndex,\n                    part,\n                    snake.body.length - partIndex - 1,\n                    this.props.highlightedSnake\n                  )\n                )}\n            </g>\n          );\n        })}\n        {hazards.map((o, hazardIndex) => (\n          <rect\n            key={\"hazard\" + hazardIndex}\n            x={toGridSpaceX(o.x)}\n            y={toGridSpaceY(o.y)}\n            width={CELL_SIZE}\n            height={CELL_SIZE}\n            fill={colors.hazard}\n            fillOpacity={hazardOpacity}\n            shapeRendering=\"auto\"\n          />\n        ))}\n        {food.map((f, foodIndex) => {\n          if (this.props.foodImage) {\n            return (\n              <image\n                key={\"food\" + foodIndex}\n                x={toGridSpaceX(f.x)}\n                y={toGridSpaceY(f.y)}\n                width={CELL_SIZE}\n                height={CELL_SIZE}\n                href={this.props.foodImage}\n              />\n            );\n          } else {\n            return (\n              <circle\n                key={\"food\" + foodIndex}\n                className=\"food\"\n                cx={toGridSpaceX(f.x) + CELL_SIZE / 2}\n                cy={toGridSpaceY(f.y) + CELL_SIZE / 2}\n                r={FOOD_SIZE}\n                fill={colors.food}\n                shapeRendering=\"optimizeQuality\"\n              />\n            );\n          }\n        })}\n      </svg>\n    );\n  }\n\n  render() {\n    if (this.props.snakes) {\n      return this.renderGrid();\n    } else {\n      return;\n    }\n  }\n}\n\nexport default Grid;\n","import React from \"react\";\nimport Grid from \"./grid\";\n\nconst BOARD_SIZE = 100;\n\nconst LABEL_ADJUSTMENT = 10;\n\nclass Board extends React.Component {\n  render() {\n    const boardSize = this.props.showCoordinateLabels\n      ? BOARD_SIZE - LABEL_ADJUSTMENT\n      : BOARD_SIZE;\n\n    const x = this.props.showCoordinateLabels ? LABEL_ADJUSTMENT : 0;\n\n    return (\n      <svg viewBox={`0 0 ${BOARD_SIZE} ${BOARD_SIZE}`}>\n        <Grid\n          snakes={this.props.snakes}\n          food={this.props.food}\n          foodImage={this.props.foodImage}\n          hazards={this.props.hazards}\n          columns={this.props.columns}\n          rows={this.props.rows}\n          highlightedSnake={this.props.highlightedSnake}\n          theme={this.props.theme}\n          maxWidth={boardSize}\n          maxHeight={boardSize}\n          x={x}\n          y={0}\n          turn={this.props.turn}\n          showCoordinateLabels={this.props.showCoordinateLabels}\n        />\n      </svg>\n    );\n  }\n}\n\nexport default Board;\n","import ReconnectingWebsocket from \"./reconnecting-websocket\";\n\n// Establishes websocket connection on given url and then calls receive for\n// every object sent from the server. Returns a promise that resolves when\n// receive returns true or when the server closes the connection.\nexport function streamAll(url, receive) {\n  const turns = {};\n  let done = false;\n\n  return new Promise((resolve, reject) => {\n    const ws = new ReconnectingWebsocket(url);\n    ws.addEventListener(\"message\", e => {\n      const obj = JSON.parse(e.data);\n      const eventData = obj.Data;\n      if (turns[eventData.Turn]) {\n        return;\n      }\n      turns[eventData.Turn] = true;\n\n      done = receive(obj);\n      if (done) {\n        ws.close();\n        resolve();\n      }\n    });\n\n    ws.addEventListener(\"onerror\", e => {\n      reject(e);\n    });\n\n    ws.addEventListener(\"onclose\", e => {\n      if (!done) {\n        done = true;\n        resolve();\n      }\n    });\n  });\n}\n","/**\n * This file contains helper functions for async loading svg files that\n * can be injected inline into an html <svg> element. This is better than\n * alternatives for the following reasons:\n *\n *    <use href=\"...\"> has a problem where the game could start before the\n *    svg has finished loading whereas this method gives a promise we can wait\n *    for.\n *\n *    <image src=\"...\"> has a problem where the fill color of the image cannot\n *    be overriden. Inline svg solves this problem and allows css styles to\n *    cascade into the svg content. <use> may also have this problem?\n *\n *    Directly embedding the svg xml into react components (or similar) would\n *    mostly solve everything except that it eliminates the possibility of\n *    pulling in svg data from external trusted sources.\n *\n * The main downside to this method is that the source of the svg must be\n * trusted or else you are vulnerable to xss attacks.\n */\n\nconst loaded = {};\nconst doesntExist = {};\n\nexport function loadSvgs(paths) {\n  return Promise.all(paths.map(requireSvg));\n}\n\nexport function getSvg(path) {\n  return loaded[path];\n}\n\nfunction requireSvg(path) {\n  if (path in loaded) {\n    return Promise.resolve(loaded[path]);\n  }\n\n  return fetchSvg(path);\n}\n\nasync function fetchSvg(path) {\n  const response = await fetch(path);\n  const svgText = await response.text();\n  const svg = makeDom(svgText);\n  loaded[path] = svg;\n  return svg;\n}\n\nfunction makeDom(svgText) {\n  const wrapper = document.createElement(\"div\");\n  wrapper.innerHTML = svgText.trim();\n  return wrapper.firstChild;\n}\n\nexport async function svgExists(path) {\n  if (path in loaded) {\n    return true;\n  }\n  if (path in doesntExist) {\n    return false;\n  }\n  //not cached yet\n  try {\n    const response = await fetch(path);\n    const svgText = await response.text();\n    const exists = svgText.startsWith(\"<svg\");\n    if (!exists) {\n      doesntExist[path] = true;\n    }\n    return exists;\n  } catch (e) {\n    //Most likely a CORS issue for a specific svg\n    console.warn(e, path, \"Fallback to default\");\n    return false;\n  }\n}\n","import { streamAll } from \"../io/websocket\";\nimport { makeQueryString, httpToWsProtocol, join } from \"./url\";\nimport { loadSvgs, getSvg, svgExists } from \"./inline-svg\";\n\nconst DEFAULT_SNAKE_HEAD = \"default\";\nconst DEFAULT_SNAKE_TAIL = \"default\";\nconst APP_VERSION = process.env.REACT_APP_VERSION;\n\nasync function get(url, query) {\n  console.log(\"output game config\");\n  const response = await fetch(url + makeQueryString(query));\n  console.log(response);\n  if (response.status === 200) {\n    return Promise.resolve(response.json());\n  } else {\n    return Promise.resolve(response.json()).then(responseJson => {\n      console.error(responseJson.error);\n      return Promise.reject(responseJson.error);\n    });\n  }\n}\n\nexport function delay(millis) {\n  return new Promise(resolve => setTimeout(resolve, millis));\n}\n\nexport function getReadableCauseOfDeath(death) {\n  // See https://github.com/BattlesnakeOfficial/rules/blob/master/standard.go\n  switch (death.cause) {\n    case \"snake-collision\":\n      return `Ran into ${death.eliminatedBy}'s body`;\n    case \"snake-self-collision\":\n      return \"Collided with itself\";\n    case \"out-of-health\":\n      return \"Out of health\";\n    case \"hazard\":\n      return \"Eliminated by hazard\";\n    case \"head-collision\":\n      return `Lost head-to-head with ${death.eliminatedBy}`;\n    case \"wall-collision\":\n      return \"Moved out of bounds\";\n    case \"squad-eliminated\":\n      return \"Squad was eliminated\";\n    default:\n      return death.cause;\n  }\n}\n\n// Gets a list of all unique SVG paths required by the snakes.\nfunction getAllSvgs(snakes) {\n  const all = snakes.reduce((result, snake) => {\n    return result.concat([snake.HeadType, snake.TailType]);\n  }, []);\n  const unique = new Set(all);\n  return Array.from(unique);\n}\n\nasync function assignHeadAndTailUrls(snakes) {\n  for (const snake of snakes) {\n    // Assign default if missing\n    if (!snake.HeadType) {\n      snake.HeadType = DEFAULT_SNAKE_HEAD;\n    }\n    if (!snake.TailType) {\n      snake.TailType = DEFAULT_SNAKE_TAIL;\n    }\n\n    // Format as actual URL if it's just a name\n    snake.HeadType = getSnakeHeadSvgUrl(snake.HeadType);\n    snake.TailType = getSnakeTailSvgUrl(snake.TailType);\n\n    if (!(await svgExists(snake.HeadType))) {\n      snake.HeadType = getSnakeHeadSvgUrl(DEFAULT_SNAKE_HEAD);\n    }\n    if (!(await svgExists(snake.TailType))) {\n      snake.TailType = getSnakeTailSvgUrl(DEFAULT_SNAKE_TAIL);\n    }\n  }\n}\n\nasync function setHeadAndTailSvgs(snakes) {\n  await assignHeadAndTailUrls(snakes);\n  await loadSvgs(getAllSvgs(snakes));\n\n  for (const snake of snakes) {\n    snake.HeadSvg = getSvg(snake.HeadType);\n    snake.TailSvg = getSvg(snake.TailType);\n  }\n}\n\nfunction isIllegalSvgPath(nameOrPath) {\n  return nameOrPath.indexOf(\"/\") >= 0 || nameOrPath.indexOf(\".\") >= 0;\n}\n\nfunction svgUrlFromName(base, relative) {\n  //appending the git hash of this version allows for cache busting on deploy\n  const extension = \".svg?board_version=\" + APP_VERSION;\n  return join(\"https://media.battlesnake.com\", base, relative) + extension;\n}\n\nfunction getSnakeHeadSvgUrl(path) {\n  const effectivePath = isIllegalSvgPath(path) ? DEFAULT_SNAKE_HEAD : path;\n  return svgUrlFromName(\"/snakes/heads\", effectivePath);\n}\n\nfunction getSnakeTailSvgUrl(path) {\n  const effectivePath = isIllegalSvgPath(path) ? DEFAULT_SNAKE_TAIL : path;\n  return svgUrlFromName(\"/snakes/tails\", effectivePath);\n}\n\nasync function prepareFrame(frame) {\n  await setHeadAndTailSvgs(frame.Snakes);\n}\n\nexport function fetchGameInfo(baseUrl, gameId) {\n  const url = join(baseUrl, `games/${gameId}`);\n  console.log(\"output:\");\n  console.log(url);\n  return get(url);\n}\n\nexport async function streamAllEvents(baseUrl, gameId, receiveEvent) {\n  const game = await fetchGameInfo(baseUrl, gameId);\n  console.log(game);\n  let chain = Promise.resolve();\n  function onEngineEvent(engineEvent) {\n    if (engineEvent.Type) {\n      const eventData = engineEvent.Data || engineEvent;\n      //output eventdata\n      console.log(eventData);\n      chain = chain.then(async () => {\n        if (engineEvent.Type === \"frame\") {\n          await prepareFrame(eventData);\n        }\n        return receiveEvent(game, engineEvent.Type, eventData);\n      });\n    }\n    return engineEvent.Type && engineEvent.Type === \"game_end\";\n  }\n\n  const wsUrl = join(httpToWsProtocol(baseUrl), `games/${gameId}/events`);\n  console.log(\"output wsurl\");\n  console.log(wsUrl);\n  await streamAll(wsUrl, onEngineEvent);\n  await chain;\n}\nexport function getFrameByTurn(frames, turn) {\n  return frames.filter(frame => frame.turn === turn)[0];\n}\n","import React from \"react\";\nimport { colors } from \"../../../theme\";\nimport \"./ErrorMessage.css\";\n\nconst errorColor = {\n  color: colors.danger\n};\n\nfunction getIcon(code) {\n  return \"error\";\n}\n\nconst ErrorMessage = props => {\n  let code, message;\n\n  if (props.error === \"\") {\n    return \"\";\n  }\n\n  [code, message] = props.error.toString().split(\":\");\n\n  return (\n    <div className=\"error-message\" style={errorColor}>\n      <span className=\"material-icons material-icons-inline\">\n        {getIcon(code)}\n      </span>\n      <span>{message}</span>\n    </div>\n  );\n};\n\nexport default ErrorMessage;\n","import React from \"react\";\nimport { colors } from \"../../../theme\";\n\nconst style = {\n  color: colors.danger,\n  cursor: \"pointer\",\n  margin: 0,\n  padding: 0\n};\n\nfunction getIcon(code) {\n  return \"error\";\n}\n\nconst StatusIndicator = ({ errorMessage }) => {\n  if (errorMessage === \"\") {\n    return \"\";\n  }\n\n  // until we can refactor Avatar and not pass the whole error object\n  const [code] = errorMessage.toString().split(\":\");\n\n  return (\n    <div style={style}>\n      <span className=\"material-icons material-icons-inline\">\n        {getIcon(code)}\n      </span>\n    </div>\n  );\n};\n\nexport default StatusIndicator;\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\nimport { colors, themes } from \"../theme\";\nimport { getReadableCauseOfDeath } from \"../utils/engine-client\";\nimport ErrorMessage from \"./scoreboard/error-message/ErrorMessage\";\n\nimport \"./scoreboard/avatar/Avatar.css\";\nimport StatusIndicator from \"./scoreboard/status-indicator/StatusIndicator\";\n\nconst AvatarWrapper = styled(\"div\")`\n  width: 100%;\n  white-space: nowrap;\n  overflow: hidden;\n\n  opacity: ${props => (props.isEliminated ? \"0.5\" : \"1.0\")};\n`;\n\nconst Name = styled(\"span\")(({ theme }) => ({\n  display: \"block\",\n  textShadow: theme === themes.dark ? \"0 1px 2px rgba(0,0,0,0.90)\" : null\n}));\n\nconst Length = styled(\"span\")(({ theme }) => ({\n  marginLeft: \"auto\",\n  textShadow: theme === themes.dark ? \"0 1px 2px rgba(0,0,0,0.90)\" : null\n}));\n\nconst AuthorWrapper = styled(\"div\")({\n  fontSize: \"1rem\",\n  fontWeight: \"400\",\n  display: \"flex\",\n  flexDirection: \"row\",\n  height: \"1.25rem\"\n});\n\nconst Author = styled(\"span\")(({ theme }) => ({\n  display: \"block\",\n  flexGrow: 1,\n  textShadow: theme === themes.dark ? \"0 1px 2px rgba(0,0,0,0.90)\" : null\n}));\n\nconst Latency = styled(\"span\")(({ theme, latency }) => ({\n  color: latency === \"0\" ? \"red\" : \"inherit\",\n  marginLeft: \"auto\",\n  textShadow: theme === themes.dark ? \"0 1px 2px rgba(0,0,0,0.90)\" : null,\n  display: latency === \"\" ? \"none\" : \"block\"\n}));\n\nconst HealthBarWrapper = styled(\"div\")({\n  marginTop: \"0.2rem\",\n  width: \"100%\",\n  height: \"1.0rem\",\n  background: colors.healthBarBackground,\n  borderRadius: \"1.5rem\"\n});\n\nconst HealthBar = styled(\"div\")(({ color }) => ({\n  height: \"100%\",\n  backgroundColor: color,\n  borderRadius: \"inherit\"\n}));\n\nconst CauseOfDeath = styled(\"div\")(({ theme }) => ({\n  width: \"100%\",\n  marginTop: \"0.2rem\",\n  fontSize: \"1rem\",\n  lineHeight: \"1rem\",\n  color: theme === themes.dark ? colors.lightText : colors.darkText\n}));\n\nclass Avatar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showError: false\n    };\n  }\n  render() {\n    return (\n      <AvatarWrapper isEliminated={this.props.snake.death ? true : false}>\n        <div className=\"row\">\n          <Name>{this.props.snake.name}</Name>\n          <Length>{this.props.snake.body.length}</Length>\n        </div>\n        <AuthorWrapper>\n          <Author>by {this.props.snake.author}</Author>\n          <StatusIndicator errorMessage={this.props.snake.error} />\n          <Latency latency={this.props.snake.latency}>\n            {this.props.snake.latency} ms\n          </Latency>\n        </AuthorWrapper>\n        {this.props.snake.death ? (\n          <CauseOfDeath theme={this.props.theme}>\n            {getReadableCauseOfDeath(this.props.snake.death)}\n          </CauseOfDeath>\n        ) : (\n          <HealthBarWrapper>\n            <HealthBar\n              color={this.props.snake.color}\n              style={{\n                width: `${this.props.snake.health}%`\n              }}\n            />\n          </HealthBarWrapper>\n        )}\n        <ErrorMessage\n          error={this.props.highlighted ? this.props.snake.error : \"\"}\n        />\n      </AvatarWrapper>\n    );\n  }\n}\n\nexport default Avatar;\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\nimport Avatar from \"./avatar\";\nimport { breakpoints, colors, themes } from \"../theme\";\n\nconst orderSnakes = snakes => {\n  // Sort by name\n  const aliveSnakes = snakes\n    .filter(s => !s.isDead)\n    .sort((a, b) => {\n      const aLower = a.name.toLowerCase();\n      const bLower = b.name.toLowerCase();\n      if (aLower < bLower) {\n        return -1;\n      }\n      if (aLower > bLower) {\n        return 1;\n      }\n      return 0;\n    });\n\n  // Sort by turn died, descending\n  const deadSnakes = snakes\n    .filter(s => s.isDead)\n    .sort((a, b) => a.death.turn - b.death.turn)\n    .reverse();\n\n  return aliveSnakes.concat(deadSnakes);\n};\n\nconst Wrapper = styled(\"div\")`\n  display: none;\n  color: ${({ theme }) =>\n    theme === themes.dark ? colors.lightText : colors.darkText};\n  font-weight: 600;\n  font-size: 1.4rem;\n\n  @media (min-width: ${breakpoints.md}) {\n    display: ${({ hide }) => (hide ? \"none\" : \"block\")};\n    font-size: 1.8rem;\n  }\n\n  @media (min-width: ${breakpoints.xxl}) {\n    font-size: 3.2rem;\n    letter-spacing: 0.1rem;\n  }\n`;\n\nconst AvatarWrapper = styled(\"div\")`\n  padding: 0.75rem;\n  transition: background-color 0.2s, box-shadow 0.2s;\n  border: 2px solid\n    ${props =>\n      props.highlighted ? colors.avatarHighlightedBorder : \"transparent\"};\n  &:hover {\n    background-color: ${props =>\n      props.theme === themes.dark ? colors.purple : colors.light};\n    cursor: pointer;\n    border-color: ${props =>\n      props.highlighted\n        ? colors.avatarHighlightedBorder\n        : colors.avatarHoverBorder};\n  }\n`;\n\nclass Scoreboard extends React.Component {\n  state = {\n    highlightedSnake: null\n  };\n\n  toggleHighlight = snake => {\n    const getSnakeToHighlight = (state, snake) => {\n      return state.highlightedSnake !== snake._id ? snake._id : null;\n    };\n\n    this.props.highlightSnake(getSnakeToHighlight(this.state, snake));\n\n    this.setState(state => ({\n      highlightedSnake: getSnakeToHighlight(state, snake)\n    }));\n  };\n\n  render() {\n    const { highlightedSnake } = this.state;\n    return (\n      <Wrapper theme={this.props.theme}>\n        {this.props.snakes\n          ? orderSnakes(this.props.snakes).map((snake, i) => (\n              <AvatarWrapper\n                key={\"avatarwrapper\" + i}\n                onClick={() => this.toggleHighlight(snake)}\n                highlighted={highlightedSnake === snake._id}\n                theme={this.props.theme}\n              >\n                <Avatar\n                  snake={snake}\n                  key={\"avatar\" + i}\n                  theme={this.props.theme}\n                  highlighted={highlightedSnake === snake._id}\n                />\n              </AvatarWrapper>\n            ))\n          : undefined}\n      </Wrapper>\n    );\n  }\n}\n\nexport default Scoreboard;\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\nimport KeyboardEventHandler from \"react-keyboard-event-handler\";\nimport { withRouter } from \"react-router\";\nimport { themes, breakpoints } from \"../theme\";\n\nconst MediaControlsWrapper = styled(\"div\")`\n  display: ${({ hide }) => (hide ? \"none\" : \"block\")};\n  margin-top: 1rem;\n  width: 100%;\n`;\n\nconst KeyboardShortcutsWrapper = styled(\"div\")({\n  position: \"relative\"\n});\n\nconst ShortcutsPane = styled(\"div\")`\n  position: absolute;\n  bottom: 2.5rem;\n  right: 2.5rem;\n  width: 20rem;\n  padding: 1rem;\n  border: solid 1px #999;\n  background: #fff;\n\n  @media (min-width: ${breakpoints.md}) {\n    left: 2.5rem;\n    right: 0;\n  }\n\n  h4 {\n    margin-top: 0;\n    margin-bottom: 1rem;\n  }\n\n  ul {\n    list-style-type: none;\n    margin: 0;\n    padding: 0;\n  }\n`;\n\nconst ButtonWrapper = styled(\"div\")({\n  display: \"flex\",\n  justifyContent: \"center\",\n  width: \"100%\"\n});\n\nconst Button = styled(\"button\")`\n  display: inline-block;\n  min-width: 3rem;\n  text-align: center;\n  background: transparent;\n  color: ${({ theme }) => (theme === themes.dark ? \"#eee\" : \"#333\")};\n  font-size: 1.4rem;\n  border: none;\n  text-decoration: none;\n  cursor: pointer;\n  transition: background 250ms ease-in-out, transform 150ms ease;\n  -webkit-appearance: none;\n  -moz-appearance: none;\n\n  &:hover {\n    cursor: pointer;\n  }\n\n  &:focus {\n    outline: none;\n  }\n\n  &:disabled {\n    color: #ccc;\n    cursor: not-allowed;\n  }\n\n  @media (max-width: ${breakpoints.sm}) {\n    padding: 2rem 2rem;\n  }\n`;\n\nconst Scrubber = styled(\"input\")`\n  width: 100%;\n  max-width: 60rem;\n\n  &:disabled,\n  &:disabled:hover {\n    opacity: 0.2;\n    cursor: not-allowed;\n  }\n`;\n\nclass MediaControls extends React.Component {\n  state = {\n    paneHidden: true\n  };\n\n  constructor(props) {\n    super(props);\n    this.keyboardCodeMap = {\n      KeyR: \"r\",\n      ArrowLeft: \"left\",\n      ArrowRight: \"right\",\n      Space: \"space\",\n      Settings: \",\"\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"message\", this.handleParentKeyboardEvent);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"message\", this.handleParentKeyboardEvent);\n  }\n\n  render() {\n    return this.renderControls();\n  }\n\n  handleParentKeyboardEvent = e => {\n    const { code } = e.data;\n    this.handleKeyEvent(this.keyboardCodeMap[code], e);\n  };\n\n  handleReload = () => {\n    this.props.reloadGame();\n  };\n\n  handlePlayPause = () => {\n    this.props.toggleGamePause();\n  };\n\n  handleBackward = () => {\n    this.props.stepBackwardFrame();\n  };\n\n  handleForward = () => {\n    this.props.stepForwardFrame();\n  };\n\n  handleScrubMouseDown = () => {\n    this.props.pauseGame();\n  };\n\n  handleScrubbing = event => {\n    this.props.stepToTurn(parseInt(event.target.value));\n  };\n\n  handleSettings = () => {\n    if (this.props.persistAvailable) {\n      this.props.history.push(\"/settings\");\n    }\n  };\n\n  handleShortcutPaneShowToggle = () => {\n    this.setState({\n      paneHidden: !this.state.paneHidden\n    });\n  };\n\n  handleKeyEvent = (key, e) => {\n    e.preventDefault();\n    switch (key) {\n      case \"r\":\n        this.handleReload();\n        break;\n      case \"left\":\n        this.handleBackward();\n        break;\n      case \"right\":\n        this.handleForward();\n        break;\n      case \"space\":\n        this.handlePlayPause();\n        break;\n      case \",\":\n        this.handleSettings();\n        break;\n      default:\n        break;\n    }\n  };\n\n  renderScrubbing() {\n    const value = this.props.hasAllFrames ? this.props.currentFrame.turn : 0;\n    const max = this.props.hasAllFrames ? this.props.maxTurn : 0;\n\n    return (\n      this.props.showFrameScrubber && (\n        <ButtonWrapper>\n          <Scrubber\n            type=\"range\"\n            min=\"0\"\n            max={max}\n            value={value}\n            onMouseDown={this.handleScrubMouseDown}\n            onChange={this.handleScrubbing}\n            disabled={!this.props.hasAllFrames}\n          />\n        </ButtonWrapper>\n      )\n    );\n  }\n\n  renderControls() {\n    const {\n      currentFrame,\n      hideControls,\n      paused,\n      theme,\n      persistAvailable\n    } = this.props;\n\n    const settingsInfo = persistAvailable\n      ? \"Configure playback settings\"\n      : \"Enable localStorage to configure playback settings\";\n\n    return (\n      <MediaControlsWrapper hide={hideControls}>\n        {this.renderScrubbing()}\n        <ButtonWrapper>\n          <Button\n            onClick={this.handleBackward}\n            disabled={currentFrame.turn === 0 || !paused}\n            theme={theme}\n          >\n            <span className=\"material-icons icon-image-preview\">\n              skip_previous\n            </span>\n          </Button>\n          <Button onClick={this.handlePlayPause} theme={theme}>\n            <span className=\"material-icons icon-image-preview\">\n              {paused ? \"play_arrow\" : \"pause\"}\n            </span>\n          </Button>\n          <Button onClick={this.handleForward} disabled={!paused} theme={theme}>\n            <span className=\"material-icons icon-image-preview\">skip_next</span>\n          </Button>\n          <Button\n            onClick={this.handleReload}\n            disabled={currentFrame.turn === 0 || !paused}\n            theme={theme}\n          >\n            <span className=\"material-icons icon-image-preview\">refresh</span>\n          </Button>\n          <Button\n            onClick={this.handleSettings}\n            disabled={!persistAvailable}\n            theme={theme}\n          >\n            <span\n              className=\"material-icons icon-image-preview\"\n              title={settingsInfo}\n            >\n              settings\n            </span>\n          </Button>\n          <KeyboardEventHandler\n            handleKeys={Object.values(this.keyboardCodeMap)}\n            onKeyEvent={this.handleKeyEvent}\n          />\n          <KeyboardShortcutsWrapper>\n            <Button onClick={this.handleShortcutPaneShowToggle} theme={theme}>\n              <span className=\"material-icons icon-image-preview\">help</span>\n            </Button>\n            {!this.state.paneHidden && (\n              <ShortcutsPane>\n                <h4>Keyboard shortcuts</h4>\n                <ul>\n                  <li>Reload = r</li>\n                  <li>Play/Pause = space</li>\n                  <li>Backward = left arrow</li>\n                  <li>Forward = right arrow</li>\n                  <li>Settings = comma</li>\n                </ul>\n              </ShortcutsPane>\n            )}\n          </KeyboardShortcutsWrapper>\n        </ButtonWrapper>\n      </MediaControlsWrapper>\n    );\n  }\n}\n\nexport default withRouter(MediaControls);\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\n\nimport { colors, themes } from \"../theme\";\n\nconst SVGWrapper = styled(\"div\")`\n  height: 100%;\n  width: 100%;\n\n  > svg {\n    object-fit: contain;\n    width: 100%;\n    height: 100%;\n    max-width: 100%;\n    max-height: 100%;\n  }\n`;\n\nconst SVGLogo = props => {\n  return (\n    <SVGWrapper>\n      <svg\n        data-name=\"Layer 1\"\n        viewBox=\"0 0 360 150.82\"\n        width=\"1em\"\n        height=\"1em\"\n        {...props}\n      >\n        <defs>\n          <linearGradient\n            id=\"Wordmark_svg__a\"\n            x1={118.62}\n            y1={69.31}\n            x2={345.43}\n            y2={181.87}\n            gradientTransform=\"matrix(1 0 0 -1 0 150.95)\"\n            gradientUnits=\"userSpaceOnUse\"\n          >\n            <stop offset={0} stopColor=\"#3d2f90\" />\n            <stop offset={1} stopColor=\"#ea0578\" />\n          </linearGradient>\n          <linearGradient\n            id=\"Wordmark_svg__b\"\n            x1={153.2}\n            y1={-0.36}\n            x2={380.02}\n            y2={112.21}\n            xlinkHref=\"#Wordmark_svg__a\"\n          />\n          <linearGradient\n            id=\"Wordmark_svg__c\"\n            x1={110.47}\n            y1={85.74}\n            x2={337.28}\n            y2={198.31}\n            xlinkHref=\"#Wordmark_svg__a\"\n          />\n          <linearGradient\n            id=\"Wordmark_svg__d\"\n            x1={132.19}\n            y1={41.99}\n            x2={359}\n            y2={154.56}\n            xlinkHref=\"#Wordmark_svg__a\"\n          />\n          <linearGradient\n            id=\"Wordmark_svg__e\"\n            x1={98.64}\n            y1={109.56}\n            x2={325.45}\n            y2={222.13}\n            xlinkHref=\"#Wordmark_svg__a\"\n          />\n          <linearGradient\n            id=\"Wordmark_svg__f\"\n            x1={130.52}\n            y1={47.49}\n            x2={364.27}\n            y2={163.5}\n            xlinkHref=\"#Wordmark_svg__a\"\n          />\n          <linearGradient\n            id=\"Wordmark_svg__g\"\n            x1={13.42}\n            y1={72.58}\n            x2={346.58}\n            y2={72.58}\n            xlinkHref=\"#Wordmark_svg__a\"\n          />\n          <linearGradient\n            id=\"Wordmark_svg__h\"\n            x1={86.06}\n            y1={89.18}\n            x2={274.73}\n            y2={89.18}\n            gradientUnits=\"userSpaceOnUse\"\n          >\n            <stop offset={0.23} stopColor=\"#3d2f90\" />\n            <stop offset={1} stopColor=\"#9f1782\" />\n          </linearGradient>\n        </defs>\n        <g opacity={0.15}>\n          <path\n            d=\"M215.54 86.65h-23.25V41h-10.54v45.65H158.5V41H142l-8.33-20h94.25l-.45 20h-12z\"\n            fill=\"url(#Wordmark_svg__a)\"\n          />\n          <path\n            d=\"M339.67 139L254 92.43l22-22.36-21.6-49.25h86.18v8.25L326.36 39l15.87 13.86h-39.14l11.13 24-12.44 12.6z\"\n            fill=\"url(#Wordmark_svg__b)\"\n          />\n          <path\n            d=\"M105.76 87.44L88.25 69.73l20.55-49.12h22.4l27.62 66H133.6l-3.38-8.53h-20.79z\"\n            fill=\"url(#Wordmark_svg__c)\"\n          />\n          <path\n            d=\"M256.83 86.65h-27.21V21.06h23.24V63h18l3 6.8z\"\n            fill=\"url(#Wordmark_svg__d)\"\n          />\n          <path\n            d=\"M21.56 139l38-49.57-12.47-12.67 11.14-24H19l15.87-13.83L20.63 29v-8.28h86.17L85.28 70.13l22 22.3z\"\n            fill=\"url(#Wordmark_svg__e)\"\n          />\n        </g>\n        <path\n          d=\"M87.27 125.08a3.06 3.06 0 00.84-.72l-1.65 1.11z\"\n          fill=\"url(#Wordmark_svg__f)\"\n        />\n        <path\n          d=\"M343.93 133.36l-88.33-48 22.65-23.05-22.17-50.51h88.81V20l-14.66 10.19 16.35 14.28h-40.34l11.48 24.69-12.82 13.1zM259 84.84L336.51 127l-34.3-44.92 13.07-13.35L303 42.4h38.11L326.92 30l15.93-11.13v-5.39h-83.66l21.48 49.26zm57.7-57.75a4.75 4.75 0 114.74-4.75 4.66 4.66 0 01-4.79 4.75zm0-7.49a2.74 2.74 0 102.74 2.74 2.7 2.7 0 00-2.79-2.74zm-185-7.81l8.3 20.58h17.31v46.21L129.1 11.81H106C99 28.68 91.89 45.08 84.83 62l18 18.25 3.68-9.63h21.59q1.72 4.41 3.47 8.8h49.62v-47h10.88v47H216v-47h12.28V11.8zm1.3 65.55l-3.47-8.8h-24.38l-3.05 8-14.86-15c6.71-16.05 13.42-31.6 20.13-47.64h20.37c8.93 21.32 17.85 42.16 26.77 63.49zm93.34-47H214v47h-19.9v-47h-14.95v47h-19.87v-47h-17.94l-6.77-16.5h91.73zM109.91 55h14.93l-7.47-19.8q-3.73 9.92-7.46 19.8zm2.94-2l4.52-12 4.52 12zm160 2h-18.54V11.8h-23.52l-.43 67.39 28.09.19 17.46-17.29zm-15.24 22.34l-25.21-.18V13.47h19.85V57h19.21l2 4.59zm-155.18 9.09zm0 0zm0 0zM43.4 17.6a4.75 4.75 0 104.75 4.74 4.65 4.65 0 00-4.75-4.74zm0 7.48a2.74 2.74 0 112.74-2.74 2.69 2.69 0 01-2.74 2.74zm38.33 37.55l22.12-50.8H15.12V20l14.65 10.22-16.35 14.27h40.34l-11.48 24.7 12.8 13.11L16.81 133l82.84-45.06 4.68-2.54zm19.37 22.2L23.53 127l34.31-44.91-13.07-13.35L57 42.4H18.89L33.12 30 17.2 18.89v-5h83.62c-5 11.68-21.57 49.2-21.57 49.2z\"\n          fill=\"url(#Wordmark_svg__g)\"\n        />\n        <path\n          d=\"M271.62 55.66c-.23-.26-.17-.48-.69-.44a.74.74 0 00-.43 1.21c.08.09-.2.2-.24.18a3.85 3.85 0 00-.44-.19c-.08 0-.13.11-.17-.05s-.34-.41-.52-.35-.05.08-.15 0-.2-.21-.36-.18a26.54 26.54 0 00-6.15 2.16 4.38 4.38 0 01-1.27.5c-.2 0-.37-.38-.65-.23a5.68 5.68 0 01-.77.42c-.19 0-.24-.09-.39 0-3.16 1.26-6.21 2.65-9.28 4.07a6.76 6.76 0 01-1 .32c-1.08.36-2.12.67-3.22 1a15.64 15.64 0 00-3.32 1.12.55.55 0 00.06 1c-2.37 1-4.82 1.88-7.25 2.74-.78.27-.46 1.19.29 1.19-.21.23-.16.1-.43.41a4.37 4.37 0 00-.93 1.57c0 .18.25.49.25.62a1.69 1.69 0 010 .21c-.12 5.6.05 11.16.23 16.75l-.54.15a40.47 40.47 0 01-6 1 21.23 21.23 0 01-3.56.12c-.18 0-.3-.36-.48-.39a.63.63 0 01-.39-.13c-.83-.65-1.57-1-2.38-1.81a18.7 18.7 0 01-2.26-3l.06-.12a7 7 0 01.54-.76c.17-.21.38-.52.58-.75a6.21 6.21 0 00.42-.81 15.73 15.73 0 011.7-2.19c.68-.77.86-.9 1.78-2s3.47-4 4.35-5.13a11.59 11.59 0 001.53-2.28c.22-.44 0-.76.14-1.14a2.57 2.57 0 00.16-.93 2.13 2.13 0 00-.63-1.13 2.94 2.94 0 00-.81-.56c-.31-.15-.52-.31-.86-.44s-.52-.63-.87-.76a4.06 4.06 0 01-1.23-.45c-.34-.26-.76-.78-1.12-.8s-.71.54-1 .76-.81.56-1.09.77.12.4.21.41.34.26.26.33-.31-.13-.51-.07-.34-.14-.62.2c-1.47 1.75-3.95 4.69-5.31 6.22a20.74 20.74 0 00-2.45 3.44c-.32.49-.62.91-1 1.36l-1.12 1.43c-.29.39-.36.47-.61.83v-1.84c0-.84 0-2.07.05-3 0-1.52-.09-3.48-.09-4.9a11.51 11.51 0 00-.72-3.5c-.23-.83.2-1.82.12-2.56s-.46-.72-1-.67a.73.73 0 00-1.24-.76c-.55.61-.73 1.28-1.28 1.77-.88.77-1.84 1.33-2.69 2.12-2.23 0-2.4 1.66-2.55 3.52a1.51 1.51 0 000 .7 4.64 4.64 0 01.05 1c.06.82 0 2 .07 2.68s-.38 1.06-.38 1.55c0 1.71.19 3.36.08 5-.08 1.09-.11 2-.19 3.11-.43-.5-.85-1-1.26-1.51-2.74 1.08-5.55 2.22-8.29 3.15a3.45 3.45 0 01-.66.19c-.23 0-.36.25-.54.21s-.38.18-.54 0a12 12 0 01-1.2-2.32c-.36-.76-.8-1.81-1.1-2.54l-.78-1.88c-.27-.66-.6-1.2-.86-1.86s-.39-1.44-.67-2.11a2.09 2.09 0 01-.08-.23 18 18 0 00-2.83-6.09c-.14-.23-.26-.71-.38-.67a2.44 2.44 0 00-.79 1c-.06.28.64.89.62 1.12s-.58 0-.64-.09 0-.05 0-.15a.66.66 0 00-.25-.37c-.08 0 0-.15 0-.11a12.69 12.69 0 00-.75 1.09 1.39 1.39 0 01-1.69.42c-1.19-.55-2.33-1.15-3.51-1.71a5.54 5.54 0 00-.57-.21c-1.07 2.51-1.71 5.11-3.37 7.32 0 .07-.19.11-.24.16a4.61 4.61 0 00-.76 2 1.91 1.91 0 01-.07.3c-.27.59-.64 1.51-.87 2s.06.6.12.9 0 .07-.09.46a18.56 18.56 0 01-.56 1.78 2.17 2.17 0 000 .51c0 .14.15.28.13.39-.1.61-.3 1.32-.42 1.89s-.32 1.42-.42 1.87-.18.79-.24 1 0 0-.05.09 0 0 0 .06a.1.1 0 010 .09v.07a1 1 0 000 .12v.13a1.27 1.27 0 01-.06.18V92c0 .07 0 0 0 0v.07a.13.13 0 000 .08v.07c0 .07 0-.1 0 0a3.48 3.48 0 01-.1.41v.2c0 .02 0 0 0 0v-.07c0 .01 0 0 0 0v.15c0 .02 0 0 0 0v.25c0 .05 0 0 0 0v.19a.58.58 0 000 .18v.06a.51.51 0 010 .13v.06a.45.45 0 000 .11v.19c0 .04 0 0 0 0a.54.54 0 010 .15s0 .22-.08.31 0-.07 0 0v.11c0 .19-.15.65-.23 1a28.7 28.7 0 00-1.06 5.79 5.35 5.35 0 00.15 1c-.16.21-.32.38-.48.58a2 2 0 01.63.44c.08.12 0 .1 0 .15s-.05 0-.05.06v.08a.33.33 0 010 .14v.14a.26.26 0 000 .15V104.62c0 .07 0-.06 0 0v.35c0 .05.05 0 0 0s0 0 0 .06v1.04c0 .03 0 .06 0 0v.1c0 .03 0 0 0 0v.06c0 .06 0 0 0 0a.31.31 0 010 .1v.09a1.94 1.94 0 010 .24s0-.06 0 0a1.29 1.29 0 010 .19s.06 0 0 .07a.19.19 0 00-.05.11v1.83c0 .21-.06 0 0 0s0 .06 0 .1 0-.06 0 0v.5c0 .02 0 .1 0 0s-.05-.37-.06-.46a1.15 1.15 0 010-.21v-.07-.52-.39a.72.72 0 010-.23v-.05a.16.16 0 000-.09v-.05c0-.05.06 0 0-.07a1.77 1.77 0 01-.05-.32c0-.06.05 0 .06 0a2.36 2.36 0 010-.37v-.07-.05a1.89 1.89 0 00-.06.18v.09a.55.55 0 000 .18v.06c0 .06 0 0 0 0v-.06c0 .01-.06 0-.07 0s0 .14 0 .22V107.65c0 .01 0 0 0 0a.53.53 0 010 .13V108.93a1.07 1.07 0 000 .25v.07a.29.29 0 010 .09V109.83a2.18 2.18 0 000 .25 1.62 1.62 0 000-.22.31.31 0 000-.1v-.06a1.82 1.82 0 010-.33v-.18a.74.74 0 000-.15s0-.06 0 0a1.19 1.19 0 01.05.22v.11a.13.13 0 010 .09v.1s0-.07 0 0a.65.65 0 010 .2v.25a1.48 1.48 0 010 .22.12.12 0 000 .09v-.1c0-.01 0 0 0 0s0-.06 0 0v.12a.46.46 0 010 .14c0 .09.06.4.08.49s0 0 0 .1v.21h.07v-.08-.06s0-.12.05-.11 0 .06.05.08a.15.15 0 010 .07v-.07c0-.03 0 0 0 0a2.64 2.64 0 010-.29c0-.05.05 0 0-.05s0 0 0-.06v-.06-.12a3.23 3.23 0 00.58 1.24 2 2 0 002 .71 34.67 34.67 0 003.8 3.47c.45.33 1.3.2 1.24-.52a42.61 42.61 0 011-11 37.32 37.32 0 00.6-5c0-.45.08-1.23.07-1.71a17.14 17.14 0 001.53 2.92c.6.72 1.28.24 1.25-.47 0 0-.06-.08 0-.1a60.1 60.1 0 015.64-2.31c.5-.17 1-.34 1.54-.48.16.52.51 1.57.66 1.94s0 0 0 .06 0 .2.17.21a1.78 1.78 0 01.88.33c.1.14.1.08.11.12.88 3.28 1.53 6.54 2.08 9.87a.32.32 0 00.54.13c.88-1 1.12-2.38 1.57-3.53s1-2 1.42-3.13c.09-.2.3-.31.43-.5a9.13 9.13 0 001.06-1.91c.06-.15.09-.3.16-.44a3.21 3.21 0 01.24-.36c.1-.15 0-.21 0-.39a6.1 6.1 0 01.13-.84c0-.18 0-.11.06-.27s-.07 0 0-.28a13.8 13.8 0 00.35-1.41.74.74 0 00-.94-.8c-.12-.43-.44-1.16-.54-1.5s-.31-.42-.27-.67-.48-.45-.17-.63c1.12-.7 2.3 0 3.77-1.15A32.81 32.81 0 01202 90.6c.18 1.94.11 4.31.27 6.18 0 .4-.23.13-.32.32a.39.39 0 000 .44c.09.13.18.1.2.24s.28.3.32.39.05 0 0 .13-.36.07-.45.21a.87.87 0 00.06.66c.09.18.25.42.34.56a1.28 1.28 0 01.19.34c0 .16.05.56.07.68s-.06.12-.06.18.08 0 .08 0c.19 1.64.42 3.29.5 4.94a2.84 2.84 0 01-.1.65c0 .21.11.38.12.56a10.85 10.85 0 01-.16 2.28c-.05.27-.32.45-.4.71-.26.8.47 1.49 1.21.92 0 0-.06 0 0-.05a.86.86 0 00.47-.37c.13-.25.62-1 .74-1.24-.13.32-.36.7-.49 1.05-.3.87.78 1.61 1.28.76.92-1.54 1.55-3.23 2.43-4.76.06-.1.25 0 .35-.06a6.31 6.31 0 001.88-2.61 34.47 34.47 0 001-3.31 8.37 8.37 0 01.37-1.35c.51-1.24 1.26-2.64 1.92-3.87a7 7 0 001.44 1 37.56 37.56 0 006.37 1.92c.34.09.52.23.78.29s.19 0 .47 0 1.18.28 1.39.34.14.1.19.11a15.09 15.09 0 002.6.38 16.39 16.39 0 003 0c.37 0 .78-.15 1.14-.18 1.2-.12 2.37-.19 3.55-.4 0 .65.12 1.31.12 1.95 0 .12-.15.19-.18.32a3.18 3.18 0 00.54 2.85v1c0 1.14-.17 2.53.6 3.52 0 0 .12.07.13.12.13.8.33 1.8 1.26 1.86a7.35 7.35 0 002.34-.51c1-.21 1.82-.49 3-.75s2.4-.69 3.77-.94 3.3-.54 4.71-.93 2.45-.83 3.88-1.29 3.22-.75 4.7-1.24a.74.74 0 00-.21-1.46 14.51 14.51 0 00-2.94.61 13 13 0 002.63-1.16c.33-.21.9-.4.95-.72.19-1.07.35-2.65.61-3.58s.42-1.3.6-2.06c.05-.19-.18-.39-.36-.45s-.58 0-.82-.17-.51-.4-.74-.62-.53-.57-.77-.76-.55-.6-.86-.51a20 20 0 01-2.52.94 12.39 12.39 0 00-2.31 1.1c-.93.33-1.95.21-2.76.47s-1.4.36-2.12.57a18.91 18.91 0 01-2.18.46 4.08 4.08 0 01-1.64-.23v-2.94c0-1.04 0-2.21-.05-3.27a3.52 3.52 0 001.21 0c.43-.12 1 .12 1.42.07s.78-.35 1.15-.27a1.9 1.9 0 00.94-.15 1.42 1.42 0 01.4-.06h.61a7.28 7.28 0 002.23-.54.85.85 0 01.19-.09c.14 0 .74-.26.86-.28s.13-.13.15-.08c.32.61.9.44 1.31.2s.57-.36.59-.75-.05-1 0-1.26.16-.18.21-.26c.34-.52 1.11-1.1 1.35-1.54a1.51 1.51 0 00-.06-1.19 1.94 1.94 0 00-.5-1c-.21-.11-.79 0-.91-.12 0-.77.06-1.52.12-2.28 0-.23-.1-.35-.16-.53a.79.79 0 00-1.52-.09c0 .07 0 .21-.06.21s0 0-.19-.06-.33-.36-.8-.23-1.08.32-1.78.45-1.89.45-2.69.54c-1.28.14-2.79.89-4 .32-.27-.12.69-3.9.7-4.3s-.07-.26 0-.28c2.09-1 4.15-2.11 6.25-3.08 2.62-1.21 5.27-2.3 7.95-3.35 2-.79 4.08-1.48 6.13-2.18-.12-.31-.1-.59.26-.75 1.25-.57 2.59-1 3.9-1.43a6.92 6.92 0 001.3-.5 1.15 1.15 0 00.29-.84c0-.09-.5.11-.76.09a4.71 4.71 0 01-1 0c-.43-.07-.93-.73-.46-1.17.08-.07.12.2.21.19s.14.08.22.08h.13c-.07 0-.1 0 0 0a.69.69 0 00.32 0h.07c.07 0 .06 0 .22-.11a1 1 0 00.39-.77.66.66 0 00-.48-.61c-.31-.11-.52.15-.7.31a2.08 2.08 0 00-.37.35c-.13.16.14.28-.08.39a2.21 2.21 0 01-1 .15c-.52 0-.78-.88-.32-1.26s1.09-.47 1.31-.74 0-.74 0-.81a4.37 4.37 0 00-.94.13c-.22 0-.81-.27-.83-.41s-.09 0 .08 0 .59 0 .94.09a1.1 1.1 0 001.27-1.19c-.06-.64-.78-.76-1-.87s-.39 0-.31-.06a22.56 22.56 0 012.11-1.2 2.39 2.39 0 00.34-.18c.23-.14.78-.39 1.14-.58.75-.4 1.63-.8 2.4-1.23.16-.08.33-.09.48-.27s.26-.71.41-1c-1.07.44-2.12.85-3.15 1.22zm-90.93 35.1c-1 .21-1.92.39-2.88.57a1.85 1.85 0 01-.54.11c-.15 0-.56.22-.57.09a4 4 0 01.33-1c.1-.34.29-.69.42-1.09a29.15 29.15 0 011.09-2.94c.42-1 1-1.91 1.48-2.89.07-.15.14-.42.2-.59.58 1.16 1.16 2.37 1.71 3.54s1 2.29 1.58 3.46c-.93.25-1.87.53-2.82.74zm-19.42-16.94a.61.61 0 00-.77-.21l-.36-.33c-1.9-2.24-3.76-4.49-5.8-6.51a.62.62 0 00-.32.47l-.31 2v.23c-.38 2.38-.74 4.73-1.1 7.09a.75.75 0 00.38.8 3.19 3.19 0 01-.45 1.19c0 1.1.16 2.24.22 3.21v2.71a1.22 1.22 0 000 .27 1.09 1.09 0 010 .36 1 1 0 010 .34v1.28a.54.54 0 000 .18v1.54a.17.17 0 010 .14 3.53 3.53 0 010 .65 20.08 20.08 0 01-1 4.78 6.22 6.22 0 01-.29.71 101.58 101.58 0 00-4.11-11.21 7.49 7.49 0 00-.24-1.39.2.2 0 01.29 0l-.09.11a1.93 1.93 0 010-.34.49.49 0 000-.24 1.81 1.81 0 00-.22-.32v-.2h.15c.16 0 .18 0 .2-.31a10.6 10.6 0 00-.6-1.33c-.45-3-.79-5.92-1-9a.73.73 0 00-.76-.68 4 4 0 01-.16-.45 1 1 0 00-.22-.34l-.36.3a66.17 66.17 0 01-7.72 8.25c-.49.74-1 1.48-1.43 2.24V80a1.27 1.27 0 01.9.87.77.77 0 00.4-.29l.36-.52c-.5 2.61-1 5.21-1.55 7.79L134 93.71a28.65 28.65 0 00-1 5.74.25.25 0 00.25.25c-.2 1-.43 2.11-.63 3.12a.58.58 0 00-.31.63 7.39 7.39 0 001.25 2.49c.29.47.63 1 1 1.61s.89 1.48 1.39 2.24a13.37 13.37 0 001.59 1.93 4.63 4.63 0 00.65.52 43.92 43.92 0 012.09 4 .72.72 0 001.32-.17l2.76-15.3.2.36c.16-.41 2.09-1.77 2.09-1.06v.45a.46.46 0 01.42.27c.59 1.26 4 8 4.49 9a37.3 37.3 0 003 4.8 18.27 18.27 0 012.51 2.69.72.72 0 001 .23.73.73 0 00.33-.58c.52-4.06 1.95-11.65 2.09-15.71a4.18 4.18 0 01.51-.8c.05-1 .15-2 .3-3 0-1.06.18-2 .26-2.94.39-2.92.74-5.83 1.13-8.73.29-2.24.62-4.48.83-6.72a7.27 7.27 0 00-2.25-5.21zm-25.46-11.64l-.63.92a.67.67 0 00-.88-.37l-.27.13a.75.75 0 00-.31-.6.53.53 0 000-.74.53.53 0 00-.25-.63 1.19 1.19 0 00-.6-.2.51.51 0 00-.25-.59 12.81 12.81 0 001.3-.74.61.61 0 010-.27 2.18 2.18 0 01.61-.6l-2.25 1.59a1.09 1.09 0 00-.67 0 .72.72 0 00-.54 0 .68.68 0 00-.49.63c-1.12.65-2.24 1.34-3.3 2H127a1.36 1.36 0 00-.81.62l-2.24 1.4a16.6 16.6 0 00-2.87 1.9l-.94.49q.33-.27.69-.51c2.25-1.66 4.65-3.21 6.73-5.07.43-.36 0-1-.58-.74a59.61 59.61 0 00-7.25 4.87c-2.24 1.7-4.68 3.43-7 5.2-4.49 3.45-9.13 6.95-13.46 10.77a.62.62 0 00-.25.47 12 12 0 00-2.78 2.35c.49 3.12 2.74 5.5 4.22 8.28a71.94 71.94 0 019.4 2c1 .29 2 .61 2.91.94a8 8 0 012.8 1.28 4.35 4.35 0 01.66 4.73 30.7 30.7 0 01-3.95 3.7c-1.64.81-3.28 1.6-4.89 2.43s-2.83 1.48-4.22 2.24a1 1 0 010 .25c-.85.27-1.68.67-2.35.89a45 45 0 00-5 2 .56.56 0 00-.19.77.53.53 0 00.37.26.5.5 0 00.11.69.5.5 0 00.43.08 23.27 23.27 0 004.24-1.8l.29-.13a89 89 0 01-10.45 7.42c-1.51 1-3 2-4.49 3a.69.69 0 01.16.18 47.72 47.72 0 017.49-4.26c.54-.25 1.14.42.65.87a52.65 52.65 0 00-4.17 3.57l.45-.16H91a24.48 24.48 0 013.22-1.86.83.83 0 011.08.47l.16-.13h.13l1-.41-1.26.7a.51.51 0 01-.22.54l-.18.13a7.83 7.83 0 00.92-.45l.38-.24c.56-.36 1 .38.67.83 1.8-1 3.59-1.91 5.41-2.79a.73.73 0 000 .36l-.36.23a.33.33 0 00.25.6 36.92 36.92 0 004.1-1.32l2.92-1.68.38-.2a5.38 5.38 0 011.5 0 .36.36 0 00.42-.29 1.14 1.14 0 010-.45.34.34 0 00.54.36 4.73 4.73 0 01.83-.78 23.8 23.8 0 004.19-2.25 11.66 11.66 0 002.13-1.25l1.21-.94c.65-.43 1.28-.86 1.89-1.33l.53-.45a8.8 8.8 0 001.44-1.14 11.53 11.53 0 011.39-.92.29.29 0 00.13-.39l.59-.89a18.3 18.3 0 001.84-4.49 14.38 14.38 0 00.33-5 7.1 7.1 0 00-.74-2.67l-.69-1.37c-.39-.77-.82-1.52-1.28-2.24a16.27 16.27 0 00-3.52-3.26 23.53 23.53 0 00-4.49-2.24 18.39 18.39 0 01-4.73-1.68.6.6 0 01-.2-.27c3-1.91 6-3.9 9-5.85 3.72-2.45 7.58-4.8 11.21-7.5l2.47-1.25v-.18a1.23 1.23 0 01-.81-1 1.3 1.3 0 01-.47-.85.48.48 0 00.16-.12 4.48 4.48 0 00.94-2.24.57.57 0 00.82 0 .53.53 0 00.17-.25 4.17 4.17 0 000-.5.7.7 0 00-.65-.63c.24-.42.47-.87.71-1.27a.58.58 0 00-.51-.65z\"\n          fill=\"url(#Wordmark_svg__h)\"\n        />\n      </svg>\n    </SVGWrapper>\n  );\n};\n\nconst StyledLogo = styled(SVGLogo)`\n  > path {\n    fill: ${({ color, theme }) => {\n      return !color\n        ? theme === themes.dark\n          ? colors.white\n          : colors.purple\n        : color;\n    }};\n  }\n`;\n\nexport default StyledLogo;\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\n\nimport BlankState from \"./blank-state\";\nimport LoadingIndicator from \"./loading-indicator\";\nimport GameNotFound from \"./game-not-found\";\nimport Board from \"./board\";\nimport Scoreboard from \"./scoreboard\";\nimport MediaControls from \"./mediaControls\";\nimport Logo from \"./logo\";\nimport { breakpoints, colors, themes } from \"../theme\";\nimport styles from \"./game/GamePage.module.css\";\n\nconst BoardTitle = styled(\"div\")(({ theme }) => ({\n  fontSize: \"2rem\",\n  fontWeight: \"600\",\n  textAlign: \"center\",\n  textTransform: \"uppercase\",\n  color: theme === themes.dark ? colors.lightText : colors.darkText\n}));\n\nconst HeaderWrapper = styled(\"div\")`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  margin: 0.5rem 0;\n  text-align: center;\n\n  @media (min-width: ${breakpoints.xxl}) {\n    padding-top: 1rem;\n    padding-bottom: 2rem;\n  }\n`;\n\nconst LogoWrapper = styled(\"div\")`\n  width: 100%;\n  height: 5rem;\n\n  @media (min-width: ${breakpoints.lg}) {\n    height: 8rem;\n  }\n\n  @media (min-width: ${breakpoints.xxl}) {\n    height: 16rem;\n  }\n`;\n\nconst TurnCount = styled(\"div\")`\n  font-size: 2rem;\n  font-weight: 600;\n  text-transform: uppercase;\n  color: ${({ theme }) =>\n    theme === themes.dark ? colors.lightText : colors.darkText};\n\n  @media (min-width: ${breakpoints.xxl}) {\n    font-size: 3rem;\n  }\n`;\nconst TurnCountValue = styled(\"span\")`\n  display: inline-block;\n  width: 6rem;\n`;\n\nconst BoardWrapper = styled(\"div\")`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  height: 100%;\n\n  @media (min-width: ${breakpoints.md}) {\n    width: ${({ hideScoreboard }) => (hideScoreboard ? \"100%\" : \"60vw\")};\n  }\n`;\n\nconst ScoreboardWrapper = styled(\"div\")`\n  display: none;\n  width: 40vw;\n  padding: 0 2rem;\n\n  @media (min-width: ${breakpoints.md}) {\n    display: ${({ hide }) => (hide ? \"none\" : \"block\")};\n  }\n`;\n\nconst Ruleset = styled(\"p\")`\n  margin: 0.25rem;\n  width: 100%;\n  font-size: 1.2rem;\n  text-align: center;\n  color: #aaa;\n  text-transform: capitalize;\n`;\n\nclass Game extends React.Component {\n  componentDidMount() {\n    const { options } = this.props;\n\n    this.props.togglePlayButtons(\"show\");\n\n    if (options.theme) {\n      this.props.toggleTheme(options.theme);\n    }\n\n    if (!(options.game && options.engine)) {\n      this.invalidArgs = true;\n      return;\n    }\n\n    this.hideLogo = options.hideLogo === \"true\";\n    this.hideScoreboard = options.hideScoreboard === \"true\";\n    this.showFrameScrubber = options.showFrameScrubber;\n    this.title = options.title && decodeURIComponent(options.title);\n    this.props.setGameOptions(options);\n\n    if (this.props.frames.length === 0) {\n      this.props.fetchFrames();\n    }\n  }\n\n  render() {\n    if (this.invalidArgs) {\n      return <BlankState />;\n    }\n\n    if (this.props.gameNotFound) {\n      return <GameNotFound />;\n    }\n\n    if (this.props.currentFrame) {\n      return this.renderGame();\n    }\n\n    return <LoadingIndicator />;\n  }\n\n  renderGame() {\n    const { currentFrame, options } = this.props;\n    return (\n      <main className={options.theme}>\n        <section className={styles.game}>\n          <BoardWrapper hideScoreboard={this.hideScoreboard}>\n            <BoardTitle theme={options.theme}>{this.title}</BoardTitle>\n            <Board\n              snakes={currentFrame.snakes}\n              food={currentFrame.food}\n              foodImage={options.foodImage}\n              hazards={currentFrame.hazards}\n              columns={this.props.grid.width}\n              rows={this.props.grid.height}\n              highlightedSnake={this.props.highlightedSnake}\n              theme={options.theme}\n              turn={currentFrame.turn}\n              showCoordinateLabels={options.showCoordinateLabels}\n            />\n            <MediaControls\n              currentFrame={currentFrame}\n              hideControls={options.hideMediaControls === \"true\"}\n              reloadGame={this.props.reloadGame}\n              toggleGamePause={this.props.toggleGamePause}\n              stepBackwardFrame={this.props.stepBackwardFrame}\n              stepForwardFrame={this.props.stepForwardFrame}\n              stepToTurn={this.props.stepToTurn}\n              pauseGame={this.props.pauseGame}\n              paused={this.props.paused}\n              theme={options.theme}\n              persistAvailable={options.persistAvailable}\n              maxTurn={this.props.frames[this.props.frames.length - 1].turn}\n              showFrameScrubber={this.showFrameScrubber}\n              hasAllFrames={this.props.hasAllFrames}\n            />\n          </BoardWrapper>\n          {!this.hideScoreboard && (\n            <ScoreboardWrapper>\n              <HeaderWrapper>\n                {!this.hideLogo && (\n                  <LogoWrapper>\n                    <Logo theme={options.theme} />\n                  </LogoWrapper>\n                )}\n                <TurnCount theme={options.theme}>\n                  Turn <TurnCountValue>{currentFrame.turn}</TurnCountValue>\n                </TurnCount>\n              </HeaderWrapper>\n              <Scoreboard\n                turn={currentFrame.turn}\n                snakes={currentFrame.snakes}\n                food={currentFrame.food}\n                highlightSnake={this.props.highlightSnake}\n                theme={options.theme}\n              />\n              <Ruleset>Rules: {this.props.ruleset.name}</Ruleset>\n            </ScoreboardWrapper>\n          )}\n        </section>\n      </main>\n    );\n  }\n}\n\nexport default Game;\n","export const SET_GAME_OPTIONS = \"SET_GAME_OPTIONS\";\nexport const SET_THEME = \"SET_THEME\";\nexport const GAME_OVER = \"GAME_OVER\";\nexport const GAME_NOT_FOUND = \"GAME_NOT_FOUND\";\nexport const FETCH_FRAMES = \"FETCH_FRAMES\";\nexport const REQUEST_FRAMES = \"REQUEST_FRAMES\";\nexport const RECEIVE_FRAME = \"RECEIVE_FRAME\";\nexport const SET_CURRENT_FRAME = \"SET_CURRENT_FRAME\";\nexport const PAUSE_GAME = \"PAUSE_GAME\";\nexport const RESUME_GAME = \"RESUME_GAME\";\nexport const HIGHLIGHT_SNAKE = \"HIGHLIGHT_SNAKE\";\nexport const RECEIVE_EVENT_END = \"RECEIVE_EVENT_END\";\nexport const TOGGLE_SETTINGS_VIEW = \"TOGGLE_SETTINGS_VIEW\";\nexport const THEME_CHANGED = \"THEME_CHANGED\";\n","import { themes } from \"../../theme\";\n\nexport const DEFAULT_FRAMERATE = 6;\n\nexport const initialSettings = {\n  frameRate: DEFAULT_FRAMERATE,\n  theme: themes.light,\n  autoplay: false,\n  showFrameScrubber: false,\n  persistAvailable: false,\n  showCoordinateLabels: false\n};\n","import { delay, getFrameByTurn, streamAllEvents } from \"../utils/engine-client\";\nimport * as types from \"./action-types\";\nimport { DEFAULT_FRAMERATE } from \"../components/settings/defaults\";\n\nexport const setGameOptions = gameOptions => ({\n  type: types.SET_GAME_OPTIONS,\n  gameOptions\n});\n\nexport const setTheme = theme => ({\n  type: types.SET_THEME,\n  theme\n});\n\nexport const gameOver = () => ({\n  type: types.GAME_OVER\n});\n\nexport const gameNotFound = () => ({\n  type: types.GAME_NOT_FOUND\n});\n\nexport const requestFrames = () => ({\n  type: types.REQUEST_FRAMES\n});\n\nexport const receiveFrame = (game, frame) => ({\n  type: types.RECEIVE_FRAME,\n  game,\n  frame\n});\n\nexport const receiveEventEnd = (game, endEvent, frame) => ({\n  type: types.RECEIVE_EVENT_END,\n  game,\n  endEvent,\n  frame\n});\n\nexport const setCurrentFrame = frame => ({\n  type: types.SET_CURRENT_FRAME,\n  frame\n});\n\nexport const pauseGame = () => ({\n  type: types.PAUSE_GAME\n});\n\nexport const resumeGame = () => ({\n  type: types.RESUME_GAME\n});\n\nexport const highlightSnake = snakeId => ({\n  type: types.HIGHLIGHT_SNAKE,\n  snakeId\n});\n\nexport const fetchFrames = () => {\n  return async (dispatch, getState) => {\n    const {\n      autoplay,\n      engine: engineUrl,\n      game: gameId,\n      turn\n    } = getState().game.gameOptions;\n\n    dispatch(requestFrames());\n\n    try {\n      await streamAllEvents(engineUrl, gameId, (game, eventType, eventData) => {\n        if (eventType === \"frame\") {\n          const frame = eventData;\n          // Workaround for bug where turn exluded on turn 0\n          frame.Turn = frame.Turn || 0;\n          dispatch(receiveFrame(game, frame));\n\n          // Workaround to render the first frame into the board\n          if (frame.Turn === 0) {\n            const frame = getState().game.frames[0];\n            dispatch(setCurrentFrame(frame));\n\n            if (autoplay) {\n              dispatch(resumeGame());\n              dispatch(playFromFrame(frame));\n            }\n          }\n        } else if (eventType === \"game_end\") {\n          const numFrames = getState().game.frames.length;\n          const frame = getState().game.frames[numFrames - 1];\n          frame.gameOver = true;\n          dispatch(receiveEventEnd(game, eventData, frame));\n        }\n      });\n    } catch (e) {\n      return dispatch(gameNotFound());\n    }\n\n    // Only navigate to the specified frame if it is within the\n    // amount of frames available in the game\n    if (turn && turn <= getState().game.frames.length) {\n      const frame = getState().game.frames[turn];\n      dispatch(setCurrentFrame(frame));\n    }\n  };\n};\n\nexport const playFromFrame = frame => {\n  return async (dispatch, getState) => {\n    const { frameRate } = getState().game.gameOptions;\n    const frames = getState().game.frames.slice(); // Don't modify in place\n    const frameIndex = frames.indexOf(frame);\n    const slicedFrames = frames.slice(frameIndex);\n\n    const ceiledFps = Math.ceil(frameRate || DEFAULT_FRAMERATE);\n    const delayMillis = 1000 / ceiledFps;\n\n    for (const frame of slicedFrames) {\n      if (getState().game.paused) return;\n      dispatch(setCurrentFrame(frame));\n      await delay(delayMillis);\n    }\n\n    const lastFrame = slicedFrames[slicedFrames.length - 1];\n    if (lastFrame.gameOver) {\n      if (!getState().game.paused) {\n        if (getState().game.gameOptions.loop) {\n          const frame = getFrameByTurn(frames, 0);\n          dispatch(playFromFrame(frame));\n        } else {\n          dispatch(gameOver());\n        }\n      }\n    } else {\n      dispatch(playFromFrame(lastFrame));\n    }\n  };\n};\n\nexport const reloadGame = () => {\n  return async (dispatch, getState) => {\n    const { frames, paused } = getState().game;\n    if (paused) {\n      const frame = getFrameByTurn(frames, 0);\n      dispatch(setCurrentFrame(frame));\n    }\n  };\n};\n\nexport const toggleGamePause = () => {\n  return async (dispatch, getState) => {\n    const { currentFrame, paused } = getState().game;\n\n    if (paused) {\n      dispatch(resumeGame());\n      dispatch(playFromFrame(currentFrame));\n    } else {\n      dispatch(pauseGame());\n    }\n  };\n};\n\nexport const pauseGameAction = () => {\n  return async (dispatch, getState) => {\n    const { paused } = getState().game;\n\n    if (!paused) {\n      dispatch(pauseGame());\n    }\n  };\n};\n\nexport const toggleTheme = themeToSet => {\n  return async dispatch => {\n    dispatch(setTheme(themeToSet));\n  };\n};\n\nexport const stepForwardFrame = () => {\n  return async (dispatch, getState) => {\n    const { currentFrame, frames } = getState().game;\n    const nextFrame = currentFrame.turn + 1;\n    const stepToFrame = getFrameByTurn(frames, nextFrame);\n    if (stepToFrame) {\n      dispatch(setCurrentFrame(stepToFrame));\n    }\n  };\n};\n\nexport const stepBackwardFrame = () => {\n  return async (dispatch, getState) => {\n    const { currentFrame, frames } = getState().game;\n    const prevFrame = currentFrame.turn - 1;\n    const stepToFrame = getFrameByTurn(frames, prevFrame);\n    if (stepToFrame) {\n      dispatch(setCurrentFrame(stepToFrame));\n    }\n  };\n};\n\nexport const stepToTurn = turn => {\n  return async (dispatch, getState) => {\n    const { frames } = getState().game;\n\n    const stepToFrame = getFrameByTurn(frames, turn);\n    if (stepToFrame) {\n      dispatch(setCurrentFrame(stepToFrame));\n    }\n  };\n};\n\nexport const togglePlayButtons = showHide => ({\n  type: types.TOGGLE_SETTINGS_VIEW,\n  showHide\n});\n\nexport const themeChanged = theme => ({\n  type: types.THEME_CHANGED,\n  theme\n});\n","import { connect } from \"react-redux\";\nimport { parseQueryString } from \"../../utils/url\";\nimport Game from \"../../components/game\";\nimport {\n  fetchFrames,\n  reloadGame,\n  toggleGamePause,\n  toggleTheme,\n  setGameOptions,\n  stepForwardFrame,\n  stepBackwardFrame,\n  stepToTurn,\n  highlightSnake,\n  pauseGameAction,\n  togglePlayButtons\n} from \"../../actions\";\n\nconst options = parseQueryString(window.location.search);\nif (typeof options.autoplay !== \"undefined\") {\n  options.autoplay = options.autoplay === \"true\";\n}\nif (typeof options.showFrameScrubber !== \"undefined\") {\n  options.showFrameScrubber = options.showFrameScrubber === \"true\";\n}\n\nconst mapStateToProps = state => {\n  const gameState = state.game;\n  const settings = state.settings;\n\n  return {\n    options: { ...settings, ...options },\n    ruleset: gameState.ruleset,\n    grid: gameState.grid,\n    gameNotFound: gameState.gameNotFound,\n    paused: gameState.paused,\n    currentFrame: gameState.currentFrame,\n    frames: gameState.frames,\n    highlightedSnake: gameState.highlightedSnake,\n    theme: options.boardTheme || settings.theme,\n    hasAllFrames: !!gameState.endEvent\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  setGameOptions: options => dispatch(setGameOptions(options)),\n  fetchFrames: () => dispatch(fetchFrames()),\n  toggleTheme: theme => dispatch(toggleTheme(theme)),\n  reloadGame: () => dispatch(reloadGame()),\n  toggleGamePause: paused => dispatch(toggleGamePause(paused)),\n  pauseGame: () => dispatch(pauseGameAction()),\n  stepForwardFrame: () => dispatch(stepForwardFrame()),\n  stepBackwardFrame: () => dispatch(stepBackwardFrame()),\n  stepToTurn: i => dispatch(stepToTurn(i)),\n  highlightSnake: snakeId => dispatch(highlightSnake(snakeId)),\n  togglePlayButtons: showHide => dispatch(togglePlayButtons(showHide))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Game);\n","import {\n  DEFAULT_FRAMERATE,\n  initialSettings\n} from \"../components/settings/defaults\";\n\nexport function storageAvailable(type) {\n  let storage;\n  try {\n    storage = window[type];\n    const x = \"__storage_test__\";\n    storage.setItem(x, x);\n    storage.removeItem(x);\n    return true;\n  } catch (e) {\n    return (\n      ((e instanceof DOMException &&\n        // everything except Firefox\n        e.code === 22) ||\n        // Firefox\n        e.code === 1014 ||\n        // test name field too, because code might not be present\n        // everything except Firefox\n        e.name === \"QuotaExceededError\" ||\n        // Firefox\n        e.name === \"NS_ERROR_DOM_QUOTA_REACHED\") &&\n      // acknowledge QuotaExceededError only if there's something already stored\n      storage &&\n      storage.length !== 0\n    );\n  }\n}\n\nexport function getLocalSetting(key) {\n  if (storageAvailable(\"localStorage\")) {\n    return window.localStorage.getItem(key);\n  }\n}\n\nexport function setLocalSetting(key, value) {\n  if (storageAvailable(\"localStorage\")) {\n    window.localStorage.setItem(key, value);\n  }\n}\n\nexport function rehydrateLocalSettings() {\n  let checkAutoplay = getLocalSetting(\"autoplay\");\n  let checkShowFrameScrubber = getLocalSetting(\"showFrameScrubber\");\n\n  let showCoordinateLabels = getLocalSetting(\"showCoordinateLabels\");\n\n  if (typeof checkAutoplay === \"undefined\") {\n    checkAutoplay = initialSettings.autoplay;\n  } else {\n    checkAutoplay = checkAutoplay === \"true\";\n  }\n\n  if (typeof checkShowFrameScrubber === \"undefined\") {\n    checkShowFrameScrubber = initialSettings.showFrameScrubber;\n  } else {\n    checkShowFrameScrubber = checkShowFrameScrubber === \"true\";\n  }\n\n  if (typeof showCoordinateLabels === \"undefined\") {\n    showCoordinateLabels = initialSettings.showCoordinateLabels;\n  } else {\n    showCoordinateLabels = showCoordinateLabels === \"true\";\n  }\n\n  return {\n    frameRate: Number(getLocalSetting(\"frameRate\")) || DEFAULT_FRAMERATE,\n    theme: getLocalSetting(\"theme\") || initialSettings.theme,\n    showFrameScrubber: checkShowFrameScrubber,\n    autoplay: checkAutoplay,\n    showCoordinateLabels: showCoordinateLabels\n  };\n}\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { getLocalSetting, setLocalSetting } from \"../../app/storage\";\nimport { initialSettings as initialState } from \"./defaults\";\n\nexport const settingsSlice = createSlice({\n  name: \"settings\",\n  initialState,\n  reducers: {\n    frameRateUpdated(state, action) {\n      state.frameRate = action.payload;\n    },\n    themeSelected(state, action) {\n      state.theme = action.payload;\n    },\n    autoPlayUpdated(state, action) {\n      state.autoplay = action.payload;\n    },\n    showFrameScrubberUpdated(state, action) {\n      state.showFrameScrubber = action.payload;\n    },\n    showCoordinateLabelsUpdated(state, action) {\n      state.showCoordinateLabels = action.payload;\n    }\n  }\n});\n\n// toolkit generates the actions for us\nexport const {\n  frameRateUpdated,\n  themeSelected,\n  autoPlayUpdated,\n  showFrameScrubberUpdated,\n  showCoordinateLabelsUpdated\n} = settingsSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\nexport const currentFrameRate = state => state.settings.frameRate;\nexport const currentTheme = state => state.settings.theme;\nexport const currentAutoplay = state => state.settings.autoplay;\nexport const currentShowFrameScrubber = state =>\n  state.settings.showFrameScrubber;\nexport const currentShowCoordinateLabels = state =>\n  state.settings.showCoordinateLabels;\n\nexport function settingsStoreListener(state) {\n  if (state.settings.frameRate !== getLocalSetting(\"frameRate\")) {\n    setLocalSetting(\"frameRate\", state.settings.frameRate);\n  }\n\n  if (state.settings.theme !== getLocalSetting(\"theme\")) {\n    setLocalSetting(\"theme\", state.settings.theme);\n  }\n\n  if (state.settings.autoplay !== getLocalSetting(\"autoplay\")) {\n    setLocalSetting(\"autoplay\", state.settings.autoplay);\n  }\n\n  if (\n    state.settings.showFrameScrubber !== getLocalSetting(\"showFrameScrubber\")\n  ) {\n    setLocalSetting(\"showFrameScrubber\", state.settings.showFrameScrubber);\n  }\n\n  if (\n    state.settings.showCoordinateLabels !==\n    getLocalSetting(\"showCoordinateLabels\")\n  ) {\n    setLocalSetting(\n      \"showCoordinateLabels\",\n      state.settings.showCoordinateLabels\n    );\n  }\n}\n\nexport default settingsSlice.reducer;\n","import style from \"./PlaybackSpeed.module.css\";\nimport { DEFAULT_FRAMERATE } from \"../defaults\";\n\nexport const SLIDER_SLOW = 1;\nexport const SLIDER_MEDIUM = 2;\nexport const SLIDER_FAST = 3;\n\nexport const SPEED_SLOW = 3;\nexport const SPEED_MEDIUM = DEFAULT_FRAMERATE;\nexport const SPEED_FAST = 20;\n\nconst speedRanges = {\n  SPEED_SLOW: { min: 1, max: 5 },\n  SPEED_MEDIUM: { min: 6, max: 12 },\n  SPEED_FAST: { min: 13, max: 20 }\n};\n\nfunction valueChanged(e, changeHandler) {\n  let fps = SPEED_FAST;\n  const sliderValue = e.target.valueAsNumber || e.target.value;\n\n  if (sliderValue <= SLIDER_SLOW) {\n    fps = SPEED_SLOW;\n  } else if (sliderValue <= SLIDER_MEDIUM) {\n    fps = SPEED_MEDIUM;\n  }\n\n  changeHandler.call(this, fps);\n}\n\nfunction defaultValueHandler(value) {\n  let defaultValue = SLIDER_MEDIUM;\n\n  if (value <= speedRanges.SPEED_SLOW.max) {\n    defaultValue = SLIDER_SLOW;\n  } else if (value > speedRanges.SPEED_MEDIUM.max) {\n    defaultValue = SLIDER_FAST;\n  }\n\n  return defaultValue;\n}\n\nconst PlaybackSpeed = props => {\n  return (\n    <>\n      <input\n        type=\"range\"\n        min={SLIDER_SLOW}\n        max={SLIDER_FAST}\n        value={defaultValueHandler(props.default)}\n        onChange={e => valueChanged(e, props.onChange)}\n      />\n      <div className={style.labels}>\n        <span>Slow</span>\n        <span>Medium</span>\n        <span>Fast</span>\n      </div>\n    </>\n  );\n};\n\nexport default PlaybackSpeed;\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  autoPlayUpdated,\n  currentAutoplay,\n  currentFrameRate,\n  currentTheme,\n  currentShowFrameScrubber,\n  frameRateUpdated,\n  themeSelected,\n  showFrameScrubberUpdated,\n  currentShowCoordinateLabels,\n  showCoordinateLabelsUpdated\n} from \"./settings-slice\";\nimport PlaybackSpeed from \"./playback/PlaybackSpeed\";\nimport styles from \"./SettingsPage.module.css\";\nimport { useHistory } from \"react-router-dom\";\nimport { togglePlayButtons, pauseGame, themeChanged } from \"../../actions\";\n\nconst SettingsPage = () => {\n  const history = useHistory();\n  const theme = useSelector(currentTheme);\n  const playbackSpeed = useSelector(currentFrameRate);\n  const autoplay = useSelector(currentAutoplay);\n  const showFrameScrubber = useSelector(currentShowFrameScrubber);\n  const showCoordinateLabels = useSelector(currentShowCoordinateLabels);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(togglePlayButtons(\"hide\"));\n    dispatch(pauseGame());\n  });\n\n  function dispatchSpeedChange(fps) {\n    dispatch(frameRateUpdated(fps));\n  }\n\n  return (\n    <main>\n      <section>\n        <h2>Playback Settings</h2>\n        <fieldset>\n          <legend>Playback Speed</legend>\n          <div className={styles.info}>\n            Adjust the playback speed of your games\n          </div>\n          <div className={styles.inputContainer}>\n            <PlaybackSpeed\n              default={playbackSpeed}\n              onChange={dispatchSpeedChange}\n            />\n          </div>\n        </fieldset>\n        <fieldset>\n          <legend>Theme</legend>\n          <div className={styles.info}>Change your game theme colors</div>\n          <div className={styles.inputContainer && styles.row}>\n            <label>\n              <input\n                type=\"radio\"\n                value=\"light\"\n                name=\"theme\"\n                checked={theme === \"light\"}\n                onChange={e =>\n                  dispatch(themeSelected(e.target.value)) &&\n                  dispatch(themeChanged(e.target.value))\n                }\n              />\n              <span className={styles.radio} />\n              Light\n            </label>\n            <label>\n              <input\n                type=\"radio\"\n                value=\"dark\"\n                name=\"theme\"\n                checked={theme === \"dark\"}\n                onChange={e =>\n                  dispatch(themeSelected(e.target.value)) &&\n                  dispatch(themeChanged(e.target.value))\n                }\n              />\n              <span className={styles.radio} />\n              Projector\n            </label>\n          </div>\n        </fieldset>\n        <fieldset>\n          <legend>Autoplay</legend>\n          <div className={styles.info}>\n            All games will start playing as soon as the game loads\n          </div>\n          <div className={styles.inputContainer}>\n            <label>\n              <input\n                type=\"checkbox\"\n                name=\"autoplay\"\n                checked={autoplay}\n                onChange={e => dispatch(autoPlayUpdated(e.target.checked))}\n              />\n              <span className={styles.checkmark} />\n              {autoplay ? \"On\" : \"Off\"}\n            </label>\n          </div>\n        </fieldset>\n        <fieldset>\n          <legend>Frame Scrubber [EXPERIMENTAL]</legend>\n          <div className={styles.info}>\n            Display progress bar that shows current frame and allows quickly\n            jumping to specific frames. &nbsp;\n            <a\n              href=\"https://github.com/BattlesnakeOfficial/feedback/discussions/171\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              Let us know what you think!\n            </a>\n          </div>\n          <div className={styles.inputContainer}>\n            <label>\n              <input\n                type=\"checkbox\"\n                name=\"showFrameScrubber\"\n                checked={showFrameScrubber}\n                onChange={e =>\n                  dispatch(showFrameScrubberUpdated(e.target.checked))\n                }\n              />\n              <span className={styles.checkmark} />\n              {showFrameScrubber ? \"On\" : \"Off\"}\n            </label>\n          </div>\n        </fieldset>\n        <fieldset>\n          <legend>Show Coordinate Labels [EXPERIMENTAL]</legend>\n          <div className={styles.info}>\n            Adds coordinate labels to the game board. &nbsp; These go from 0 to\n            the width/height of the board to make it easier to debug games\n            <a\n              href=\"https://github.com/orgs/BattlesnakeOfficial/discussions/231\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              Let us know what you think!\n            </a>\n          </div>\n          <div className={styles.inputContainer}>\n            <label>\n              <input\n                type=\"checkbox\"\n                name=\"showCoordinateLabels\"\n                checked={showCoordinateLabels}\n                onChange={e =>\n                  dispatch(showCoordinateLabelsUpdated(e.target.checked))\n                }\n              />\n              <span className={styles.checkmark} />\n              {showCoordinateLabels ? \"On\" : \"Off\"}\n            </label>\n          </div>\n        </fieldset>\n        <fieldset className={styles.centered}>\n          <button onClick={() => history.goBack()}>Return to Game</button>\n        </fieldset>\n      </section>\n    </main>\n  );\n};\n\nexport default SettingsPage;\n","import { Route, Switch } from \"react-router-dom\";\nimport GamePage from \"./components/game/GamePage\";\nimport SettingsPage from \"./components/settings/SettingsPage\";\nimport \"./App.css\";\n\nconst App = () => {\n  return (\n    <Switch>\n      <Route path=\"/settings\" component={SettingsPage} />\n      <Route component={GamePage} />\n    </Switch>\n  );\n};\n\nexport default App;\n","import cloneDeep from \"lodash.clonedeep\";\n\nconst DEFAULT_DIRECTION = \"right\";\n\nconst TYPE_HEAD = \"head\";\nconst TYPE_TAIL = \"tail\";\nconst TYPE_BODY = \"body\";\n\nexport function formatFrame(frame) {\n  cleanFrame(frame);\n  const snakes = formatSnakes(frame.Snakes);\n  return {\n    turn: frame.Turn,\n    snakes: snakes,\n    food: formatPositions(frame.Food),\n    hazards: formatPositions(frame.Hazards)\n  };\n}\n\nexport function sanitizeFrame(frame) {\n  // Copy without reference\n  const sanitizedFrame = cloneDeep(frame);\n\n  // nullify some fields\n  for (const i in sanitizedFrame.snakes) {\n    const snake = sanitizedFrame.snakes[i];\n    snake.id = snake._id;\n    delete snake._id;\n\n    delete snake.headSvg;\n    delete snake.tailSvg;\n  }\n\n  return sanitizedFrame;\n}\n\nfunction formatSnakes(snakes) {\n  if (snakes) {\n    let newSnakes = snakes.map(formatSnake);\n\n    // Populate eliminatedBy names\n    newSnakes.forEach(function(snake, index) {\n      if (\n        snake.death &&\n        snake.death.eliminatedBy &&\n        snake.death.eliminatedBy.length > 0\n      ) {\n        for (const i in newSnakes) {\n          if (newSnakes[i]._id === snake.death.eliminatedBy) {\n            newSnakes[index].death.eliminatedBy = newSnakes[i].name;\n            break;\n          }\n        }\n      }\n    });\n    return newSnakes;\n  }\n}\n\nfunction formatSnake(snake) {\n  var renderedParts = snake.Body.filter((_, i) => shouldRenderPart(snake, i));\n  return {\n    body: snake.Body.map((_, i) => formatSnakePart(snake, i)),\n    color: snake.Color,\n    _id: snake.ID,\n    name: snake.Name,\n    effectiveSpace: renderedParts.length,\n    health: snake.Health,\n    latency: snake.Latency,\n    error: snake.Error,\n    timing: snake.TimingMicros,\n    isDead: !!snake.Death,\n    death: formatDeath(snake.Death),\n    head: snake.HeadType && snake.HeadType.toLowerCase(),\n    tail: snake.TailType && snake.TailType.toLowerCase(),\n    headSvg: snake.HeadSvg,\n    tailSvg: snake.TailSvg,\n    squad: snake.Squad,\n    author: snake.Author,\n    shout: snake.Shout\n  };\n}\n\nfunction formatDeath(death) {\n  if (!death) {\n    return;\n  }\n  return {\n    cause: death.Cause,\n    turn: death.Turn || 0,\n    eliminatedBy: death.EliminatedBy\n  };\n}\n\nfunction shouldRenderPart(snake, partIndex) {\n  const headIndex = 0;\n  const tailIndex = snake.Body.length - 1;\n  const head = snake.Body[headIndex];\n  const tail = snake.Body[tailIndex];\n  const currPart = snake.Body[partIndex];\n\n  // always render head\n  if (partIndex === headIndex) {\n    return true;\n  }\n\n  // render tail if not covered by head\n  if (partIndex === tailIndex) {\n    return !(head.X === currPart.X && head.Y === currPart.Y);\n  }\n\n  // render middle part if it's in a different position than\n  // the next piece closer to head, and not in same spot as tail\n  const nextPart = snake.Body[partIndex - 1];\n  return (\n    !(tail.X === currPart.X && tail.Y === currPart.Y) &&\n    !(head.X === currPart.X && head.Y === currPart.Y) &&\n    !(nextPart && nextPart.X === currPart.X && nextPart.Y === currPart.Y)\n  );\n}\n\nfunction formatSnakePart(snake, partIndex) {\n  const part = snake.Body[partIndex];\n  const type = getType(snake, partIndex);\n  const { x, y } = formatPosition(part);\n  const direction = formatDirection(type, snake, part, partIndex);\n  const isOverlapped = !shouldRenderPart(snake, partIndex) ? true : undefined;\n\n  return {\n    direction,\n    type,\n    isOverlapped,\n    x,\n    y\n  };\n}\n\nfunction formatPositions(positions) {\n  if (positions) {\n    return positions.map(formatPosition);\n  }\n}\n\nfunction formatPosition(pos) {\n  return {\n    x: pos.X,\n    y: pos.Y\n  };\n}\n\nfunction formatDirection(type, snake, part, partIndex) {\n  let direction;\n  if (type === \"head\") {\n    direction = getDirection(snake.Body[1], snake.Body[0]);\n  } else {\n    // handle special case where parts overlap\n    var prevPart;\n    do {\n      prevPart = snake.Body[Math.max(partIndex - 1, 0)];\n      --partIndex;\n    } while (partIndex > 0 && prevPart.X === part.X && prevPart.Y === part.Y);\n\n    direction = getDirection(part, prevPart);\n  }\n\n  return direction;\n}\n\nfunction getDirection(a, b) {\n  if (a && b) {\n    // Handle cases where b is one move after a\n    if (a.X + 1 === b.X) {\n      return \"right\";\n    } else if (a.X - 1 === b.X) {\n      return \"left\";\n    } else if (a.Y + 1 === b.Y) {\n      return \"up\";\n    } else if (a.Y - 1 === b.Y) {\n      return \"down\";\n    }\n    // Handle wrapped cases (we can anchor against one part being on 0 axis)\n    if (a.X > b.X && b.X === 0) {\n      return \"right\";\n    } else if (a.X < b.X && a.X === 0) {\n      return \"left\";\n    } else if (a.Y > b.Y && b.Y === 0) {\n      return \"up\";\n    } else if (a.Y < b.Y && a.Y === 0) {\n      return \"down\";\n    }\n  }\n  return DEFAULT_DIRECTION;\n}\n\nfunction getType(snake, partIndex) {\n  if (partIndex === 0) {\n    return TYPE_HEAD;\n  }\n\n  if (partIndex === snake.Body.length - 1) {\n    return TYPE_TAIL;\n  }\n\n  return TYPE_BODY;\n}\n\n// This is a workaround for fields that are omitted when they have the default\n// value. ie: int fields that need to default to 0 rather than undefined.\nfunction cleanFrame(frame) {\n  frame.Turn = frame.Turn || 0;\n\n  for (const snake of frame.Snakes) {\n    for (const part of snake.Body) {\n      part.X = part.X || 0;\n      part.Y = part.Y || 0;\n    }\n  }\n\n  for (const food of frame.Food) {\n    food.X = food.X || 0;\n    food.Y = food.Y || 0;\n  }\n}\n","import { formatFrame, sanitizeFrame } from \"../utils/game-state\";\nimport * as types from \"../actions/action-types\";\nimport { themes } from \"../theme\";\n\nconst initialState = {\n  options: null,\n  grid: [],\n  frames: [],\n  endEvent: {},\n  paused: true,\n  gameNotFound: false,\n  highlightedSnake: null,\n  theme: themes.light\n};\n\nconst reducers = (state = initialState, action) => {\n  switch (action.type) {\n    case types.SET_THEME:\n      return { ...state, theme: action.theme };\n    case types.SET_GAME_OPTIONS:\n      action.gameOptions.turn = parseInt(action.gameOptions.turn) || 0;\n      action.gameOptions.loop =\n        action.gameOptions.loop && action.gameOptions.loop === \"true\";\n      return { ...state, gameOptions: action.gameOptions };\n    case types.GAME_NOT_FOUND:\n      return { ...state, gameNotFound: true };\n    case types.PAUSE_GAME:\n      return { ...state, paused: true };\n    case types.GAME_OVER:\n      windowPostMessage({\n        action: action.type,\n        endEvent: action.endEvent\n      });\n      return { ...state, paused: true };\n    case types.RESUME_GAME:\n      return { ...state, paused: false };\n    case types.SET_CURRENT_FRAME:\n      windowPostMessage({\n        action: action.type,\n        frame: sanitizeFrame(action.frame)\n      });\n      return { ...state, currentFrame: action.frame };\n    case types.RECEIVE_FRAME:\n      const frame = formatFrame(action.frame);\n      return {\n        ...state,\n        ruleset: action.game.Game.Ruleset,\n        grid: {\n          height: action.game.Game.Height,\n          width: action.game.Game.Width\n        },\n        frames: [...state.frames, frame] // Be smart: this consumes A LOT of memory...\n      };\n    case types.RECEIVE_EVENT_END:\n      return {\n        ...state,\n        endEvent: action.endEvent,\n        frames: [...state.frames, action.frame]\n      };\n    case types.REQUEST_FRAMES:\n      return { ...state };\n    case types.FETCH_FRAMES:\n      return { ...state };\n    case types.HIGHLIGHT_SNAKE:\n      windowPostMessage({\n        action: action.type,\n        id: action.snakeId,\n        name: action.snakeId\n          ? state.currentFrame.snakes.find(s => s._id === action.snakeId).name\n          : null\n      });\n      return { ...state, highlightedSnake: action.snakeId };\n    case types.TOGGLE_SETTINGS_VIEW:\n      windowPostMessage({\n        action: action.type,\n        value: action.showHide\n      });\n      return { ...state };\n    case types.THEME_CHANGED:\n      windowPostMessage({\n        action: action.type,\n        value: action.theme\n      });\n      return { ...state };\n    default:\n      return { ...state };\n  }\n};\n\nfunction windowPostMessage(data) {\n  if (!window.parent) {\n    return;\n  }\n  try {\n    window.parent.postMessage(data, \"*\");\n  } catch (e) {\n    console.error(e);\n  }\n}\n\nexport default reducers;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport rootReducer from \"../reducers\";\nimport settingsReducer, {\n  settingsStoreListener\n} from \"../components/settings/settings-slice\";\nimport { initialSettings } from \"../components/settings/defaults\";\nimport { themes } from \"../theme\";\nimport { rehydrateLocalSettings, storageAvailable } from \"./storage\";\n\nfunction rehydrateInitialState() {\n  let initialState = {\n    game: {\n      options: null,\n      grid: [],\n      frames: [],\n      endEvent: null,\n      paused: true,\n      gameNotFound: false,\n      highlightedSnake: null,\n      theme: themes.light\n    },\n    settings: initialSettings\n  };\n\n  if (storageAvailable(\"localStorage\")) {\n    initialState.settings = rehydrateLocalSettings();\n    initialState.settings.persistAvailable = true;\n  } else {\n    console.info(\n      \"Please enable localStorage for an improved experience that allows you to persist board settings.\"\n    );\n  }\n\n  return initialState;\n}\n\nconst store = configureStore({\n  reducer: {\n    game: rootReducer,\n    settings: settingsReducer\n  },\n  middleware: getDefaultMiddleware =>\n    getDefaultMiddleware({\n      immutableCheck: false,\n      serializableCheck: false\n    }),\n  preloadedState: rehydrateInitialState()\n});\n\nstore.subscribe(() => {\n  settingsStoreListener(store.getState());\n});\n\nexport default store;\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./App\";\nimport store from \"./app/store\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nrender(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}