{"ast":null,"code":"import _slicedToArray from\"/home/y-yabust/CC/cc-replay/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from\"react\";import{colors}from\"../../../theme\";import{jsx as _jsx}from\"react/jsx-runtime\";var style={color:colors.danger,cursor:\"pointer\",margin:0,padding:0};function getIcon(code){return\"error\";}var StatusIndicator=function StatusIndicator(_ref){var errorMessage=_ref.errorMessage;if(errorMessage===\"\"){return\"\";}// until we can refactor Avatar and not pass the whole error object\nvar _errorMessage$toStrin=errorMessage.toString().split(\":\"),_errorMessage$toStrin2=_slicedToArray(_errorMessage$toStrin,1),code=_errorMessage$toStrin2[0];return/*#__PURE__*/_jsx(\"div\",{style:style,children:/*#__PURE__*/_jsx(\"span\",{className:\"material-icons material-icons-inline\",children:getIcon(code)})});};export default StatusIndicator;","map":{"version":3,"sources":["/home/y-yabust/CC/cc-replay/src/components/scoreboard/status-indicator/StatusIndicator.jsx"],"names":["React","colors","style","color","danger","cursor","margin","padding","getIcon","code","StatusIndicator","errorMessage","toString","split"],"mappings":"8GAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,MAAT,KAAuB,gBAAvB,C,2CAEA,GAAMC,CAAAA,KAAK,CAAG,CACZC,KAAK,CAAEF,MAAM,CAACG,MADF,CAEZC,MAAM,CAAE,SAFI,CAGZC,MAAM,CAAE,CAHI,CAIZC,OAAO,CAAE,CAJG,CAAd,CAOA,QAASC,CAAAA,OAAT,CAAiBC,IAAjB,CAAuB,CACrB,MAAO,OAAP,CACD,CAED,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,MAAsB,IAAnBC,CAAAA,YAAmB,MAAnBA,YAAmB,CAC5C,GAAIA,YAAY,GAAK,EAArB,CAAyB,CACvB,MAAO,EAAP,CACD,CAED;AACA,0BAAeA,YAAY,CAACC,QAAb,GAAwBC,KAAxB,CAA8B,GAA9B,CAAf,gEAAOJ,IAAP,2BAEA,mBACE,YAAK,KAAK,CAAEP,KAAZ,uBACE,aAAM,SAAS,CAAC,sCAAhB,UACGM,OAAO,CAACC,IAAD,CADV,EADF,EADF,CAOD,CAfD,CAiBA,cAAeC,CAAAA,eAAf","sourcesContent":["import React from \"react\";\nimport { colors } from \"../../../theme\";\n\nconst style = {\n  color: colors.danger,\n  cursor: \"pointer\",\n  margin: 0,\n  padding: 0\n};\n\nfunction getIcon(code) {\n  return \"error\";\n}\n\nconst StatusIndicator = ({ errorMessage }) => {\n  if (errorMessage === \"\") {\n    return \"\";\n  }\n\n  // until we can refactor Avatar and not pass the whole error object\n  const [code] = errorMessage.toString().split(\":\");\n\n  return (\n    <div style={style}>\n      <span className=\"material-icons material-icons-inline\">\n        {getIcon(code)}\n      </span>\n    </div>\n  );\n};\n\nexport default StatusIndicator;\n"]},"metadata":{},"sourceType":"module"}