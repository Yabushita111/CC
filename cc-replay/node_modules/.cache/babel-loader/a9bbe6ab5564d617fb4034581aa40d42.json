{"ast":null,"code":"import{createSlice}from\"@reduxjs/toolkit\";import{getLocalSetting,setLocalSetting}from\"../../app/storage\";import{initialSettings as initialState}from\"./defaults\";export var settingsSlice=createSlice({name:\"settings\",initialState:initialState,reducers:{frameRateUpdated:function frameRateUpdated(state,action){state.frameRate=action.payload;},themeSelected:function themeSelected(state,action){state.theme=action.payload;},autoPlayUpdated:function autoPlayUpdated(state,action){state.autoplay=action.payload;},showFrameScrubberUpdated:function showFrameScrubberUpdated(state,action){state.showFrameScrubber=action.payload;},showCoordinateLabelsUpdated:function showCoordinateLabelsUpdated(state,action){state.showCoordinateLabels=action.payload;}}});// toolkit generates the actions for us\nvar _settingsSlice$action=settingsSlice.actions,frameRateUpdated=_settingsSlice$action.frameRateUpdated,themeSelected=_settingsSlice$action.themeSelected,autoPlayUpdated=_settingsSlice$action.autoPlayUpdated,showFrameScrubberUpdated=_settingsSlice$action.showFrameScrubberUpdated,showCoordinateLabelsUpdated=_settingsSlice$action.showCoordinateLabelsUpdated;// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\nexport{frameRateUpdated,themeSelected,autoPlayUpdated,showFrameScrubberUpdated,showCoordinateLabelsUpdated};export var currentFrameRate=function currentFrameRate(state){return state.settings.frameRate;};export var currentTheme=function currentTheme(state){return state.settings.theme;};export var currentAutoplay=function currentAutoplay(state){return state.settings.autoplay;};export var currentShowFrameScrubber=function currentShowFrameScrubber(state){return state.settings.showFrameScrubber;};export var currentShowCoordinateLabels=function currentShowCoordinateLabels(state){return state.settings.showCoordinateLabels;};export function settingsStoreListener(state){if(state.settings.frameRate!==getLocalSetting(\"frameRate\")){setLocalSetting(\"frameRate\",state.settings.frameRate);}if(state.settings.theme!==getLocalSetting(\"theme\")){setLocalSetting(\"theme\",state.settings.theme);}if(state.settings.autoplay!==getLocalSetting(\"autoplay\")){setLocalSetting(\"autoplay\",state.settings.autoplay);}if(state.settings.showFrameScrubber!==getLocalSetting(\"showFrameScrubber\")){setLocalSetting(\"showFrameScrubber\",state.settings.showFrameScrubber);}if(state.settings.showCoordinateLabels!==getLocalSetting(\"showCoordinateLabels\")){setLocalSetting(\"showCoordinateLabels\",state.settings.showCoordinateLabels);}}export default settingsSlice.reducer;","map":{"version":3,"sources":["/home/y-yabust/CC/cc-replay/src/components/settings/settings-slice.js"],"names":["createSlice","getLocalSetting","setLocalSetting","initialSettings","initialState","settingsSlice","name","reducers","frameRateUpdated","state","action","frameRate","payload","themeSelected","theme","autoPlayUpdated","autoplay","showFrameScrubberUpdated","showFrameScrubber","showCoordinateLabelsUpdated","showCoordinateLabels","actions","currentFrameRate","settings","currentTheme","currentAutoplay","currentShowFrameScrubber","currentShowCoordinateLabels","settingsStoreListener","reducer"],"mappings":"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","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { getLocalSetting, setLocalSetting } from \"../../app/storage\";\nimport { initialSettings as initialState } from \"./defaults\";\n\nexport const settingsSlice = createSlice({\n  name: \"settings\",\n  initialState,\n  reducers: {\n    frameRateUpdated(state, action) {\n      state.frameRate = action.payload;\n    },\n    themeSelected(state, action) {\n      state.theme = action.payload;\n    },\n    autoPlayUpdated(state, action) {\n      state.autoplay = action.payload;\n    },\n    showFrameScrubberUpdated(state, action) {\n      state.showFrameScrubber = action.payload;\n    },\n    showCoordinateLabelsUpdated(state, action) {\n      state.showCoordinateLabels = action.payload;\n    }\n  }\n});\n\n// toolkit generates the actions for us\nexport const {\n  frameRateUpdated,\n  themeSelected,\n  autoPlayUpdated,\n  showFrameScrubberUpdated,\n  showCoordinateLabelsUpdated\n} = settingsSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\nexport const currentFrameRate = state => state.settings.frameRate;\nexport const currentTheme = state => state.settings.theme;\nexport const currentAutoplay = state => state.settings.autoplay;\nexport const currentShowFrameScrubber = state =>\n  state.settings.showFrameScrubber;\nexport const currentShowCoordinateLabels = state =>\n  state.settings.showCoordinateLabels;\n\nexport function settingsStoreListener(state) {\n  if (state.settings.frameRate !== getLocalSetting(\"frameRate\")) {\n    setLocalSetting(\"frameRate\", state.settings.frameRate);\n  }\n\n  if (state.settings.theme !== getLocalSetting(\"theme\")) {\n    setLocalSetting(\"theme\", state.settings.theme);\n  }\n\n  if (state.settings.autoplay !== getLocalSetting(\"autoplay\")) {\n    setLocalSetting(\"autoplay\", state.settings.autoplay);\n  }\n\n  if (\n    state.settings.showFrameScrubber !== getLocalSetting(\"showFrameScrubber\")\n  ) {\n    setLocalSetting(\"showFrameScrubber\", state.settings.showFrameScrubber);\n  }\n\n  if (\n    state.settings.showCoordinateLabels !==\n    getLocalSetting(\"showCoordinateLabels\")\n  ) {\n    setLocalSetting(\n      \"showCoordinateLabels\",\n      state.settings.showCoordinateLabels\n    );\n  }\n}\n\nexport default settingsSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}