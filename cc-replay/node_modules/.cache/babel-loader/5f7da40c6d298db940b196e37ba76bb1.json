{"ast":null,"code":"import _classCallCheck from\"/home/y-yabust/CC/cc-replay/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/y-yabust/CC/cc-replay/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/y-yabust/CC/cc-replay/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/y-yabust/CC/cc-replay/node_modules/@babel/runtime/helpers/esm/createSuper\";import _taggedTemplateLiteral from\"/home/y-yabust/CC/cc-replay/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5,_templateObject6,_templateObject7;import React from\"react\";import styled from\"@emotion/styled\";//import BlankState from \"./blank-state\";\nimport LoadingIndicator from\"./loading-indicator\";//import GameNotFound from \"./game-not-found\";\nimport Board from\"./board\";import Scoreboard from\"./scoreboard\";import MediaControls from\"./mediaControls\";import Logo from\"./logo\";import{breakpoints,colors,themes}from\"../theme\";import styles from\"./game/GamePage.module.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var BoardTitle=styled(\"div\")(function(_ref){var theme=_ref.theme;return{fontSize:\"2rem\",fontWeight:\"600\",textAlign:\"center\",textTransform:\"uppercase\",color:theme===themes.dark?colors.lightText:colors.darkText};});var HeaderWrapper=styled(\"div\")(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: center;\\n  margin: 0.5rem 0;\\n  text-align: center;\\n\\n  @media (min-width: \",\") {\\n    padding-top: 1rem;\\n    padding-bottom: 2rem;\\n  }\\n\"])),breakpoints.xxl);var LogoWrapper=styled(\"div\")(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  width: 100%;\\n  height: 5rem;\\n\\n  @media (min-width: \",\") {\\n    height: 8rem;\\n  }\\n\\n  @media (min-width: \",\") {\\n    height: 16rem;\\n  }\\n\"])),breakpoints.lg,breakpoints.xxl);var TurnCount=styled(\"div\")(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  font-size: 2rem;\\n  font-weight: 600;\\n  text-transform: uppercase;\\n  color: \",\";\\n\\n  @media (min-width: \",\") {\\n    font-size: 3rem;\\n  }\\n\"])),function(_ref2){var theme=_ref2.theme;return theme===themes.dark?colors.lightText:colors.darkText;},breakpoints.xxl);var TurnCountValue=styled(\"span\")(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  display: inline-block;\\n  width: 6rem;\\n\"])));var BoardWrapper=styled(\"div\")(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: column;\\n  width: 100%;\\n  height: 100%;\\n\\n  @media (min-width: \",\") {\\n    width: \",\";\\n  }\\n\"])),breakpoints.md,function(_ref3){var hideScoreboard=_ref3.hideScoreboard;return hideScoreboard?\"100%\":\"60vw\";});var ScoreboardWrapper=styled(\"div\")(_templateObject6||(_templateObject6=_taggedTemplateLiteral([\"\\n  display: none;\\n  width: 40vw;\\n  padding: 0 2rem;\\n\\n  @media (min-width: \",\") {\\n    display: \",\";\\n  }\\n\"])),breakpoints.md,function(_ref4){var hide=_ref4.hide;return hide?\"none\":\"block\";});var Ruleset=styled(\"p\")(_templateObject7||(_templateObject7=_taggedTemplateLiteral([\"\\n  margin: 0.25rem;\\n  width: 100%;\\n  font-size: 1.2rem;\\n  text-align: center;\\n  color: #aaa;\\n  text-transform: capitalize;\\n\"])));var Game=/*#__PURE__*/function(_React$Component){_inherits(Game,_React$Component);var _super=_createSuper(Game);function Game(){_classCallCheck(this,Game);return _super.apply(this,arguments);}_createClass(Game,[{key:\"componentDidMount\",value:function componentDidMount(){var options=this.props.options;this.props.togglePlayButtons(\"show\");if(options.theme){this.props.toggleTheme(options.theme);}if(!(options.game&&options.engine)){this.invalidArgs=true;// return;\n}this.hideLogo=options.hideLogo===\"true\";this.hideScoreboard=options.hideScoreboard===\"true\";this.showFrameScrubber=options.showFrameScrubber;this.title=options.title&&decodeURIComponent(options.title);this.props.setGameOptions(options);if(this.props.frames.length===0){this.props.fetchFrames();}}},{key:\"render\",value:function render(){console.log(this.props.currentFrame);/*\n    if (this.invalidArgs) {\n      return <BlankState />;\n    }\n\n    if (this.props.gameNotFound) {\n      return <GameNotFound />;\n    }\n    */if(this.props.currentFrame){return this.renderGame();}return/*#__PURE__*/_jsx(LoadingIndicator,{});}},{key:\"renderGame\",value:function renderGame(){var _this$props=this.props,currentFrame=_this$props.currentFrame,options=_this$props.options;return/*#__PURE__*/_jsx(\"main\",{className:options.theme,children:/*#__PURE__*/_jsxs(\"section\",{className:styles.game,children:[/*#__PURE__*/_jsxs(BoardWrapper,{hideScoreboard:this.hideScoreboard,children:[/*#__PURE__*/_jsx(BoardTitle,{theme:options.theme,children:this.title}),/*#__PURE__*/_jsx(Board,{snakes:currentFrame.snakes,food:currentFrame.food,foodImage:options.foodImage,hazards:currentFrame.hazards,columns:this.props.grid.width,rows:this.props.grid.height,highlightedSnake:this.props.highlightedSnake,theme:options.theme,turn:currentFrame.turn,showCoordinateLabels:options.showCoordinateLabels}),/*#__PURE__*/_jsx(MediaControls,{currentFrame:currentFrame,hideControls:options.hideMediaControls===\"true\",reloadGame:this.props.reloadGame,toggleGamePause:this.props.toggleGamePause,stepBackwardFrame:this.props.stepBackwardFrame,stepForwardFrame:this.props.stepForwardFrame,stepToTurn:this.props.stepToTurn,pauseGame:this.props.pauseGame,paused:this.props.paused,theme:options.theme,persistAvailable:options.persistAvailable,maxTurn:this.props.frames[this.props.frames.length-1].turn,showFrameScrubber:this.showFrameScrubber,hasAllFrames:this.props.hasAllFrames})]}),!this.hideScoreboard&&/*#__PURE__*/_jsxs(ScoreboardWrapper,{children:[/*#__PURE__*/_jsxs(HeaderWrapper,{children:[!this.hideLogo&&/*#__PURE__*/_jsx(LogoWrapper,{children:/*#__PURE__*/_jsx(Logo,{theme:options.theme})}),/*#__PURE__*/_jsxs(TurnCount,{theme:options.theme,children:[\"Turn \",/*#__PURE__*/_jsx(TurnCountValue,{children:currentFrame.turn})]})]}),/*#__PURE__*/_jsx(Scoreboard,{turn:currentFrame.turn,snakes:currentFrame.snakes,food:currentFrame.food,highlightSnake:this.props.highlightSnake,theme:options.theme}),/*#__PURE__*/_jsxs(Ruleset,{children:[\"Rules: \",this.props.ruleset.name]})]})]})});}}]);return Game;}(React.Component);export default Game;","map":{"version":3,"sources":["/home/y-yabust/CC/cc-replay/src/components/game.jsx"],"names":["React","styled","LoadingIndicator","Board","Scoreboard","MediaControls","Logo","breakpoints","colors","themes","styles","BoardTitle","theme","fontSize","fontWeight","textAlign","textTransform","color","dark","lightText","darkText","HeaderWrapper","xxl","LogoWrapper","lg","TurnCount","TurnCountValue","BoardWrapper","md","hideScoreboard","ScoreboardWrapper","hide","Ruleset","Game","options","props","togglePlayButtons","toggleTheme","game","engine","invalidArgs","hideLogo","showFrameScrubber","title","decodeURIComponent","setGameOptions","frames","length","fetchFrames","console","log","currentFrame","renderGame","snakes","food","foodImage","hazards","grid","width","height","highlightedSnake","turn","showCoordinateLabels","hideMediaControls","reloadGame","toggleGamePause","stepBackwardFrame","stepForwardFrame","stepToTurn","pauseGame","paused","persistAvailable","hasAllFrames","highlightSnake","ruleset","name","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport styled from \"@emotion/styled\";\n\n//import BlankState from \"./blank-state\";\nimport LoadingIndicator from \"./loading-indicator\";\n//import GameNotFound from \"./game-not-found\";\nimport Board from \"./board\";\nimport Scoreboard from \"./scoreboard\";\nimport MediaControls from \"./mediaControls\";\nimport Logo from \"./logo\";\nimport { breakpoints, colors, themes } from \"../theme\";\nimport styles from \"./game/GamePage.module.css\";\n\nconst BoardTitle = styled(\"div\")(({ theme }) => ({\n  fontSize: \"2rem\",\n  fontWeight: \"600\",\n  textAlign: \"center\",\n  textTransform: \"uppercase\",\n  color: theme === themes.dark ? colors.lightText : colors.darkText\n}));\n\nconst HeaderWrapper = styled(\"div\")`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  margin: 0.5rem 0;\n  text-align: center;\n\n  @media (min-width: ${breakpoints.xxl}) {\n    padding-top: 1rem;\n    padding-bottom: 2rem;\n  }\n`;\n\nconst LogoWrapper = styled(\"div\")`\n  width: 100%;\n  height: 5rem;\n\n  @media (min-width: ${breakpoints.lg}) {\n    height: 8rem;\n  }\n\n  @media (min-width: ${breakpoints.xxl}) {\n    height: 16rem;\n  }\n`;\n\nconst TurnCount = styled(\"div\")`\n  font-size: 2rem;\n  font-weight: 600;\n  text-transform: uppercase;\n  color: ${({ theme }) =>\n    theme === themes.dark ? colors.lightText : colors.darkText};\n\n  @media (min-width: ${breakpoints.xxl}) {\n    font-size: 3rem;\n  }\n`;\nconst TurnCountValue = styled(\"span\")`\n  display: inline-block;\n  width: 6rem;\n`;\n\nconst BoardWrapper = styled(\"div\")`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  height: 100%;\n\n  @media (min-width: ${breakpoints.md}) {\n    width: ${({ hideScoreboard }) => (hideScoreboard ? \"100%\" : \"60vw\")};\n  }\n`;\n\nconst ScoreboardWrapper = styled(\"div\")`\n  display: none;\n  width: 40vw;\n  padding: 0 2rem;\n\n  @media (min-width: ${breakpoints.md}) {\n    display: ${({ hide }) => (hide ? \"none\" : \"block\")};\n  }\n`;\n\nconst Ruleset = styled(\"p\")`\n  margin: 0.25rem;\n  width: 100%;\n  font-size: 1.2rem;\n  text-align: center;\n  color: #aaa;\n  text-transform: capitalize;\n`;\n\nclass Game extends React.Component {\n  componentDidMount() {\n    const { options } = this.props;\n\n    this.props.togglePlayButtons(\"show\");\n\n    if (options.theme) {\n      this.props.toggleTheme(options.theme);\n    }\n\n    if (!(options.game && options.engine)) {\n      this.invalidArgs = true;\n      // return;\n    }\n\n    this.hideLogo = options.hideLogo === \"true\";\n    this.hideScoreboard = options.hideScoreboard === \"true\";\n    this.showFrameScrubber = options.showFrameScrubber;\n    this.title = options.title && decodeURIComponent(options.title);\n    this.props.setGameOptions(options);\n\n    if (this.props.frames.length === 0) {\n      this.props.fetchFrames();\n    }\n  }\n\n  render() {\n    console.log(this.props.currentFrame);\n    /*\n    if (this.invalidArgs) {\n      return <BlankState />;\n    }\n\n    if (this.props.gameNotFound) {\n      return <GameNotFound />;\n    }\n    */\n    if (this.props.currentFrame) {\n      return this.renderGame();\n    }\n\n    return <LoadingIndicator />;\n  }\n\n  renderGame() {\n    const { currentFrame, options } = this.props;\n    return (\n      <main className={options.theme}>\n        <section className={styles.game}>\n          <BoardWrapper hideScoreboard={this.hideScoreboard}>\n            <BoardTitle theme={options.theme}>{this.title}</BoardTitle>\n            <Board\n              snakes={currentFrame.snakes}\n              food={currentFrame.food}\n              foodImage={options.foodImage}\n              hazards={currentFrame.hazards}\n              columns={this.props.grid.width}\n              rows={this.props.grid.height}\n              highlightedSnake={this.props.highlightedSnake}\n              theme={options.theme}\n              turn={currentFrame.turn}\n              showCoordinateLabels={options.showCoordinateLabels}\n            />\n            <MediaControls\n              currentFrame={currentFrame}\n              hideControls={options.hideMediaControls === \"true\"}\n              reloadGame={this.props.reloadGame}\n              toggleGamePause={this.props.toggleGamePause}\n              stepBackwardFrame={this.props.stepBackwardFrame}\n              stepForwardFrame={this.props.stepForwardFrame}\n              stepToTurn={this.props.stepToTurn}\n              pauseGame={this.props.pauseGame}\n              paused={this.props.paused}\n              theme={options.theme}\n              persistAvailable={options.persistAvailable}\n              maxTurn={this.props.frames[this.props.frames.length - 1].turn}\n              showFrameScrubber={this.showFrameScrubber}\n              hasAllFrames={this.props.hasAllFrames}\n            />\n          </BoardWrapper>\n          {!this.hideScoreboard && (\n            <ScoreboardWrapper>\n              <HeaderWrapper>\n                {!this.hideLogo && (\n                  <LogoWrapper>\n                    <Logo theme={options.theme} />\n                  </LogoWrapper>\n                )}\n                <TurnCount theme={options.theme}>\n                  Turn <TurnCountValue>{currentFrame.turn}</TurnCountValue>\n                </TurnCount>\n              </HeaderWrapper>\n              <Scoreboard\n                turn={currentFrame.turn}\n                snakes={currentFrame.snakes}\n                food={currentFrame.food}\n                highlightSnake={this.props.highlightSnake}\n                theme={options.theme}\n              />\n              <Ruleset>Rules: {this.props.ruleset.name}</Ruleset>\n            </ScoreboardWrapper>\n          )}\n        </section>\n      </main>\n    );\n  }\n}\n\nexport default Game;\n"]},"metadata":{},"sourceType":"module"}