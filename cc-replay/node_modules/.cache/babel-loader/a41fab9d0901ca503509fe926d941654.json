{"ast":null,"code":"var _jsxFileName = \"/home/y-yabust/CC/cc-replay/src/components/game.jsx\";\nimport React from \"react\";\nimport styled from \"@emotion/styled\";\nimport BlankState from \"./blank-state\";\nimport LoadingIndicator from \"./loading-indicator\";\nimport GameNotFound from \"./game-not-found\";\nimport Board from \"./board\";\nimport Scoreboard from \"./scoreboard\";\nimport MediaControls from \"./mediaControls\";\nimport Logo from \"./logo\";\nimport { breakpoints, colors, themes } from \"../theme\";\nimport styles from \"./game/GamePage.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BoardTitle = styled(\"div\")(({\n  theme\n}) => ({\n  fontSize: \"2rem\",\n  fontWeight: \"600\",\n  textAlign: \"center\",\n  textTransform: \"uppercase\",\n  color: theme === themes.dark ? colors.lightText : colors.darkText\n}));\nconst HeaderWrapper = styled(\"div\")`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  margin: 0.5rem 0;\n  text-align: center;\n\n  @media (min-width: ${breakpoints.xxl}) {\n    padding-top: 1rem;\n    padding-bottom: 2rem;\n  }\n`;\n_c = HeaderWrapper;\nconst LogoWrapper = styled(\"div\")`\n  width: 100%;\n  height: 5rem;\n\n  @media (min-width: ${breakpoints.lg}) {\n    height: 8rem;\n  }\n\n  @media (min-width: ${breakpoints.xxl}) {\n    height: 16rem;\n  }\n`;\n_c2 = LogoWrapper;\nconst TurnCount = styled(\"div\")`\n  font-size: 2rem;\n  font-weight: 600;\n  text-transform: uppercase;\n  color: ${({\n  theme\n}) => theme === themes.dark ? colors.lightText : colors.darkText};\n\n  @media (min-width: ${breakpoints.xxl}) {\n    font-size: 3rem;\n  }\n`;\n_c3 = TurnCount;\nconst TurnCountValue = styled(\"span\")`\n  display: inline-block;\n  width: 6rem;\n`;\n_c4 = TurnCountValue;\nconst BoardWrapper = styled(\"div\")`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  height: 100%;\n\n  @media (min-width: ${breakpoints.md}) {\n    width: ${({\n  hideScoreboard\n}) => hideScoreboard ? \"100%\" : \"60vw\"};\n  }\n`;\n_c5 = BoardWrapper;\nconst ScoreboardWrapper = styled(\"div\")`\n  display: none;\n  width: 40vw;\n  padding: 0 2rem;\n\n  @media (min-width: ${breakpoints.md}) {\n    display: ${({\n  hide\n}) => hide ? \"none\" : \"block\"};\n  }\n`;\n_c6 = ScoreboardWrapper;\nconst Ruleset = styled(\"p\")`\n  margin: 0.25rem;\n  width: 100%;\n  font-size: 1.2rem;\n  text-align: center;\n  color: #aaa;\n  text-transform: capitalize;\n`;\n_c7 = Ruleset;\n\nclass Game extends React.Component {\n  componentDidMount() {\n    const {\n      options\n    } = this.props;\n    this.props.togglePlayButtons(\"show\");\n\n    if (options.theme) {\n      this.props.toggleTheme(options.theme);\n    }\n\n    if (!(options.game && options.engine)) {\n      this.invalidArgs = true;\n      return;\n    }\n\n    this.hideLogo = options.hideLogo === \"true\";\n    this.hideScoreboard = options.hideScoreboard === \"true\";\n    this.showFrameScrubber = options.showFrameScrubber;\n    this.title = options.title && decodeURIComponent(options.title);\n    this.props.setGameOptions(options);\n\n    if (this.props.frames.length === 0) {\n      this.props.fetchFrames();\n    }\n  }\n\n  render() {\n    /*\n    if (this.invalidArgs) {\n      return <BlankState />;\n    }\n     if (this.props.gameNotFound) {\n      return <GameNotFound />;\n    }\n    */\n    if (this.props.currentFrame) {\n      return this.renderGame();\n    }\n\n    return /*#__PURE__*/_jsxDEV(LoadingIndicator, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 12\n    }, this);\n  }\n\n  renderGame() {\n    const {\n      currentFrame,\n      options\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"main\", {\n      className: options.theme,\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        className: styles.game,\n        children: [/*#__PURE__*/_jsxDEV(BoardWrapper, {\n          hideScoreboard: this.hideScoreboard,\n          children: [/*#__PURE__*/_jsxDEV(BoardTitle, {\n            theme: options.theme,\n            children: this.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Board, {\n            snakes: currentFrame.snakes,\n            food: currentFrame.food,\n            foodImage: options.foodImage,\n            hazards: currentFrame.hazards,\n            columns: this.props.grid.width,\n            rows: this.props.grid.height,\n            highlightedSnake: this.props.highlightedSnake,\n            theme: options.theme,\n            turn: currentFrame.turn,\n            showCoordinateLabels: options.showCoordinateLabels\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MediaControls, {\n            currentFrame: currentFrame,\n            hideControls: options.hideMediaControls === \"true\",\n            reloadGame: this.props.reloadGame,\n            toggleGamePause: this.props.toggleGamePause,\n            stepBackwardFrame: this.props.stepBackwardFrame,\n            stepForwardFrame: this.props.stepForwardFrame,\n            stepToTurn: this.props.stepToTurn,\n            pauseGame: this.props.pauseGame,\n            paused: this.props.paused,\n            theme: options.theme,\n            persistAvailable: options.persistAvailable,\n            maxTurn: this.props.frames[this.props.frames.length - 1].turn,\n            showFrameScrubber: this.showFrameScrubber,\n            hasAllFrames: this.props.hasAllFrames\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), !this.hideScoreboard && /*#__PURE__*/_jsxDEV(ScoreboardWrapper, {\n          children: [/*#__PURE__*/_jsxDEV(HeaderWrapper, {\n            children: [!this.hideLogo && /*#__PURE__*/_jsxDEV(LogoWrapper, {\n              children: /*#__PURE__*/_jsxDEV(Logo, {\n                theme: options.theme\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TurnCount, {\n              theme: options.theme,\n              children: [\"Turn \", /*#__PURE__*/_jsxDEV(TurnCountValue, {\n                children: currentFrame.turn\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 24\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Scoreboard, {\n            turn: currentFrame.turn,\n            snakes: currentFrame.snakes,\n            food: currentFrame.food,\n            highlightSnake: this.props.highlightSnake,\n            theme: options.theme\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Ruleset, {\n            children: [\"Rules: \", this.props.ruleset.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Game;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"HeaderWrapper\");\n$RefreshReg$(_c2, \"LogoWrapper\");\n$RefreshReg$(_c3, \"TurnCount\");\n$RefreshReg$(_c4, \"TurnCountValue\");\n$RefreshReg$(_c5, \"BoardWrapper\");\n$RefreshReg$(_c6, \"ScoreboardWrapper\");\n$RefreshReg$(_c7, \"Ruleset\");","map":{"version":3,"sources":["/home/y-yabust/CC/cc-replay/src/components/game.jsx"],"names":["React","styled","BlankState","LoadingIndicator","GameNotFound","Board","Scoreboard","MediaControls","Logo","breakpoints","colors","themes","styles","BoardTitle","theme","fontSize","fontWeight","textAlign","textTransform","color","dark","lightText","darkText","HeaderWrapper","xxl","LogoWrapper","lg","TurnCount","TurnCountValue","BoardWrapper","md","hideScoreboard","ScoreboardWrapper","hide","Ruleset","Game","Component","componentDidMount","options","props","togglePlayButtons","toggleTheme","game","engine","invalidArgs","hideLogo","showFrameScrubber","title","decodeURIComponent","setGameOptions","frames","length","fetchFrames","render","currentFrame","renderGame","snakes","food","foodImage","hazards","grid","width","height","highlightedSnake","turn","showCoordinateLabels","hideMediaControls","reloadGame","toggleGamePause","stepBackwardFrame","stepForwardFrame","stepToTurn","pauseGame","paused","persistAvailable","hasAllFrames","highlightSnake","ruleset","name"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport styled from \"@emotion/styled\";\n\nimport BlankState from \"./blank-state\";\nimport LoadingIndicator from \"./loading-indicator\";\nimport GameNotFound from \"./game-not-found\";\nimport Board from \"./board\";\nimport Scoreboard from \"./scoreboard\";\nimport MediaControls from \"./mediaControls\";\nimport Logo from \"./logo\";\nimport { breakpoints, colors, themes } from \"../theme\";\nimport styles from \"./game/GamePage.module.css\";\n\nconst BoardTitle = styled(\"div\")(({ theme }) => ({\n  fontSize: \"2rem\",\n  fontWeight: \"600\",\n  textAlign: \"center\",\n  textTransform: \"uppercase\",\n  color: theme === themes.dark ? colors.lightText : colors.darkText\n}));\n\nconst HeaderWrapper = styled(\"div\")`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  margin: 0.5rem 0;\n  text-align: center;\n\n  @media (min-width: ${breakpoints.xxl}) {\n    padding-top: 1rem;\n    padding-bottom: 2rem;\n  }\n`;\n\nconst LogoWrapper = styled(\"div\")`\n  width: 100%;\n  height: 5rem;\n\n  @media (min-width: ${breakpoints.lg}) {\n    height: 8rem;\n  }\n\n  @media (min-width: ${breakpoints.xxl}) {\n    height: 16rem;\n  }\n`;\n\nconst TurnCount = styled(\"div\")`\n  font-size: 2rem;\n  font-weight: 600;\n  text-transform: uppercase;\n  color: ${({ theme }) =>\n    theme === themes.dark ? colors.lightText : colors.darkText};\n\n  @media (min-width: ${breakpoints.xxl}) {\n    font-size: 3rem;\n  }\n`;\nconst TurnCountValue = styled(\"span\")`\n  display: inline-block;\n  width: 6rem;\n`;\n\nconst BoardWrapper = styled(\"div\")`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  height: 100%;\n\n  @media (min-width: ${breakpoints.md}) {\n    width: ${({ hideScoreboard }) => (hideScoreboard ? \"100%\" : \"60vw\")};\n  }\n`;\n\nconst ScoreboardWrapper = styled(\"div\")`\n  display: none;\n  width: 40vw;\n  padding: 0 2rem;\n\n  @media (min-width: ${breakpoints.md}) {\n    display: ${({ hide }) => (hide ? \"none\" : \"block\")};\n  }\n`;\n\nconst Ruleset = styled(\"p\")`\n  margin: 0.25rem;\n  width: 100%;\n  font-size: 1.2rem;\n  text-align: center;\n  color: #aaa;\n  text-transform: capitalize;\n`;\n\nclass Game extends React.Component {\n  componentDidMount() {\n    const { options } = this.props;\n\n    this.props.togglePlayButtons(\"show\");\n\n    if (options.theme) {\n      this.props.toggleTheme(options.theme);\n    }\n\n    if (!(options.game && options.engine)) {\n      this.invalidArgs = true;\n      return;\n    }\n\n    this.hideLogo = options.hideLogo === \"true\";\n    this.hideScoreboard = options.hideScoreboard === \"true\";\n    this.showFrameScrubber = options.showFrameScrubber;\n    this.title = options.title && decodeURIComponent(options.title);\n    this.props.setGameOptions(options);\n\n    if (this.props.frames.length === 0) {\n      this.props.fetchFrames();\n    }\n  }\n\n  render() {\n    /*\n    if (this.invalidArgs) {\n      return <BlankState />;\n    }\n\n    if (this.props.gameNotFound) {\n      return <GameNotFound />;\n    }\n    */\n    if (this.props.currentFrame) {\n      return this.renderGame();\n    }\n\n    return <LoadingIndicator />;\n  }\n\n  renderGame() {\n    const { currentFrame, options } = this.props;\n    return (\n      <main className={options.theme}>\n        <section className={styles.game}>\n          <BoardWrapper hideScoreboard={this.hideScoreboard}>\n            <BoardTitle theme={options.theme}>{this.title}</BoardTitle>\n            <Board\n              snakes={currentFrame.snakes}\n              food={currentFrame.food}\n              foodImage={options.foodImage}\n              hazards={currentFrame.hazards}\n              columns={this.props.grid.width}\n              rows={this.props.grid.height}\n              highlightedSnake={this.props.highlightedSnake}\n              theme={options.theme}\n              turn={currentFrame.turn}\n              showCoordinateLabels={options.showCoordinateLabels}\n            />\n            <MediaControls\n              currentFrame={currentFrame}\n              hideControls={options.hideMediaControls === \"true\"}\n              reloadGame={this.props.reloadGame}\n              toggleGamePause={this.props.toggleGamePause}\n              stepBackwardFrame={this.props.stepBackwardFrame}\n              stepForwardFrame={this.props.stepForwardFrame}\n              stepToTurn={this.props.stepToTurn}\n              pauseGame={this.props.pauseGame}\n              paused={this.props.paused}\n              theme={options.theme}\n              persistAvailable={options.persistAvailable}\n              maxTurn={this.props.frames[this.props.frames.length - 1].turn}\n              showFrameScrubber={this.showFrameScrubber}\n              hasAllFrames={this.props.hasAllFrames}\n            />\n          </BoardWrapper>\n          {!this.hideScoreboard && (\n            <ScoreboardWrapper>\n              <HeaderWrapper>\n                {!this.hideLogo && (\n                  <LogoWrapper>\n                    <Logo theme={options.theme} />\n                  </LogoWrapper>\n                )}\n                <TurnCount theme={options.theme}>\n                  Turn <TurnCountValue>{currentFrame.turn}</TurnCountValue>\n                </TurnCount>\n              </HeaderWrapper>\n              <Scoreboard\n                turn={currentFrame.turn}\n                snakes={currentFrame.snakes}\n                food={currentFrame.food}\n                highlightSnake={this.props.highlightSnake}\n                theme={options.theme}\n              />\n              <Ruleset>Rules: {this.props.ruleset.name}</Ruleset>\n            </ScoreboardWrapper>\n          )}\n        </section>\n      </main>\n    );\n  }\n}\n\nexport default Game;\n"]},"metadata":{},"sourceType":"module"}