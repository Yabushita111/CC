{"ast":null,"code":"import _classCallCheck from\"/home/y-yabust/CC/cc-replay/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/y-yabust/CC/cc-replay/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/y-yabust/CC/cc-replay/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/y-yabust/CC/cc-replay/node_modules/@babel/runtime/helpers/esm/createSuper\";import _taggedTemplateLiteral from\"/home/y-yabust/CC/cc-replay/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2;import React from\"react\";import styled from\"@emotion/styled\";import Avatar from\"./avatar\";import{breakpoints,colors,themes}from\"../theme\";import{jsx as _jsx}from\"react/jsx-runtime\";var orderSnakes=function orderSnakes(snakes){// Sort by name\nvar aliveSnakes=snakes.filter(function(s){return!s.isDead;}).sort(function(a,b){var aLower=a.name.toLowerCase();var bLower=b.name.toLowerCase();if(aLower<bLower){return-1;}if(aLower>bLower){return 1;}return 0;});// Sort by turn died, descending\nvar deadSnakes=snakes.filter(function(s){return s.isDead;}).sort(function(a,b){return a.death.turn-b.death.turn;}).reverse();return aliveSnakes.concat(deadSnakes);};var Wrapper=styled(\"div\")(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  display: none;\\n  color: \",\";\\n  font-weight: 600;\\n  font-size: 1.4rem;\\n\\n  @media (min-width: \",\") {\\n    display: \",\";\\n    font-size: 1.8rem;\\n  }\\n\\n  @media (min-width: \",\") {\\n    font-size: 3.2rem;\\n    letter-spacing: 0.1rem;\\n  }\\n\"])),function(_ref){var theme=_ref.theme;return theme===themes.dark?colors.lightText:colors.darkText;},breakpoints.md,function(_ref2){var hide=_ref2.hide;return hide?\"none\":\"block\";},breakpoints.xxl);var AvatarWrapper=styled(\"div\")(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  padding: 0.75rem;\\n  transition: background-color 0.2s, box-shadow 0.2s;\\n  border: 2px solid\\n    \",\";\\n  &:hover {\\n    background-color: \",\";\\n    cursor: pointer;\\n    border-color: \",\";\\n  }\\n\"])),function(props){return props.highlighted?colors.avatarHighlightedBorder:\"transparent\";},function(props){return props.theme===themes.dark?colors.purple:colors.light;},function(props){return props.highlighted?colors.avatarHighlightedBorder:colors.avatarHoverBorder;});var Scoreboard=/*#__PURE__*/function(_React$Component){_inherits(Scoreboard,_React$Component);var _super=_createSuper(Scoreboard);function Scoreboard(){var _this;_classCallCheck(this,Scoreboard);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={highlightedSnake:null};_this.toggleHighlight=function(snake){var getSnakeToHighlight=function getSnakeToHighlight(state,snake){return state.highlightedSnake!==snake._id?snake._id:null;};_this.props.highlightSnake(getSnakeToHighlight(_this.state,snake));_this.setState(function(state){return{highlightedSnake:getSnakeToHighlight(state,snake)};});};return _this;}_createClass(Scoreboard,[{key:\"render\",value:function render(){var _this2=this;var highlightedSnake=this.state.highlightedSnake;return/*#__PURE__*/_jsx(Wrapper,{theme:this.props.theme,children:this.props.snakes?orderSnakes(this.props.snakes).map(function(snake,i){return/*#__PURE__*/_jsx(AvatarWrapper,{onClick:function onClick(){return _this2.toggleHighlight(snake);},highlighted:highlightedSnake===snake._id,theme:_this2.props.theme,children:/*#__PURE__*/_jsx(Avatar,{snake:snake,theme:_this2.props.theme,highlighted:highlightedSnake===snake._id},\"avatar\"+i)},\"avatarwrapper\"+i);}):undefined});}}]);return Scoreboard;}(React.Component);export default Scoreboard;","map":{"version":3,"sources":["/home/y-yabust/CC/cc-replay/src/components/scoreboard.jsx"],"names":["React","styled","Avatar","breakpoints","colors","themes","orderSnakes","snakes","aliveSnakes","filter","s","isDead","sort","a","b","aLower","name","toLowerCase","bLower","deadSnakes","death","turn","reverse","concat","Wrapper","theme","dark","lightText","darkText","md","hide","xxl","AvatarWrapper","props","highlighted","avatarHighlightedBorder","purple","light","avatarHoverBorder","Scoreboard","state","highlightedSnake","toggleHighlight","snake","getSnakeToHighlight","_id","highlightSnake","setState","map","i","undefined","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport styled from \"@emotion/styled\";\nimport Avatar from \"./avatar\";\nimport { breakpoints, colors, themes } from \"../theme\";\n\nconst orderSnakes = snakes => {\n  // Sort by name\n  const aliveSnakes = snakes\n    .filter(s => !s.isDead)\n    .sort((a, b) => {\n      const aLower = a.name.toLowerCase();\n      const bLower = b.name.toLowerCase();\n      if (aLower < bLower) {\n        return -1;\n      }\n      if (aLower > bLower) {\n        return 1;\n      }\n      return 0;\n    });\n\n  // Sort by turn died, descending\n  const deadSnakes = snakes\n    .filter(s => s.isDead)\n    .sort((a, b) => a.death.turn - b.death.turn)\n    .reverse();\n\n  return aliveSnakes.concat(deadSnakes);\n};\n\nconst Wrapper = styled(\"div\")`\n  display: none;\n  color: ${({ theme }) =>\n    theme === themes.dark ? colors.lightText : colors.darkText};\n  font-weight: 600;\n  font-size: 1.4rem;\n\n  @media (min-width: ${breakpoints.md}) {\n    display: ${({ hide }) => (hide ? \"none\" : \"block\")};\n    font-size: 1.8rem;\n  }\n\n  @media (min-width: ${breakpoints.xxl}) {\n    font-size: 3.2rem;\n    letter-spacing: 0.1rem;\n  }\n`;\n\nconst AvatarWrapper = styled(\"div\")`\n  padding: 0.75rem;\n  transition: background-color 0.2s, box-shadow 0.2s;\n  border: 2px solid\n    ${props =>\n      props.highlighted ? colors.avatarHighlightedBorder : \"transparent\"};\n  &:hover {\n    background-color: ${props =>\n      props.theme === themes.dark ? colors.purple : colors.light};\n    cursor: pointer;\n    border-color: ${props =>\n      props.highlighted\n        ? colors.avatarHighlightedBorder\n        : colors.avatarHoverBorder};\n  }\n`;\n\nclass Scoreboard extends React.Component {\n  state = {\n    highlightedSnake: null\n  };\n\n  toggleHighlight = snake => {\n    const getSnakeToHighlight = (state, snake) => {\n      return state.highlightedSnake !== snake._id ? snake._id : null;\n    };\n\n    this.props.highlightSnake(getSnakeToHighlight(this.state, snake));\n\n    this.setState(state => ({\n      highlightedSnake: getSnakeToHighlight(state, snake)\n    }));\n  };\n\n  render() {\n    const { highlightedSnake } = this.state;\n    return (\n      <Wrapper theme={this.props.theme}>\n        {this.props.snakes\n          ? orderSnakes(this.props.snakes).map((snake, i) => (\n              <AvatarWrapper\n                key={\"avatarwrapper\" + i}\n                onClick={() => this.toggleHighlight(snake)}\n                highlighted={highlightedSnake === snake._id}\n                theme={this.props.theme}\n              >\n                <Avatar\n                  snake={snake}\n                  key={\"avatar\" + i}\n                  theme={this.props.theme}\n                  highlighted={highlightedSnake === snake._id}\n                />\n              </AvatarWrapper>\n            ))\n          : undefined}\n      </Wrapper>\n    );\n  }\n}\n\nexport default Scoreboard;\n"]},"metadata":{},"sourceType":"module"}