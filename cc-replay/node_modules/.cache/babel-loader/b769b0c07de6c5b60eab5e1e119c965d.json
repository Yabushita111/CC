{"ast":null,"code":"var _jsxFileName = \"/Users/yabu/CC/board/src/components/avatar.jsx\";\nimport React from \"react\";\nimport styled from \"@emotion/styled\";\nimport { colors, themes } from \"../theme\";\nimport { getReadableCauseOfDeath } from \"../utils/engine-client\";\nimport ErrorMessage from \"./scoreboard/error-message/ErrorMessage\";\nimport \"./scoreboard/avatar/Avatar.css\";\nimport StatusIndicator from \"./scoreboard/status-indicator/StatusIndicator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AvatarWrapper = styled(\"div\")`\n  width: 100%;\n  white-space: nowrap;\n  overflow: hidden;\n\n  opacity: ${props => props.isEliminated ? \"0.5\" : \"1.0\"};\n`;\n_c = AvatarWrapper;\nconst Name = styled(\"span\")(({\n  theme\n}) => ({\n  display: \"block\",\n  textShadow: theme === themes.dark ? \"0 1px 2px rgba(0,0,0,0.90)\" : null\n}));\nconst Length = styled(\"span\")(({\n  theme\n}) => ({\n  marginLeft: \"auto\",\n  textShadow: theme === themes.dark ? \"0 1px 2px rgba(0,0,0,0.90)\" : null\n}));\nconst AuthorWrapper = styled(\"div\")({\n  fontSize: \"1rem\",\n  fontWeight: \"400\",\n  display: \"flex\",\n  flexDirection: \"row\",\n  height: \"1.25rem\"\n});\nconst Author = styled(\"span\")(({\n  theme\n}) => ({\n  display: \"block\",\n  flexGrow: 1,\n  textShadow: theme === themes.dark ? \"0 1px 2px rgba(0,0,0,0.90)\" : null\n}));\nconst Latency = styled(\"span\")(({\n  theme,\n  latency\n}) => ({\n  color: latency === \"0\" ? \"red\" : \"inherit\",\n  marginLeft: \"auto\",\n  textShadow: theme === themes.dark ? \"0 1px 2px rgba(0,0,0,0.90)\" : null,\n  display: latency === \"\" ? \"none\" : \"block\"\n}));\nconst HealthBarWrapper = styled(\"div\")({\n  marginTop: \"0.2rem\",\n  width: \"100%\",\n  height: \"1.0rem\",\n  background: colors.healthBarBackground,\n  borderRadius: \"1.5rem\"\n});\nconst HealthBar = styled(\"div\")(({\n  color\n}) => ({\n  height: \"100%\",\n  backgroundColor: color,\n  borderRadius: \"inherit\"\n}));\nconst CauseOfDeath = styled(\"div\")(({\n  theme\n}) => ({\n  width: \"100%\",\n  marginTop: \"0.2rem\",\n  fontSize: \"1rem\",\n  lineHeight: \"1rem\",\n  color: theme === themes.dark ? colors.lightText : colors.darkText\n}));\n\nclass Avatar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showError: false\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(AvatarWrapper, {\n      isEliminated: this.props.snake.death ? true : false,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(Name, {\n          children: this.props.snake.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Length, {\n          children: this.props.snake.body.length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AuthorWrapper, {\n        children: [/*#__PURE__*/_jsxDEV(Author, {\n          children: [\"by \", this.props.snake.author]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(StatusIndicator, {\n          errorMessage: this.props.snake.error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Latency, {\n          latency: this.props.snake.latency,\n          children: [this.props.snake.latency, \" ms\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), this.props.snake.death ? /*#__PURE__*/_jsxDEV(CauseOfDeath, {\n        theme: this.props.theme,\n        children: getReadableCauseOfDeath(this.props.snake.death)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(HealthBarWrapper, {\n        children: /*#__PURE__*/_jsxDEV(HealthBar, {\n          color: this.props.snake.color,\n          style: {\n            width: `${this.props.snake.health}%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        error: this.props.highlighted ? this.props.snake.error : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Avatar;\n\nvar _c;\n\n$RefreshReg$(_c, \"AvatarWrapper\");","map":{"version":3,"sources":["/Users/yabu/CC/board/src/components/avatar.jsx"],"names":["React","styled","colors","themes","getReadableCauseOfDeath","ErrorMessage","StatusIndicator","AvatarWrapper","props","isEliminated","Name","theme","display","textShadow","dark","Length","marginLeft","AuthorWrapper","fontSize","fontWeight","flexDirection","height","Author","flexGrow","Latency","latency","color","HealthBarWrapper","marginTop","width","background","healthBarBackground","borderRadius","HealthBar","backgroundColor","CauseOfDeath","lineHeight","lightText","darkText","Avatar","Component","constructor","state","showError","render","snake","death","name","body","length","author","error","health","highlighted"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport styled from \"@emotion/styled\";\nimport { colors, themes } from \"../theme\";\nimport { getReadableCauseOfDeath } from \"../utils/engine-client\";\nimport ErrorMessage from \"./scoreboard/error-message/ErrorMessage\";\n\nimport \"./scoreboard/avatar/Avatar.css\";\nimport StatusIndicator from \"./scoreboard/status-indicator/StatusIndicator\";\n\nconst AvatarWrapper = styled(\"div\")`\n  width: 100%;\n  white-space: nowrap;\n  overflow: hidden;\n\n  opacity: ${props => (props.isEliminated ? \"0.5\" : \"1.0\")};\n`;\n\nconst Name = styled(\"span\")(({ theme }) => ({\n  display: \"block\",\n  textShadow: theme === themes.dark ? \"0 1px 2px rgba(0,0,0,0.90)\" : null\n}));\n\nconst Length = styled(\"span\")(({ theme }) => ({\n  marginLeft: \"auto\",\n  textShadow: theme === themes.dark ? \"0 1px 2px rgba(0,0,0,0.90)\" : null\n}));\n\nconst AuthorWrapper = styled(\"div\")({\n  fontSize: \"1rem\",\n  fontWeight: \"400\",\n  display: \"flex\",\n  flexDirection: \"row\",\n  height: \"1.25rem\"\n});\n\nconst Author = styled(\"span\")(({ theme }) => ({\n  display: \"block\",\n  flexGrow: 1,\n  textShadow: theme === themes.dark ? \"0 1px 2px rgba(0,0,0,0.90)\" : null\n}));\n\nconst Latency = styled(\"span\")(({ theme, latency }) => ({\n  color: latency === \"0\" ? \"red\" : \"inherit\",\n  marginLeft: \"auto\",\n  textShadow: theme === themes.dark ? \"0 1px 2px rgba(0,0,0,0.90)\" : null,\n  display: latency === \"\" ? \"none\" : \"block\"\n}));\n\nconst HealthBarWrapper = styled(\"div\")({\n  marginTop: \"0.2rem\",\n  width: \"100%\",\n  height: \"1.0rem\",\n  background: colors.healthBarBackground,\n  borderRadius: \"1.5rem\"\n});\n\nconst HealthBar = styled(\"div\")(({ color }) => ({\n  height: \"100%\",\n  backgroundColor: color,\n  borderRadius: \"inherit\"\n}));\n\nconst CauseOfDeath = styled(\"div\")(({ theme }) => ({\n  width: \"100%\",\n  marginTop: \"0.2rem\",\n  fontSize: \"1rem\",\n  lineHeight: \"1rem\",\n  color: theme === themes.dark ? colors.lightText : colors.darkText\n}));\n\nclass Avatar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showError: false\n    };\n  }\n  render() {\n    return (\n      <AvatarWrapper isEliminated={this.props.snake.death ? true : false}>\n        <div className=\"row\">\n          <Name>{this.props.snake.name}</Name>\n          <Length>{this.props.snake.body.length}</Length>\n        </div>\n        <AuthorWrapper>\n          <Author>by {this.props.snake.author}</Author>\n          <StatusIndicator errorMessage={this.props.snake.error} />\n          <Latency latency={this.props.snake.latency}>\n            {this.props.snake.latency} ms\n          </Latency>\n        </AuthorWrapper>\n        {this.props.snake.death ? (\n          <CauseOfDeath theme={this.props.theme}>\n            {getReadableCauseOfDeath(this.props.snake.death)}\n          </CauseOfDeath>\n        ) : (\n          <HealthBarWrapper>\n            <HealthBar\n              color={this.props.snake.color}\n              style={{\n                width: `${this.props.snake.health}%`\n              }}\n            />\n          </HealthBarWrapper>\n        )}\n        <ErrorMessage\n          error={this.props.highlighted ? this.props.snake.error : \"\"}\n        />\n      </AvatarWrapper>\n    );\n  }\n}\n\nexport default Avatar;\n"]},"metadata":{},"sourceType":"module"}