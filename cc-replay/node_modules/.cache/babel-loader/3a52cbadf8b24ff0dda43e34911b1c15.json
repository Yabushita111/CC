{"ast":null,"code":"import _objectSpread from\"/home/y-yabust/CC/cc-replay/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{connect}from\"react-redux\";import{parseQueryString}from\"../../utils/url\";import Game from\"../../components/game\";import{fetchFrames as _fetchFrames,reloadGame as _reloadGame,toggleGamePause as _toggleGamePause,toggleTheme as _toggleTheme,setGameOptions as _setGameOptions,stepForwardFrame as _stepForwardFrame,stepBackwardFrame as _stepBackwardFrame,stepToTurn as _stepToTurn,highlightSnake as _highlightSnake,pauseGameAction,togglePlayButtons as _togglePlayButtons}from\"../../actions\";var options=parseQueryString(window.location.search);if(typeof options.autoplay!==\"undefined\"){options.autoplay=options.autoplay===\"true\";}if(typeof options.showFrameScrubber!==\"undefined\"){options.showFrameScrubber=options.showFrameScrubber===\"true\";}var mapStateToProps=function mapStateToProps(state){var gameState=state.game;var settings=state.settings;return{options:_objectSpread(_objectSpread({},settings),options),ruleset:gameState.ruleset,grid:gameState.grid,gameNotFound:gameState.gameNotFound,paused:gameState.paused,currentFrame:gameState.currentFrame,frames:gameState.frames,highlightedSnake:gameState.highlightedSnake,theme:options.boardTheme||settings.theme,hasAllFrames:!!gameState.endEvent};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{setGameOptions:function setGameOptions(options){return dispatch(_setGameOptions(options));},fetchFrames:function fetchFrames(){return dispatch(_fetchFrames());},toggleTheme:function toggleTheme(theme){return dispatch(_toggleTheme(theme));},reloadGame:function reloadGame(){return dispatch(_reloadGame());},toggleGamePause:function toggleGamePause(paused){return dispatch(_toggleGamePause(paused));},pauseGame:function pauseGame(){return dispatch(pauseGameAction());},stepForwardFrame:function stepForwardFrame(){return dispatch(_stepForwardFrame());},stepBackwardFrame:function stepBackwardFrame(){return dispatch(_stepBackwardFrame());},stepToTurn:function stepToTurn(i){return dispatch(_stepToTurn(i));},highlightSnake:function highlightSnake(snakeId){return dispatch(_highlightSnake(snakeId));},togglePlayButtons:function togglePlayButtons(showHide){return dispatch(_togglePlayButtons(showHide));}};};export default connect(mapStateToProps,mapDispatchToProps)(Game);","map":{"version":3,"sources":["/home/y-yabust/CC/cc-replay/src/components/game/GamePage.jsx"],"names":["connect","parseQueryString","Game","fetchFrames","reloadGame","toggleGamePause","toggleTheme","setGameOptions","stepForwardFrame","stepBackwardFrame","stepToTurn","highlightSnake","pauseGameAction","togglePlayButtons","options","window","location","search","autoplay","showFrameScrubber","mapStateToProps","state","gameState","game","settings","ruleset","grid","gameNotFound","paused","currentFrame","frames","highlightedSnake","theme","boardTheme","hasAllFrames","endEvent","mapDispatchToProps","dispatch","pauseGame","i","snakeId","showHide"],"mappings":"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","sourcesContent":["import { connect } from \"react-redux\";\nimport { parseQueryString } from \"../../utils/url\";\nimport Game from \"../../components/game\";\nimport {\n  fetchFrames,\n  reloadGame,\n  toggleGamePause,\n  toggleTheme,\n  setGameOptions,\n  stepForwardFrame,\n  stepBackwardFrame,\n  stepToTurn,\n  highlightSnake,\n  pauseGameAction,\n  togglePlayButtons\n} from \"../../actions\";\n\nconst options = parseQueryString(window.location.search);\nif (typeof options.autoplay !== \"undefined\") {\n  options.autoplay = options.autoplay === \"true\";\n}\nif (typeof options.showFrameScrubber !== \"undefined\") {\n  options.showFrameScrubber = options.showFrameScrubber === \"true\";\n}\n\nconst mapStateToProps = state => {\n  const gameState = state.game;\n  const settings = state.settings;\n\n  return {\n    options: { ...settings, ...options },\n    ruleset: gameState.ruleset,\n    grid: gameState.grid,\n    gameNotFound: gameState.gameNotFound,\n    paused: gameState.paused,\n    currentFrame: gameState.currentFrame,\n    frames: gameState.frames,\n    highlightedSnake: gameState.highlightedSnake,\n    theme: options.boardTheme || settings.theme,\n    hasAllFrames: !!gameState.endEvent\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  setGameOptions: options => dispatch(setGameOptions(options)),\n  fetchFrames: () => dispatch(fetchFrames()),\n  toggleTheme: theme => dispatch(toggleTheme(theme)),\n  reloadGame: () => dispatch(reloadGame()),\n  toggleGamePause: paused => dispatch(toggleGamePause(paused)),\n  pauseGame: () => dispatch(pauseGameAction()),\n  stepForwardFrame: () => dispatch(stepForwardFrame()),\n  stepBackwardFrame: () => dispatch(stepBackwardFrame()),\n  stepToTurn: i => dispatch(stepToTurn(i)),\n  highlightSnake: snakeId => dispatch(highlightSnake(snakeId)),\n  togglePlayButtons: showHide => dispatch(togglePlayButtons(showHide))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Game);\n"]},"metadata":{},"sourceType":"module"}