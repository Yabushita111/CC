{"ast":null,"code":"import React,{useEffect}from\"react\";import{useDispatch,useSelector}from\"react-redux\";import{autoPlayUpdated,currentAutoplay,currentFrameRate,currentTheme,currentShowFrameScrubber,frameRateUpdated,themeSelected,showFrameScrubberUpdated,currentShowCoordinateLabels,showCoordinateLabelsUpdated}from\"./settings-slice\";import PlaybackSpeed from\"./playback/PlaybackSpeed\";import styles from\"./SettingsPage.module.css\";import{useHistory}from\"react-router-dom\";import{togglePlayButtons,pauseGame,themeChanged}from\"../../actions\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var SettingsPage=function SettingsPage(){var history=useHistory();var theme=useSelector(currentTheme);var playbackSpeed=useSelector(currentFrameRate);var autoplay=useSelector(currentAutoplay);var showFrameScrubber=useSelector(currentShowFrameScrubber);var showCoordinateLabels=useSelector(currentShowCoordinateLabels);var dispatch=useDispatch();useEffect(function(){dispatch(togglePlayButtons(\"hide\"));dispatch(pauseGame());});function dispatchSpeedChange(fps){dispatch(frameRateUpdated(fps));}return/*#__PURE__*/_jsx(\"main\",{children:/*#__PURE__*/_jsxs(\"section\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Playback Settings\"}),/*#__PURE__*/_jsxs(\"fieldset\",{children:[/*#__PURE__*/_jsx(\"legend\",{children:\"Playback Speed\"}),/*#__PURE__*/_jsx(\"div\",{className:styles.info,children:\"Adjust the playback speed of your games\"}),/*#__PURE__*/_jsx(\"div\",{className:styles.inputContainer,children:/*#__PURE__*/_jsx(PlaybackSpeed,{default:playbackSpeed,onChange:dispatchSpeedChange})})]}),/*#__PURE__*/_jsxs(\"fieldset\",{children:[/*#__PURE__*/_jsx(\"legend\",{children:\"Theme\"}),/*#__PURE__*/_jsx(\"div\",{className:styles.info,children:\"Change your game theme colors\"}),/*#__PURE__*/_jsxs(\"div\",{className:styles.inputContainer&&styles.row,children:[/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",value:\"light\",name:\"theme\",checked:theme===\"light\",onChange:function onChange(e){return dispatch(themeSelected(e.target.value))&&dispatch(themeChanged(e.target.value));}}),/*#__PURE__*/_jsx(\"span\",{className:styles.radio}),\"Light\"]}),/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",value:\"dark\",name:\"theme\",checked:theme===\"dark\",onChange:function onChange(e){return dispatch(themeSelected(e.target.value))&&dispatch(themeChanged(e.target.value));}}),/*#__PURE__*/_jsx(\"span\",{className:styles.radio}),\"Projector\"]})]})]}),/*#__PURE__*/_jsxs(\"fieldset\",{children:[/*#__PURE__*/_jsx(\"legend\",{children:\"Autoplay\"}),/*#__PURE__*/_jsx(\"div\",{className:styles.info,children:\"All games will start playing as soon as the game loads\"}),/*#__PURE__*/_jsx(\"div\",{className:styles.inputContainer,children:/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",name:\"autoplay\",checked:autoplay,onChange:function onChange(e){return dispatch(autoPlayUpdated(e.target.checked));}}),/*#__PURE__*/_jsx(\"span\",{className:styles.checkmark}),autoplay?\"On\":\"Off\"]})})]}),/*#__PURE__*/_jsxs(\"fieldset\",{children:[/*#__PURE__*/_jsx(\"legend\",{children:\"Frame Scrubber [EXPERIMENTAL]\"}),/*#__PURE__*/_jsxs(\"div\",{className:styles.info,children:[\"Display progress bar that shows current frame and allows quickly jumping to specific frames. \\xA0\",/*#__PURE__*/_jsx(\"a\",{href:\"https://github.com/BattlesnakeOfficial/feedback/discussions/171\",target:\"_blank\",rel:\"noreferrer\",children:\"Let us know what you think!\"})]}),/*#__PURE__*/_jsx(\"div\",{className:styles.inputContainer,children:/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",name:\"showFrameScrubber\",checked:showFrameScrubber,onChange:function onChange(e){return dispatch(showFrameScrubberUpdated(e.target.checked));}}),/*#__PURE__*/_jsx(\"span\",{className:styles.checkmark}),showFrameScrubber?\"On\":\"Off\"]})})]}),/*#__PURE__*/_jsxs(\"fieldset\",{children:[/*#__PURE__*/_jsx(\"legend\",{children:\"Show Coordinate Labels [EXPERIMENTAL]\"}),/*#__PURE__*/_jsxs(\"div\",{className:styles.info,children:[\"Adds coordinate labels to the game board. \\xA0 These go from 0 to the width/height of the board to make it easier to debug games\",/*#__PURE__*/_jsx(\"a\",{href:\"https://github.com/orgs/BattlesnakeOfficial/discussions/231\",target:\"_blank\",rel:\"noreferrer\",children:\"Let us know what you think!\"})]}),/*#__PURE__*/_jsx(\"div\",{className:styles.inputContainer,children:/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",name:\"showCoordinateLabels\",checked:showCoordinateLabels,onChange:function onChange(e){return dispatch(showCoordinateLabelsUpdated(e.target.checked));}}),/*#__PURE__*/_jsx(\"span\",{className:styles.checkmark}),showCoordinateLabels?\"On\":\"Off\"]})})]}),/*#__PURE__*/_jsx(\"fieldset\",{className:styles.centered,children:/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return history.goBack();},children:\"Return to Game\"})})]})});};export default SettingsPage;","map":{"version":3,"sources":["/home/y-yabust/CC/cc-replay/src/components/settings/SettingsPage.jsx"],"names":["React","useEffect","useDispatch","useSelector","autoPlayUpdated","currentAutoplay","currentFrameRate","currentTheme","currentShowFrameScrubber","frameRateUpdated","themeSelected","showFrameScrubberUpdated","currentShowCoordinateLabels","showCoordinateLabelsUpdated","PlaybackSpeed","styles","useHistory","togglePlayButtons","pauseGame","themeChanged","SettingsPage","history","theme","playbackSpeed","autoplay","showFrameScrubber","showCoordinateLabels","dispatch","dispatchSpeedChange","fps","info","inputContainer","row","e","target","value","radio","checked","checkmark","centered","goBack"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  autoPlayUpdated,\n  currentAutoplay,\n  currentFrameRate,\n  currentTheme,\n  currentShowFrameScrubber,\n  frameRateUpdated,\n  themeSelected,\n  showFrameScrubberUpdated,\n  currentShowCoordinateLabels,\n  showCoordinateLabelsUpdated\n} from \"./settings-slice\";\nimport PlaybackSpeed from \"./playback/PlaybackSpeed\";\nimport styles from \"./SettingsPage.module.css\";\nimport { useHistory } from \"react-router-dom\";\nimport { togglePlayButtons, pauseGame, themeChanged } from \"../../actions\";\n\nconst SettingsPage = () => {\n  const history = useHistory();\n  const theme = useSelector(currentTheme);\n  const playbackSpeed = useSelector(currentFrameRate);\n  const autoplay = useSelector(currentAutoplay);\n  const showFrameScrubber = useSelector(currentShowFrameScrubber);\n  const showCoordinateLabels = useSelector(currentShowCoordinateLabels);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(togglePlayButtons(\"hide\"));\n    dispatch(pauseGame());\n  });\n\n  function dispatchSpeedChange(fps) {\n    dispatch(frameRateUpdated(fps));\n  }\n\n  return (\n    <main>\n      <section>\n        <h2>Playback Settings</h2>\n        <fieldset>\n          <legend>Playback Speed</legend>\n          <div className={styles.info}>\n            Adjust the playback speed of your games\n          </div>\n          <div className={styles.inputContainer}>\n            <PlaybackSpeed\n              default={playbackSpeed}\n              onChange={dispatchSpeedChange}\n            />\n          </div>\n        </fieldset>\n        <fieldset>\n          <legend>Theme</legend>\n          <div className={styles.info}>Change your game theme colors</div>\n          <div className={styles.inputContainer && styles.row}>\n            <label>\n              <input\n                type=\"radio\"\n                value=\"light\"\n                name=\"theme\"\n                checked={theme === \"light\"}\n                onChange={e =>\n                  dispatch(themeSelected(e.target.value)) &&\n                  dispatch(themeChanged(e.target.value))\n                }\n              />\n              <span className={styles.radio} />\n              Light\n            </label>\n            <label>\n              <input\n                type=\"radio\"\n                value=\"dark\"\n                name=\"theme\"\n                checked={theme === \"dark\"}\n                onChange={e =>\n                  dispatch(themeSelected(e.target.value)) &&\n                  dispatch(themeChanged(e.target.value))\n                }\n              />\n              <span className={styles.radio} />\n              Projector\n            </label>\n          </div>\n        </fieldset>\n        <fieldset>\n          <legend>Autoplay</legend>\n          <div className={styles.info}>\n            All games will start playing as soon as the game loads\n          </div>\n          <div className={styles.inputContainer}>\n            <label>\n              <input\n                type=\"checkbox\"\n                name=\"autoplay\"\n                checked={autoplay}\n                onChange={e => dispatch(autoPlayUpdated(e.target.checked))}\n              />\n              <span className={styles.checkmark} />\n              {autoplay ? \"On\" : \"Off\"}\n            </label>\n          </div>\n        </fieldset>\n        <fieldset>\n          <legend>Frame Scrubber [EXPERIMENTAL]</legend>\n          <div className={styles.info}>\n            Display progress bar that shows current frame and allows quickly\n            jumping to specific frames. &nbsp;\n            <a\n              href=\"https://github.com/BattlesnakeOfficial/feedback/discussions/171\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              Let us know what you think!\n            </a>\n          </div>\n          <div className={styles.inputContainer}>\n            <label>\n              <input\n                type=\"checkbox\"\n                name=\"showFrameScrubber\"\n                checked={showFrameScrubber}\n                onChange={e =>\n                  dispatch(showFrameScrubberUpdated(e.target.checked))\n                }\n              />\n              <span className={styles.checkmark} />\n              {showFrameScrubber ? \"On\" : \"Off\"}\n            </label>\n          </div>\n        </fieldset>\n        <fieldset>\n          <legend>Show Coordinate Labels [EXPERIMENTAL]</legend>\n          <div className={styles.info}>\n            Adds coordinate labels to the game board. &nbsp; These go from 0 to\n            the width/height of the board to make it easier to debug games\n            <a\n              href=\"https://github.com/orgs/BattlesnakeOfficial/discussions/231\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              Let us know what you think!\n            </a>\n          </div>\n          <div className={styles.inputContainer}>\n            <label>\n              <input\n                type=\"checkbox\"\n                name=\"showCoordinateLabels\"\n                checked={showCoordinateLabels}\n                onChange={e =>\n                  dispatch(showCoordinateLabelsUpdated(e.target.checked))\n                }\n              />\n              <span className={styles.checkmark} />\n              {showCoordinateLabels ? \"On\" : \"Off\"}\n            </label>\n          </div>\n        </fieldset>\n        <fieldset className={styles.centered}>\n          <button onClick={() => history.goBack()}>Return to Game</button>\n        </fieldset>\n      </section>\n    </main>\n  );\n};\n\nexport default SettingsPage;\n"]},"metadata":{},"sourceType":"module"}