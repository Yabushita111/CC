{"ast":null,"code":"var _jsxFileName = \"/home/y-yabust/CC/cc-replay/src/components/scoreboard/status-indicator/StatusIndicator.jsx\";\nimport React from \"react\";\nimport { colors } from \"../../../theme\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst style = {\n  color: colors.danger,\n  cursor: \"pointer\",\n  margin: 0,\n  padding: 0\n};\n\nfunction getIcon(code) {\n  return \"error\";\n}\n\nconst StatusIndicator = ({\n  errorMessage\n}) => {\n  if (errorMessage === \"\") {\n    return \"\";\n  } // until we can refactor Avatar and not pass the whole error object\n\n\n  const [code] = errorMessage.toString().split(\":\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: style,\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"material-icons material-icons-inline\",\n      children: getIcon(code)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_c = StatusIndicator;\nexport default StatusIndicator;\n\nvar _c;\n\n$RefreshReg$(_c, \"StatusIndicator\");","map":{"version":3,"sources":["/home/y-yabust/CC/cc-replay/src/components/scoreboard/status-indicator/StatusIndicator.jsx"],"names":["React","colors","style","color","danger","cursor","margin","padding","getIcon","code","StatusIndicator","errorMessage","toString","split"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,gBAAvB;;AAEA,MAAMC,KAAK,GAAG;AACZC,EAAAA,KAAK,EAAEF,MAAM,CAACG,MADF;AAEZC,EAAAA,MAAM,EAAE,SAFI;AAGZC,EAAAA,MAAM,EAAE,CAHI;AAIZC,EAAAA,OAAO,EAAE;AAJG,CAAd;;AAOA,SAASC,OAAT,CAAiBC,IAAjB,EAAuB;AACrB,SAAO,OAAP;AACD;;AAED,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAsB;AAC5C,MAAIA,YAAY,KAAK,EAArB,EAAyB;AACvB,WAAO,EAAP;AACD,GAH2C,CAK5C;;;AACA,QAAM,CAACF,IAAD,IAASE,YAAY,CAACC,QAAb,GAAwBC,KAAxB,CAA8B,GAA9B,CAAf;AAEA,sBACE;AAAK,IAAA,KAAK,EAAEX,KAAZ;AAAA,2BACE;AAAM,MAAA,SAAS,EAAC,sCAAhB;AAAA,gBACGM,OAAO,CAACC,IAAD;AADV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAfD;;KAAMC,e;AAiBN,eAAeA,eAAf","sourcesContent":["import React from \"react\";\nimport { colors } from \"../../../theme\";\n\nconst style = {\n  color: colors.danger,\n  cursor: \"pointer\",\n  margin: 0,\n  padding: 0\n};\n\nfunction getIcon(code) {\n  return \"error\";\n}\n\nconst StatusIndicator = ({ errorMessage }) => {\n  if (errorMessage === \"\") {\n    return \"\";\n  }\n\n  // until we can refactor Avatar and not pass the whole error object\n  const [code] = errorMessage.toString().split(\":\");\n\n  return (\n    <div style={style}>\n      <span className=\"material-icons material-icons-inline\">\n        {getIcon(code)}\n      </span>\n    </div>\n  );\n};\n\nexport default StatusIndicator;\n"]},"metadata":{},"sourceType":"module"}