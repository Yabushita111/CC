{"ast":null,"code":"var _jsxFileName = \"/home/y-yabust/CC/cc-replay/src/components/scoreboard.jsx\";\nimport React from \"react\";\nimport styled from \"@emotion/styled\";\nimport Avatar from \"./avatar\";\nimport { breakpoints, colors, themes } from \"../theme\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst orderSnakes = snakes => {\n  // Sort by name\n  const aliveSnakes = snakes.filter(s => !s.isDead).sort((a, b) => {\n    const aLower = a.name.toLowerCase();\n    const bLower = b.name.toLowerCase();\n\n    if (aLower < bLower) {\n      return -1;\n    }\n\n    if (aLower > bLower) {\n      return 1;\n    }\n\n    return 0;\n  }); // Sort by turn died, descending\n\n  const deadSnakes = snakes.filter(s => s.isDead).sort((a, b) => a.death.turn - b.death.turn).reverse();\n  return aliveSnakes.concat(deadSnakes);\n};\n\nconst Wrapper = styled(\"div\")`\n  display: none;\n  color: ${({\n  theme\n}) => theme === themes.dark ? colors.lightText : colors.darkText};\n  font-weight: 600;\n  font-size: 1.4rem;\n\n  @media (min-width: ${breakpoints.md}) {\n    display: ${({\n  hide\n}) => hide ? \"none\" : \"block\"};\n    font-size: 1.8rem;\n  }\n\n  @media (min-width: ${breakpoints.xxl}) {\n    font-size: 3.2rem;\n    letter-spacing: 0.1rem;\n  }\n`;\n_c = Wrapper;\nconst AvatarWrapper = styled(\"div\")`\n  padding: 0.75rem;\n  transition: background-color 0.2s, box-shadow 0.2s;\n  border: 2px solid\n    ${props => props.highlighted ? colors.avatarHighlightedBorder : \"transparent\"};\n  &:hover {\n    background-color: ${props => props.theme === themes.dark ? colors.purple : colors.light};\n    cursor: pointer;\n    border-color: ${props => props.highlighted ? colors.avatarHighlightedBorder : colors.avatarHoverBorder};\n  }\n`;\n_c2 = AvatarWrapper;\n\nclass Scoreboard extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      highlightedSnake: null\n    };\n\n    this.toggleHighlight = snake => {\n      const getSnakeToHighlight = (state, snake) => {\n        return state.highlightedSnake !== snake._id ? snake._id : null;\n      };\n\n      this.props.highlightSnake(getSnakeToHighlight(this.state, snake));\n      this.setState(state => ({\n        highlightedSnake: getSnakeToHighlight(state, snake)\n      }));\n    };\n  }\n\n  render() {\n    const {\n      highlightedSnake\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Wrapper, {\n      theme: this.props.theme,\n      children: this.props.snakes ? orderSnakes(this.props.snakes).map((snake, i) => /*#__PURE__*/_jsxDEV(AvatarWrapper, {\n        onClick: () => this.toggleHighlight(snake),\n        highlighted: highlightedSnake === snake._id,\n        theme: this.props.theme,\n        children: /*#__PURE__*/_jsxDEV(Avatar, {\n          snake: snake,\n          theme: this.props.theme,\n          highlighted: highlightedSnake === snake._id\n        }, \"avatar\" + i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 17\n        }, this)\n      }, \"avatarwrapper\" + i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 15\n      }, this)) : undefined\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Scoreboard;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"AvatarWrapper\");","map":{"version":3,"sources":["/home/y-yabust/CC/cc-replay/src/components/scoreboard.jsx"],"names":["React","styled","Avatar","breakpoints","colors","themes","orderSnakes","snakes","aliveSnakes","filter","s","isDead","sort","a","b","aLower","name","toLowerCase","bLower","deadSnakes","death","turn","reverse","concat","Wrapper","theme","dark","lightText","darkText","md","hide","xxl","AvatarWrapper","props","highlighted","avatarHighlightedBorder","purple","light","avatarHoverBorder","Scoreboard","Component","state","highlightedSnake","toggleHighlight","snake","getSnakeToHighlight","_id","highlightSnake","setState","render","map","i","undefined"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,WAAT,EAAsBC,MAAtB,EAA8BC,MAA9B,QAA4C,UAA5C;;;AAEA,MAAMC,WAAW,GAAGC,MAAM,IAAI;AAC5B;AACA,QAAMC,WAAW,GAAGD,MAAM,CACvBE,MADiB,CACVC,CAAC,IAAI,CAACA,CAAC,CAACC,MADE,EAEjBC,IAFiB,CAEZ,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACd,UAAMC,MAAM,GAAGF,CAAC,CAACG,IAAF,CAAOC,WAAP,EAAf;AACA,UAAMC,MAAM,GAAGJ,CAAC,CAACE,IAAF,CAAOC,WAAP,EAAf;;AACA,QAAIF,MAAM,GAAGG,MAAb,EAAqB;AACnB,aAAO,CAAC,CAAR;AACD;;AACD,QAAIH,MAAM,GAAGG,MAAb,EAAqB;AACnB,aAAO,CAAP;AACD;;AACD,WAAO,CAAP;AACD,GAZiB,CAApB,CAF4B,CAgB5B;;AACA,QAAMC,UAAU,GAAGZ,MAAM,CACtBE,MADgB,CACTC,CAAC,IAAIA,CAAC,CAACC,MADE,EAEhBC,IAFgB,CAEX,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACO,KAAF,CAAQC,IAAR,GAAeP,CAAC,CAACM,KAAF,CAAQC,IAFtB,EAGhBC,OAHgB,EAAnB;AAKA,SAAOd,WAAW,CAACe,MAAZ,CAAmBJ,UAAnB,CAAP;AACD,CAvBD;;AAyBA,MAAMK,OAAO,GAAGvB,MAAM,CAAC,KAAD,CAAQ;AAC9B;AACA,WAAW,CAAC;AAAEwB,EAAAA;AAAF,CAAD,KACPA,KAAK,KAAKpB,MAAM,CAACqB,IAAjB,GAAwBtB,MAAM,CAACuB,SAA/B,GAA2CvB,MAAM,CAACwB,QAAS;AAC/D;AACA;AACA;AACA,uBAAuBzB,WAAW,CAAC0B,EAAG;AACtC,eAAe,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAeA,IAAI,GAAG,MAAH,GAAY,OAAS;AACvD;AACA;AACA;AACA,uBAAuB3B,WAAW,CAAC4B,GAAI;AACvC;AACA;AACA;AACA,CAhBA;KAAMP,O;AAkBN,MAAMQ,aAAa,GAAG/B,MAAM,CAAC,KAAD,CAAQ;AACpC;AACA;AACA;AACA,MAAMgC,KAAK,IACLA,KAAK,CAACC,WAAN,GAAoB9B,MAAM,CAAC+B,uBAA3B,GAAqD,aAAc;AACzE;AACA,wBAAwBF,KAAK,IACvBA,KAAK,CAACR,KAAN,KAAgBpB,MAAM,CAACqB,IAAvB,GAA8BtB,MAAM,CAACgC,MAArC,GAA8ChC,MAAM,CAACiC,KAAM;AACjE;AACA,oBAAoBJ,KAAK,IACnBA,KAAK,CAACC,WAAN,GACI9B,MAAM,CAAC+B,uBADX,GAEI/B,MAAM,CAACkC,iBAAkB;AACnC;AACA,CAfA;MAAMN,a;;AAiBN,MAAMO,UAAN,SAAyBvC,KAAK,CAACwC,SAA/B,CAAyC;AAAA;AAAA;AAAA,SACvCC,KADuC,GAC/B;AACNC,MAAAA,gBAAgB,EAAE;AADZ,KAD+B;;AAAA,SAKvCC,eALuC,GAKrBC,KAAK,IAAI;AACzB,YAAMC,mBAAmB,GAAG,CAACJ,KAAD,EAAQG,KAAR,KAAkB;AAC5C,eAAOH,KAAK,CAACC,gBAAN,KAA2BE,KAAK,CAACE,GAAjC,GAAuCF,KAAK,CAACE,GAA7C,GAAmD,IAA1D;AACD,OAFD;;AAIA,WAAKb,KAAL,CAAWc,cAAX,CAA0BF,mBAAmB,CAAC,KAAKJ,KAAN,EAAaG,KAAb,CAA7C;AAEA,WAAKI,QAAL,CAAcP,KAAK,KAAK;AACtBC,QAAAA,gBAAgB,EAAEG,mBAAmB,CAACJ,KAAD,EAAQG,KAAR;AADf,OAAL,CAAnB;AAGD,KAfsC;AAAA;;AAiBvCK,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEP,MAAAA;AAAF,QAAuB,KAAKD,KAAlC;AACA,wBACE,QAAC,OAAD;AAAS,MAAA,KAAK,EAAE,KAAKR,KAAL,CAAWR,KAA3B;AAAA,gBACG,KAAKQ,KAAL,CAAW1B,MAAX,GACGD,WAAW,CAAC,KAAK2B,KAAL,CAAW1B,MAAZ,CAAX,CAA+B2C,GAA/B,CAAmC,CAACN,KAAD,EAAQO,CAAR,kBACjC,QAAC,aAAD;AAEE,QAAA,OAAO,EAAE,MAAM,KAAKR,eAAL,CAAqBC,KAArB,CAFjB;AAGE,QAAA,WAAW,EAAEF,gBAAgB,KAAKE,KAAK,CAACE,GAH1C;AAIE,QAAA,KAAK,EAAE,KAAKb,KAAL,CAAWR,KAJpB;AAAA,+BAME,QAAC,MAAD;AACE,UAAA,KAAK,EAAEmB,KADT;AAGE,UAAA,KAAK,EAAE,KAAKX,KAAL,CAAWR,KAHpB;AAIE,UAAA,WAAW,EAAEiB,gBAAgB,KAAKE,KAAK,CAACE;AAJ1C,WAEO,WAAWK,CAFlB;AAAA;AAAA;AAAA;AAAA;AANF,SACO,kBAAkBA,CADzB;AAAA;AAAA;AAAA;AAAA,cADF,CADH,GAgBGC;AAjBN;AAAA;AAAA;AAAA;AAAA,YADF;AAqBD;;AAxCsC;;AA2CzC,eAAeb,UAAf","sourcesContent":["import React from \"react\";\nimport styled from \"@emotion/styled\";\nimport Avatar from \"./avatar\";\nimport { breakpoints, colors, themes } from \"../theme\";\n\nconst orderSnakes = snakes => {\n  // Sort by name\n  const aliveSnakes = snakes\n    .filter(s => !s.isDead)\n    .sort((a, b) => {\n      const aLower = a.name.toLowerCase();\n      const bLower = b.name.toLowerCase();\n      if (aLower < bLower) {\n        return -1;\n      }\n      if (aLower > bLower) {\n        return 1;\n      }\n      return 0;\n    });\n\n  // Sort by turn died, descending\n  const deadSnakes = snakes\n    .filter(s => s.isDead)\n    .sort((a, b) => a.death.turn - b.death.turn)\n    .reverse();\n\n  return aliveSnakes.concat(deadSnakes);\n};\n\nconst Wrapper = styled(\"div\")`\n  display: none;\n  color: ${({ theme }) =>\n    theme === themes.dark ? colors.lightText : colors.darkText};\n  font-weight: 600;\n  font-size: 1.4rem;\n\n  @media (min-width: ${breakpoints.md}) {\n    display: ${({ hide }) => (hide ? \"none\" : \"block\")};\n    font-size: 1.8rem;\n  }\n\n  @media (min-width: ${breakpoints.xxl}) {\n    font-size: 3.2rem;\n    letter-spacing: 0.1rem;\n  }\n`;\n\nconst AvatarWrapper = styled(\"div\")`\n  padding: 0.75rem;\n  transition: background-color 0.2s, box-shadow 0.2s;\n  border: 2px solid\n    ${props =>\n      props.highlighted ? colors.avatarHighlightedBorder : \"transparent\"};\n  &:hover {\n    background-color: ${props =>\n      props.theme === themes.dark ? colors.purple : colors.light};\n    cursor: pointer;\n    border-color: ${props =>\n      props.highlighted\n        ? colors.avatarHighlightedBorder\n        : colors.avatarHoverBorder};\n  }\n`;\n\nclass Scoreboard extends React.Component {\n  state = {\n    highlightedSnake: null\n  };\n\n  toggleHighlight = snake => {\n    const getSnakeToHighlight = (state, snake) => {\n      return state.highlightedSnake !== snake._id ? snake._id : null;\n    };\n\n    this.props.highlightSnake(getSnakeToHighlight(this.state, snake));\n\n    this.setState(state => ({\n      highlightedSnake: getSnakeToHighlight(state, snake)\n    }));\n  };\n\n  render() {\n    const { highlightedSnake } = this.state;\n    return (\n      <Wrapper theme={this.props.theme}>\n        {this.props.snakes\n          ? orderSnakes(this.props.snakes).map((snake, i) => (\n              <AvatarWrapper\n                key={\"avatarwrapper\" + i}\n                onClick={() => this.toggleHighlight(snake)}\n                highlighted={highlightedSnake === snake._id}\n                theme={this.props.theme}\n              >\n                <Avatar\n                  snake={snake}\n                  key={\"avatar\" + i}\n                  theme={this.props.theme}\n                  highlighted={highlightedSnake === snake._id}\n                />\n              </AvatarWrapper>\n            ))\n          : undefined}\n      </Wrapper>\n    );\n  }\n}\n\nexport default Scoreboard;\n"]},"metadata":{},"sourceType":"module"}