{"ast":null,"code":"import{configureStore}from\"@reduxjs/toolkit\";import rootReducer from\"../reducers\";import settingsReducer,{settingsStoreListener}from\"../components/settings/settings-slice\";import{initialSettings}from\"../components/settings/defaults\";import{themes}from\"../theme\";import{rehydrateLocalSettings,storageAvailable}from\"./storage\";function rehydrateInitialState(){var initialState={game:{options:null,grid:[],frames:[],endEvent:null,paused:true,gameNotFound:false,highlightedSnake:null,theme:themes.light},settings:initialSettings};if(storageAvailable(\"localStorage\")){initialState.settings=rehydrateLocalSettings();initialState.settings.persistAvailable=true;}else{console.info(\"Please enable localStorage for an improved experience that allows you to persist board settings.\");}return initialState;}var store=configureStore({reducer:{game:rootReducer,settings:settingsReducer},middleware:function middleware(getDefaultMiddleware){return getDefaultMiddleware({immutableCheck:false,serializableCheck:false});},preloadedState:rehydrateInitialState()});store.subscribe(function(){settingsStoreListener(store.getState());});export default store;","map":{"version":3,"sources":["/home/y-yabust/CC/cc-replay/src/app/store.js"],"names":["configureStore","rootReducer","settingsReducer","settingsStoreListener","initialSettings","themes","rehydrateLocalSettings","storageAvailable","rehydrateInitialState","initialState","game","options","grid","frames","endEvent","paused","gameNotFound","highlightedSnake","theme","light","settings","persistAvailable","console","info","store","reducer","middleware","getDefaultMiddleware","immutableCheck","serializableCheck","preloadedState","subscribe","getState"],"mappings":"AAAA,OAASA,cAAT,KAA+B,kBAA/B,CACA,MAAOC,CAAAA,WAAP,KAAwB,aAAxB,CACA,MAAOC,CAAAA,eAAP,EACEC,qBADF,KAEO,uCAFP,CAGA,OAASC,eAAT,KAAgC,iCAAhC,CACA,OAASC,MAAT,KAAuB,UAAvB,CACA,OAASC,sBAAT,CAAiCC,gBAAjC,KAAyD,WAAzD,CAEA,QAASC,CAAAA,qBAAT,EAAiC,CAC/B,GAAIC,CAAAA,YAAY,CAAG,CACjBC,IAAI,CAAE,CACJC,OAAO,CAAE,IADL,CAEJC,IAAI,CAAE,EAFF,CAGJC,MAAM,CAAE,EAHJ,CAIJC,QAAQ,CAAE,IAJN,CAKJC,MAAM,CAAE,IALJ,CAMJC,YAAY,CAAE,KANV,CAOJC,gBAAgB,CAAE,IAPd,CAQJC,KAAK,CAAEb,MAAM,CAACc,KARV,CADW,CAWjBC,QAAQ,CAAEhB,eAXO,CAAnB,CAcA,GAAIG,gBAAgB,CAAC,cAAD,CAApB,CAAsC,CACpCE,YAAY,CAACW,QAAb,CAAwBd,sBAAsB,EAA9C,CACAG,YAAY,CAACW,QAAb,CAAsBC,gBAAtB,CAAyC,IAAzC,CACD,CAHD,IAGO,CACLC,OAAO,CAACC,IAAR,CACE,kGADF,EAGD,CAED,MAAOd,CAAAA,YAAP,CACD,CAED,GAAMe,CAAAA,KAAK,CAAGxB,cAAc,CAAC,CAC3ByB,OAAO,CAAE,CACPf,IAAI,CAAET,WADC,CAEPmB,QAAQ,CAAElB,eAFH,CADkB,CAK3BwB,UAAU,CAAE,oBAAAC,oBAAoB,QAC9BA,CAAAA,oBAAoB,CAAC,CACnBC,cAAc,CAAE,KADG,CAEnBC,iBAAiB,CAAE,KAFA,CAAD,CADU,EALL,CAU3BC,cAAc,CAAEtB,qBAAqB,EAVV,CAAD,CAA5B,CAaAgB,KAAK,CAACO,SAAN,CAAgB,UAAM,CACpB5B,qBAAqB,CAACqB,KAAK,CAACQ,QAAN,EAAD,CAArB,CACD,CAFD,EAIA,cAAeR,CAAAA,KAAf","sourcesContent":["import { configureStore } from \"@reduxjs/toolkit\";\nimport rootReducer from \"../reducers\";\nimport settingsReducer, {\n  settingsStoreListener\n} from \"../components/settings/settings-slice\";\nimport { initialSettings } from \"../components/settings/defaults\";\nimport { themes } from \"../theme\";\nimport { rehydrateLocalSettings, storageAvailable } from \"./storage\";\n\nfunction rehydrateInitialState() {\n  let initialState = {\n    game: {\n      options: null,\n      grid: [],\n      frames: [],\n      endEvent: null,\n      paused: true,\n      gameNotFound: false,\n      highlightedSnake: null,\n      theme: themes.light\n    },\n    settings: initialSettings\n  };\n\n  if (storageAvailable(\"localStorage\")) {\n    initialState.settings = rehydrateLocalSettings();\n    initialState.settings.persistAvailable = true;\n  } else {\n    console.info(\n      \"Please enable localStorage for an improved experience that allows you to persist board settings.\"\n    );\n  }\n\n  return initialState;\n}\n\nconst store = configureStore({\n  reducer: {\n    game: rootReducer,\n    settings: settingsReducer\n  },\n  middleware: getDefaultMiddleware =>\n    getDefaultMiddleware({\n      immutableCheck: false,\n      serializableCheck: false\n    }),\n  preloadedState: rehydrateInitialState()\n});\n\nstore.subscribe(() => {\n  settingsStoreListener(store.getState());\n});\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}