{"ast":null,"code":"import _classCallCheck from\"/Users/yabu/CC/board/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/yabu/CC/board/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/yabu/CC/board/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/yabu/CC/board/node_modules/@babel/runtime/helpers/esm/createSuper\";import _taggedTemplateLiteral from\"/Users/yabu/CC/board/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import React from\"react\";import styled from\"@emotion/styled\";import{colors,themes}from\"../theme\";import{getReadableCauseOfDeath}from\"../utils/engine-client\";import ErrorMessage from\"./scoreboard/error-message/ErrorMessage\";import\"./scoreboard/avatar/Avatar.css\";import StatusIndicator from\"./scoreboard/status-indicator/StatusIndicator\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var AvatarWrapper=styled(\"div\")(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  width: 100%;\\n  white-space: nowrap;\\n  overflow: hidden;\\n\\n  opacity: \",\";\\n\"])),function(props){return props.isEliminated?\"0.5\":\"1.0\";});var Name=styled(\"span\")(function(_ref){var theme=_ref.theme;return{display:\"block\",textShadow:theme===themes.dark?\"0 1px 2px rgba(0,0,0,0.90)\":null};});var Length=styled(\"span\")(function(_ref2){var theme=_ref2.theme;return{marginLeft:\"auto\",textShadow:theme===themes.dark?\"0 1px 2px rgba(0,0,0,0.90)\":null};});var AuthorWrapper=styled(\"div\")({fontSize:\"1rem\",fontWeight:\"400\",display:\"flex\",flexDirection:\"row\",height:\"1.25rem\"});var Author=styled(\"span\")(function(_ref3){var theme=_ref3.theme;return{display:\"block\",flexGrow:1,textShadow:theme===themes.dark?\"0 1px 2px rgba(0,0,0,0.90)\":null};});var Latency=styled(\"span\")(function(_ref4){var theme=_ref4.theme,latency=_ref4.latency;return{color:latency===\"0\"?\"red\":\"inherit\",marginLeft:\"auto\",textShadow:theme===themes.dark?\"0 1px 2px rgba(0,0,0,0.90)\":null,display:latency===\"\"?\"none\":\"block\"};});var HealthBarWrapper=styled(\"div\")({marginTop:\"0.2rem\",width:\"100%\",height:\"1.0rem\",background:colors.healthBarBackground,borderRadius:\"1.5rem\"});var HealthBar=styled(\"div\")(function(_ref5){var color=_ref5.color;return{height:\"100%\",backgroundColor:color,borderRadius:\"inherit\"};});var CauseOfDeath=styled(\"div\")(function(_ref6){var theme=_ref6.theme;return{width:\"100%\",marginTop:\"0.2rem\",fontSize:\"1rem\",lineHeight:\"1rem\",color:theme===themes.dark?colors.lightText:colors.darkText};});var Avatar=/*#__PURE__*/function(_React$Component){_inherits(Avatar,_React$Component);var _super=_createSuper(Avatar);function Avatar(props){var _this;_classCallCheck(this,Avatar);_this=_super.call(this,props);_this.state={showError:false};return _this;}_createClass(Avatar,[{key:\"render\",value:function render(){return/*#__PURE__*/_jsxs(AvatarWrapper,{isEliminated:this.props.snake.death?true:false,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(Name,{children:this.props.snake.name}),/*#__PURE__*/_jsx(Length,{children:this.props.snake.body.length})]}),/*#__PURE__*/_jsxs(AuthorWrapper,{children:[/*#__PURE__*/_jsxs(Author,{children:[\"by \",this.props.snake.author]}),/*#__PURE__*/_jsx(StatusIndicator,{errorMessage:this.props.snake.error}),/*#__PURE__*/_jsxs(Latency,{latency:this.props.snake.latency,children:[this.props.snake.latency,\" ms\"]})]}),this.props.snake.death?/*#__PURE__*/_jsx(CauseOfDeath,{theme:this.props.theme,children:getReadableCauseOfDeath(this.props.snake.death)}):/*#__PURE__*/_jsx(HealthBarWrapper,{children:/*#__PURE__*/_jsx(HealthBar,{color:this.props.snake.color,style:{width:\"\".concat(this.props.snake.health,\"%\")}})}),/*#__PURE__*/_jsx(ErrorMessage,{error:this.props.highlighted?this.props.snake.error:\"\"})]});}}]);return Avatar;}(React.Component);export default Avatar;","map":{"version":3,"sources":["/Users/yabu/CC/board/src/components/avatar.jsx"],"names":["React","styled","colors","themes","getReadableCauseOfDeath","ErrorMessage","StatusIndicator","AvatarWrapper","props","isEliminated","Name","theme","display","textShadow","dark","Length","marginLeft","AuthorWrapper","fontSize","fontWeight","flexDirection","height","Author","flexGrow","Latency","latency","color","HealthBarWrapper","marginTop","width","background","healthBarBackground","borderRadius","HealthBar","backgroundColor","CauseOfDeath","lineHeight","lightText","darkText","Avatar","state","showError","snake","death","name","body","length","author","error","health","highlighted","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport styled from \"@emotion/styled\";\nimport { colors, themes } from \"../theme\";\nimport { getReadableCauseOfDeath } from \"../utils/engine-client\";\nimport ErrorMessage from \"./scoreboard/error-message/ErrorMessage\";\n\nimport \"./scoreboard/avatar/Avatar.css\";\nimport StatusIndicator from \"./scoreboard/status-indicator/StatusIndicator\";\n\nconst AvatarWrapper = styled(\"div\")`\n  width: 100%;\n  white-space: nowrap;\n  overflow: hidden;\n\n  opacity: ${props => (props.isEliminated ? \"0.5\" : \"1.0\")};\n`;\n\nconst Name = styled(\"span\")(({ theme }) => ({\n  display: \"block\",\n  textShadow: theme === themes.dark ? \"0 1px 2px rgba(0,0,0,0.90)\" : null\n}));\n\nconst Length = styled(\"span\")(({ theme }) => ({\n  marginLeft: \"auto\",\n  textShadow: theme === themes.dark ? \"0 1px 2px rgba(0,0,0,0.90)\" : null\n}));\n\nconst AuthorWrapper = styled(\"div\")({\n  fontSize: \"1rem\",\n  fontWeight: \"400\",\n  display: \"flex\",\n  flexDirection: \"row\",\n  height: \"1.25rem\"\n});\n\nconst Author = styled(\"span\")(({ theme }) => ({\n  display: \"block\",\n  flexGrow: 1,\n  textShadow: theme === themes.dark ? \"0 1px 2px rgba(0,0,0,0.90)\" : null\n}));\n\nconst Latency = styled(\"span\")(({ theme, latency }) => ({\n  color: latency === \"0\" ? \"red\" : \"inherit\",\n  marginLeft: \"auto\",\n  textShadow: theme === themes.dark ? \"0 1px 2px rgba(0,0,0,0.90)\" : null,\n  display: latency === \"\" ? \"none\" : \"block\"\n}));\n\nconst HealthBarWrapper = styled(\"div\")({\n  marginTop: \"0.2rem\",\n  width: \"100%\",\n  height: \"1.0rem\",\n  background: colors.healthBarBackground,\n  borderRadius: \"1.5rem\"\n});\n\nconst HealthBar = styled(\"div\")(({ color }) => ({\n  height: \"100%\",\n  backgroundColor: color,\n  borderRadius: \"inherit\"\n}));\n\nconst CauseOfDeath = styled(\"div\")(({ theme }) => ({\n  width: \"100%\",\n  marginTop: \"0.2rem\",\n  fontSize: \"1rem\",\n  lineHeight: \"1rem\",\n  color: theme === themes.dark ? colors.lightText : colors.darkText\n}));\n\nclass Avatar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showError: false\n    };\n  }\n  render() {\n    return (\n      <AvatarWrapper isEliminated={this.props.snake.death ? true : false}>\n        <div className=\"row\">\n          <Name>{this.props.snake.name}</Name>\n          <Length>{this.props.snake.body.length}</Length>\n        </div>\n        <AuthorWrapper>\n          <Author>by {this.props.snake.author}</Author>\n          <StatusIndicator errorMessage={this.props.snake.error} />\n          <Latency latency={this.props.snake.latency}>\n            {this.props.snake.latency} ms\n          </Latency>\n        </AuthorWrapper>\n        {this.props.snake.death ? (\n          <CauseOfDeath theme={this.props.theme}>\n            {getReadableCauseOfDeath(this.props.snake.death)}\n          </CauseOfDeath>\n        ) : (\n          <HealthBarWrapper>\n            <HealthBar\n              color={this.props.snake.color}\n              style={{\n                width: `${this.props.snake.health}%`\n              }}\n            />\n          </HealthBarWrapper>\n        )}\n        <ErrorMessage\n          error={this.props.highlighted ? this.props.snake.error : \"\"}\n        />\n      </AvatarWrapper>\n    );\n  }\n}\n\nexport default Avatar;\n"]},"metadata":{},"sourceType":"module"}