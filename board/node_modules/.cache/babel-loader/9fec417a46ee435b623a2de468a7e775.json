{"ast":null,"code":"var _jsxFileName = \"/Users/yabu/CC/board/src/components/settings/SettingsPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { autoPlayUpdated, currentAutoplay, currentFrameRate, currentTheme, currentShowFrameScrubber, frameRateUpdated, themeSelected, showFrameScrubberUpdated, currentShowCoordinateLabels, showCoordinateLabelsUpdated } from \"./settings-slice\";\nimport PlaybackSpeed from \"./playback/PlaybackSpeed\";\nimport styles from \"./SettingsPage.module.css\";\nimport { useHistory } from \"react-router-dom\";\nimport { togglePlayButtons, pauseGame, themeChanged } from \"../../actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SettingsPage = () => {\n  _s();\n\n  const history = useHistory();\n  const theme = useSelector(currentTheme);\n  const playbackSpeed = useSelector(currentFrameRate);\n  const autoplay = useSelector(currentAutoplay);\n  const showFrameScrubber = useSelector(currentShowFrameScrubber);\n  const showCoordinateLabels = useSelector(currentShowCoordinateLabels);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(togglePlayButtons(\"hide\"));\n    dispatch(pauseGame());\n  });\n\n  function dispatchSpeedChange(fps) {\n    dispatch(frameRateUpdated(fps));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Playback Settings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n          children: \"Playback Speed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.info,\n          children: \"Adjust the playback speed of your games\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.inputContainer,\n          children: /*#__PURE__*/_jsxDEV(PlaybackSpeed, {\n            default: playbackSpeed,\n            onChange: dispatchSpeedChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n          children: \"Theme\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.info,\n          children: \"Change your game theme colors\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.inputContainer && styles.row,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              value: \"light\",\n              name: \"theme\",\n              checked: theme === \"light\",\n              onChange: e => dispatch(themeSelected(e.target.value)) && dispatch(themeChanged(e.target.value))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.radio\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this), \"Light\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              value: \"dark\",\n              name: \"theme\",\n              checked: theme === \"dark\",\n              onChange: e => dispatch(themeSelected(e.target.value)) && dispatch(themeChanged(e.target.value))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.radio\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this), \"Projector\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n          children: \"Autoplay\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.info,\n          children: \"All games will start playing as soon as the game loads\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.inputContainer,\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              name: \"autoplay\",\n              checked: autoplay,\n              onChange: e => dispatch(autoPlayUpdated(e.target.checked))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.checkmark\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this), autoplay ? \"On\" : \"Off\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n          children: \"Frame Scrubber [EXPERIMENTAL]\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.info,\n          children: [\"Display progress bar that shows current frame and allows quickly jumping to specific frames. \\xA0\", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"https://github.com/BattlesnakeOfficial/feedback/discussions/171\",\n            target: \"_blank\",\n            rel: \"noreferrer\",\n            children: \"Let us know what you think!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.inputContainer,\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              name: \"showFrameScrubber\",\n              checked: showFrameScrubber,\n              onChange: e => dispatch(showFrameScrubberUpdated(e.target.checked))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.checkmark\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this), showFrameScrubber ? \"On\" : \"Off\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n          children: \"Show Coordinate Labels [EXPERIMENTAL]\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.info,\n          children: [\"Adds coordinate labels to the game board. \\xA0 These go from 0 to the width/height of the board to make it easier to debug games\", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"https://github.com/orgs/BattlesnakeOfficial/discussions/231\",\n            target: \"_blank\",\n            rel: \"noreferrer\",\n            children: \"Let us know what you think!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.inputContainer,\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              name: \"showCoordinateLabels\",\n              checked: showCoordinateLabels,\n              onChange: e => dispatch(showCoordinateLabelsUpdated(e.target.checked))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.checkmark\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 15\n            }, this), showCoordinateLabels ? \"On\" : \"Off\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        className: styles.centered,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => history.goBack(),\n          children: \"Return to Game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SettingsPage, \"f9eYsrhj7lMAEUPQTxOXb9nZgbU=\", false, function () {\n  return [useHistory, useSelector, useSelector, useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = SettingsPage;\nexport default SettingsPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SettingsPage\");","map":{"version":3,"sources":["/Users/yabu/CC/board/src/components/settings/SettingsPage.jsx"],"names":["React","useEffect","useDispatch","useSelector","autoPlayUpdated","currentAutoplay","currentFrameRate","currentTheme","currentShowFrameScrubber","frameRateUpdated","themeSelected","showFrameScrubberUpdated","currentShowCoordinateLabels","showCoordinateLabelsUpdated","PlaybackSpeed","styles","useHistory","togglePlayButtons","pauseGame","themeChanged","SettingsPage","history","theme","playbackSpeed","autoplay","showFrameScrubber","showCoordinateLabels","dispatch","dispatchSpeedChange","fps","info","inputContainer","row","e","target","value","radio","checked","checkmark","centered","goBack"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  autoPlayUpdated,\n  currentAutoplay,\n  currentFrameRate,\n  currentTheme,\n  currentShowFrameScrubber,\n  frameRateUpdated,\n  themeSelected,\n  showFrameScrubberUpdated,\n  currentShowCoordinateLabels,\n  showCoordinateLabelsUpdated\n} from \"./settings-slice\";\nimport PlaybackSpeed from \"./playback/PlaybackSpeed\";\nimport styles from \"./SettingsPage.module.css\";\nimport { useHistory } from \"react-router-dom\";\nimport { togglePlayButtons, pauseGame, themeChanged } from \"../../actions\";\n\nconst SettingsPage = () => {\n  const history = useHistory();\n  const theme = useSelector(currentTheme);\n  const playbackSpeed = useSelector(currentFrameRate);\n  const autoplay = useSelector(currentAutoplay);\n  const showFrameScrubber = useSelector(currentShowFrameScrubber);\n  const showCoordinateLabels = useSelector(currentShowCoordinateLabels);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(togglePlayButtons(\"hide\"));\n    dispatch(pauseGame());\n  });\n\n  function dispatchSpeedChange(fps) {\n    dispatch(frameRateUpdated(fps));\n  }\n\n  return (\n    <main>\n      <section>\n        <h2>Playback Settings</h2>\n        <fieldset>\n          <legend>Playback Speed</legend>\n          <div className={styles.info}>\n            Adjust the playback speed of your games\n          </div>\n          <div className={styles.inputContainer}>\n            <PlaybackSpeed\n              default={playbackSpeed}\n              onChange={dispatchSpeedChange}\n            />\n          </div>\n        </fieldset>\n        <fieldset>\n          <legend>Theme</legend>\n          <div className={styles.info}>Change your game theme colors</div>\n          <div className={styles.inputContainer && styles.row}>\n            <label>\n              <input\n                type=\"radio\"\n                value=\"light\"\n                name=\"theme\"\n                checked={theme === \"light\"}\n                onChange={e =>\n                  dispatch(themeSelected(e.target.value)) &&\n                  dispatch(themeChanged(e.target.value))\n                }\n              />\n              <span className={styles.radio} />\n              Light\n            </label>\n            <label>\n              <input\n                type=\"radio\"\n                value=\"dark\"\n                name=\"theme\"\n                checked={theme === \"dark\"}\n                onChange={e =>\n                  dispatch(themeSelected(e.target.value)) &&\n                  dispatch(themeChanged(e.target.value))\n                }\n              />\n              <span className={styles.radio} />\n              Projector\n            </label>\n          </div>\n        </fieldset>\n        <fieldset>\n          <legend>Autoplay</legend>\n          <div className={styles.info}>\n            All games will start playing as soon as the game loads\n          </div>\n          <div className={styles.inputContainer}>\n            <label>\n              <input\n                type=\"checkbox\"\n                name=\"autoplay\"\n                checked={autoplay}\n                onChange={e => dispatch(autoPlayUpdated(e.target.checked))}\n              />\n              <span className={styles.checkmark} />\n              {autoplay ? \"On\" : \"Off\"}\n            </label>\n          </div>\n        </fieldset>\n        <fieldset>\n          <legend>Frame Scrubber [EXPERIMENTAL]</legend>\n          <div className={styles.info}>\n            Display progress bar that shows current frame and allows quickly\n            jumping to specific frames. &nbsp;\n            <a\n              href=\"https://github.com/BattlesnakeOfficial/feedback/discussions/171\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              Let us know what you think!\n            </a>\n          </div>\n          <div className={styles.inputContainer}>\n            <label>\n              <input\n                type=\"checkbox\"\n                name=\"showFrameScrubber\"\n                checked={showFrameScrubber}\n                onChange={e =>\n                  dispatch(showFrameScrubberUpdated(e.target.checked))\n                }\n              />\n              <span className={styles.checkmark} />\n              {showFrameScrubber ? \"On\" : \"Off\"}\n            </label>\n          </div>\n        </fieldset>\n        <fieldset>\n          <legend>Show Coordinate Labels [EXPERIMENTAL]</legend>\n          <div className={styles.info}>\n            Adds coordinate labels to the game board. &nbsp; These go from 0 to\n            the width/height of the board to make it easier to debug games\n            <a\n              href=\"https://github.com/orgs/BattlesnakeOfficial/discussions/231\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              Let us know what you think!\n            </a>\n          </div>\n          <div className={styles.inputContainer}>\n            <label>\n              <input\n                type=\"checkbox\"\n                name=\"showCoordinateLabels\"\n                checked={showCoordinateLabels}\n                onChange={e =>\n                  dispatch(showCoordinateLabelsUpdated(e.target.checked))\n                }\n              />\n              <span className={styles.checkmark} />\n              {showCoordinateLabels ? \"On\" : \"Off\"}\n            </label>\n          </div>\n        </fieldset>\n        <fieldset className={styles.centered}>\n          <button onClick={() => history.goBack()}>Return to Game</button>\n        </fieldset>\n      </section>\n    </main>\n  );\n};\n\nexport default SettingsPage;\n"]},"metadata":{},"sourceType":"module"}