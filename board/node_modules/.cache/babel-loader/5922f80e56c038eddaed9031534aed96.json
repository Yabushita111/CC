{"ast":null,"code":"import _slicedToArray from\"/Users/yabu/CC/board/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from\"react\";import{colors}from\"../../../theme\";import\"./ErrorMessage.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var errorColor={color:colors.danger};function getIcon(code){return\"error\";}var ErrorMessage=function ErrorMessage(props){var code,message;if(props.error===\"\"){return\"\";}var _props$error$toString=props.error.toString().split(\":\");var _props$error$toString2=_slicedToArray(_props$error$toString,2);code=_props$error$toString2[0];message=_props$error$toString2[1];return/*#__PURE__*/_jsxs(\"div\",{className:\"error-message\",style:errorColor,children:[/*#__PURE__*/_jsx(\"span\",{className:\"material-icons material-icons-inline\",children:getIcon(code)}),/*#__PURE__*/_jsx(\"span\",{children:message})]});};export default ErrorMessage;","map":{"version":3,"sources":["/Users/yabu/CC/board/src/components/scoreboard/error-message/ErrorMessage.jsx"],"names":["React","colors","errorColor","color","danger","getIcon","code","ErrorMessage","props","message","error","toString","split"],"mappings":"uGAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,MAAT,KAAuB,gBAAvB,CACA,MAAO,oBAAP,C,wFAEA,GAAMC,CAAAA,UAAU,CAAG,CACjBC,KAAK,CAAEF,MAAM,CAACG,MADG,CAAnB,CAIA,QAASC,CAAAA,OAAT,CAAiBC,IAAjB,CAAuB,CACrB,MAAO,OAAP,CACD,CAED,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAAAC,KAAK,CAAI,CAC5B,GAAIF,CAAAA,IAAJ,CAAUG,OAAV,CAEA,GAAID,KAAK,CAACE,KAAN,GAAgB,EAApB,CAAwB,CACtB,MAAO,EAAP,CACD,CAL2B,0BAOVF,KAAK,CAACE,KAAN,CAAYC,QAAZ,GAAuBC,KAAvB,CAA6B,GAA7B,CAPU,oEAO3BN,IAP2B,2BAOrBG,OAPqB,2BAS5B,mBACE,aAAK,SAAS,CAAC,eAAf,CAA+B,KAAK,CAAEP,UAAtC,wBACE,aAAM,SAAS,CAAC,sCAAhB,UACGG,OAAO,CAACC,IAAD,CADV,EADF,cAIE,sBAAOG,OAAP,EAJF,GADF,CAQD,CAjBD,CAmBA,cAAeF,CAAAA,YAAf","sourcesContent":["import React from \"react\";\nimport { colors } from \"../../../theme\";\nimport \"./ErrorMessage.css\";\n\nconst errorColor = {\n  color: colors.danger\n};\n\nfunction getIcon(code) {\n  return \"error\";\n}\n\nconst ErrorMessage = props => {\n  let code, message;\n\n  if (props.error === \"\") {\n    return \"\";\n  }\n\n  [code, message] = props.error.toString().split(\":\");\n\n  return (\n    <div className=\"error-message\" style={errorColor}>\n      <span className=\"material-icons material-icons-inline\">\n        {getIcon(code)}\n      </span>\n      <span>{message}</span>\n    </div>\n  );\n};\n\nexport default ErrorMessage;\n"]},"metadata":{},"sourceType":"module"}