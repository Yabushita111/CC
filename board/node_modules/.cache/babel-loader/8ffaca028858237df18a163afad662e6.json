{"ast":null,"code":"import { formatFrame, sanitizeFrame } from \"../utils/game-state\";\nimport * as types from \"../actions/action-types\";\nimport { themes } from \"../theme\";\nconst initialState = {\n  options: null,\n  grid: [],\n  frames: [],\n  endEvent: {},\n  paused: true,\n  gameNotFound: false,\n  highlightedSnake: null,\n  theme: themes.light\n};\n\nconst reducers = (state = initialState, action) => {\n  switch (action.type) {\n    case types.SET_THEME:\n      return { ...state,\n        theme: action.theme\n      };\n\n    case types.SET_GAME_OPTIONS:\n      action.gameOptions.turn = parseInt(action.gameOptions.turn) || 0;\n      action.gameOptions.loop = action.gameOptions.loop && action.gameOptions.loop === \"true\";\n      return { ...state,\n        gameOptions: action.gameOptions\n      };\n\n    case types.GAME_NOT_FOUND:\n      return { ...state,\n        gameNotFound: true\n      };\n\n    case types.PAUSE_GAME:\n      return { ...state,\n        paused: true\n      };\n\n    case types.GAME_OVER:\n      windowPostMessage({\n        action: action.type,\n        endEvent: action.endEvent\n      });\n      return { ...state,\n        paused: true\n      };\n\n    case types.RESUME_GAME:\n      return { ...state,\n        paused: false\n      };\n\n    case types.SET_CURRENT_FRAME:\n      windowPostMessage({\n        action: action.type,\n        frame: sanitizeFrame(action.frame)\n      });\n      return { ...state,\n        currentFrame: action.frame\n      };\n\n    case types.RECEIVE_FRAME:\n      const frame = formatFrame(action.frame);\n      return { ...state,\n        ruleset: action.game.Game.Ruleset,\n        grid: {\n          height: action.game.Game.Height,\n          width: action.game.Game.Width\n        },\n        frames: [...state.frames, frame] // Be smart: this consumes A LOT of memory...\n\n      };\n\n    case types.RECEIVE_EVENT_END:\n      return { ...state,\n        endEvent: action.endEvent,\n        frames: [...state.frames, action.frame]\n      };\n\n    case types.REQUEST_FRAMES:\n      return { ...state\n      };\n\n    case types.FETCH_FRAMES:\n      return { ...state\n      };\n\n    case types.HIGHLIGHT_SNAKE:\n      windowPostMessage({\n        action: action.type,\n        id: action.snakeId,\n        name: action.snakeId ? state.currentFrame.snakes.find(s => s._id === action.snakeId).name : null\n      });\n      return { ...state,\n        highlightedSnake: action.snakeId\n      };\n\n    case types.TOGGLE_SETTINGS_VIEW:\n      windowPostMessage({\n        action: action.type,\n        value: action.showHide\n      });\n      return { ...state\n      };\n\n    case types.THEME_CHANGED:\n      windowPostMessage({\n        action: action.type,\n        value: action.theme\n      });\n      return { ...state\n      };\n\n    default:\n      return { ...state\n      };\n  }\n};\n\nfunction windowPostMessage(data) {\n  if (!window.parent) {\n    return;\n  }\n\n  try {\n    window.parent.postMessage(data, \"*\");\n  } catch (e) {\n    console.error(e);\n  }\n}\n\nexport default reducers;","map":{"version":3,"sources":["/Users/yabu/board/src/reducers/index.js"],"names":["formatFrame","sanitizeFrame","types","themes","initialState","options","grid","frames","endEvent","paused","gameNotFound","highlightedSnake","theme","light","reducers","state","action","type","SET_THEME","SET_GAME_OPTIONS","gameOptions","turn","parseInt","loop","GAME_NOT_FOUND","PAUSE_GAME","GAME_OVER","windowPostMessage","RESUME_GAME","SET_CURRENT_FRAME","frame","currentFrame","RECEIVE_FRAME","ruleset","game","Game","Ruleset","height","Height","width","Width","RECEIVE_EVENT_END","REQUEST_FRAMES","FETCH_FRAMES","HIGHLIGHT_SNAKE","id","snakeId","name","snakes","find","s","_id","TOGGLE_SETTINGS_VIEW","value","showHide","THEME_CHANGED","data","window","parent","postMessage","e","console","error"],"mappings":"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","sourcesContent":["import { formatFrame, sanitizeFrame } from \"../utils/game-state\";\nimport * as types from \"../actions/action-types\";\nimport { themes } from \"../theme\";\n\nconst initialState = {\n  options: null,\n  grid: [],\n  frames: [],\n  endEvent: {},\n  paused: true,\n  gameNotFound: false,\n  highlightedSnake: null,\n  theme: themes.light\n};\n\nconst reducers = (state = initialState, action) => {\n  switch (action.type) {\n    case types.SET_THEME:\n      return { ...state, theme: action.theme };\n    case types.SET_GAME_OPTIONS:\n      action.gameOptions.turn = parseInt(action.gameOptions.turn) || 0;\n      action.gameOptions.loop =\n        action.gameOptions.loop && action.gameOptions.loop === \"true\";\n      return { ...state, gameOptions: action.gameOptions };\n    case types.GAME_NOT_FOUND:\n      return { ...state, gameNotFound: true };\n    case types.PAUSE_GAME:\n      return { ...state, paused: true };\n    case types.GAME_OVER:\n      windowPostMessage({\n        action: action.type,\n        endEvent: action.endEvent\n      });\n      return { ...state, paused: true };\n    case types.RESUME_GAME:\n      return { ...state, paused: false };\n    case types.SET_CURRENT_FRAME:\n      windowPostMessage({\n        action: action.type,\n        frame: sanitizeFrame(action.frame)\n      });\n      return { ...state, currentFrame: action.frame };\n    case types.RECEIVE_FRAME:\n      const frame = formatFrame(action.frame);\n      return {\n        ...state,\n        ruleset: action.game.Game.Ruleset,\n        grid: {\n          height: action.game.Game.Height,\n          width: action.game.Game.Width\n        },\n        frames: [...state.frames, frame] // Be smart: this consumes A LOT of memory...\n      };\n    case types.RECEIVE_EVENT_END:\n      return {\n        ...state,\n        endEvent: action.endEvent,\n        frames: [...state.frames, action.frame]\n      };\n    case types.REQUEST_FRAMES:\n      return { ...state };\n    case types.FETCH_FRAMES:\n      return { ...state };\n    case types.HIGHLIGHT_SNAKE:\n      windowPostMessage({\n        action: action.type,\n        id: action.snakeId,\n        name: action.snakeId\n          ? state.currentFrame.snakes.find(s => s._id === action.snakeId).name\n          : null\n      });\n      return { ...state, highlightedSnake: action.snakeId };\n    case types.TOGGLE_SETTINGS_VIEW:\n      windowPostMessage({\n        action: action.type,\n        value: action.showHide\n      });\n      return { ...state };\n    case types.THEME_CHANGED:\n      windowPostMessage({\n        action: action.type,\n        value: action.theme\n      });\n      return { ...state };\n    default:\n      return { ...state };\n  }\n};\n\nfunction windowPostMessage(data) {\n  if (!window.parent) {\n    return;\n  }\n  try {\n    window.parent.postMessage(data, \"*\");\n  } catch (e) {\n    console.error(e);\n  }\n}\n\nexport default reducers;\n"]},"metadata":{},"sourceType":"module"}